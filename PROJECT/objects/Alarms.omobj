<type ver="2" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" base-type="Rectangle" uuid="e8a9dba0-e07f-4bfe-95f9-b75887e3f21b" display-name="Alarms" name="Alarms" access-modifier="public">
	<designed target="X" value="0" ver="2"/>
	<designed target="Y" value="0" ver="2"/>
	<designed target="Rotation" value="0" ver="2"/>
	<designed target="Scale" value="1" ver="2"/>
	<designed target="Visible" value="true" ver="2"/>
	<designed target="Enabled" value="true" ver="2"/>
	<designed target="Tooltip" value="" ver="2"/>
	<designed target="Width" value="1000" ver="2"/>
	<designed target="Height" value="600" ver="2"/>
	<designed target="RoundingRadius" value="0" ver="2"/>
	<designed target="PenColor" value="4278190080" ver="2"/>
	<designed target="PenStyle" value="1" ver="2"/>
	<designed target="PenWidth" value="1" ver="2"/>
	<designed target="BrushColor" value="4278190080" ver="2"/>
	<designed target="BrushStyle" value="0" ver="2"/>
	<object access-modifier="private" name="Main_panel" display-name="Main_panel" uuid="9e972878-7f85-455b-a9ce-2479bd5a0857" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="-0.666667" ver="2"/>
		<designed target="Y" value="0" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="1000" ver="2"/>
		<designed target="Height" value="138.462" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="1" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="597d7858-8324-4e8a-a996-425bff2c86a5" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
			<designed target="Weight" value="30" ver="2"/>
		</object>
		<object access-modifier="private" name="ToolBar" display-name="ToolBar" uuid="a97fa27e-afe4-43cc-a219-c3e7751f11d3" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="-1" ver="2"/>
			<designed target="Y" value="0" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="1000" ver="2"/>
			<designed target="Height" value="112.5" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="0xff000000" ver="2"/>
			<designed target="PenStyle" value="0" ver="2"/>
			<designed target="PenWidth" value="1" ver="2"/>
			<designed target="BrushColor" value="0xff000000" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="Blanker_1" display-name="Blanker_1" uuid="8ad0a4c6-bb93-471a-9057-ad07d28b722c" base-type="Blanker" base-type-id="91658436-6b0b-47e1-bf20-c5092f6fa242" ver="2">
				<designed target="X" value="0" ver="2"/>
				<designed target="Y" value="0" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<object access-modifier="private" name="Rectangle_1" display-name="Rectangle_1" uuid="0b68542c-f8a9-4c16-8ba8-b837a7c79393" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
					<designed target="X" value="0" ver="2"/>
					<designed target="Y" value="0" ver="2"/>
					<designed target="Rotation" value="0" ver="2"/>
					<designed target="Scale" value="1" ver="2"/>
					<designed target="Visible" value="true" ver="2"/>
					<designed target="Enabled" value="true" ver="2"/>
					<designed target="Tooltip" value="" ver="2"/>
					<designed target="Width" value="4" ver="2"/>
					<designed target="Height" value="4" ver="2"/>
					<designed target="RoundingRadius" value="0" ver="2"/>
					<designed target="PenColor" value="4278190080" ver="2"/>
					<designed target="PenStyle" value="0" ver="2"/>
					<designed target="PenWidth" value="1" ver="2"/>
					<designed target="BrushColor" value="4278190080" ver="2"/>
					<designed target="BrushStyle" value="0" ver="2"/>
				</object>
			</object>
			<object access-modifier="private" name="btnOperMode" display-name="btnOperMode" uuid="ef8bc27d-402d-42d0-9d2b-6b92dfec3ae4" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="2" ver="2"/>
				<designed target="Y" value="2" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Оперативный режим" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MousePress">
					<body kind="om">
						<![CDATA[if (ActiveMode ==1) ActiveMode=0;
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Checked" ver="2">
					<body>
						<![CDATA[(ActiveMode==0)?(true):(false)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(CurrentEventsAvailable && Main_panel.private.BoolToken_8.Value && !HideFlag):(CurrentEventsAvailable && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_operative_mode_icon_24.png"/>
			</object>
			<object access-modifier="private" name="btnHistMode" display-name="btnHistMode" uuid="f74620fc-e89e-4f80-8383-0ccbbf9c0679" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="22" ver="2"/>
				<designed target="Y" value="22" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Исторический режим" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MousePress">
					<body kind="om">
						<![CDATA[if(ActiveMode==0) ActiveMode=1;
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Checked" ver="2">
					<body>
						<![CDATA[(ActiveMode==1)]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(EventHistoryAvailable && Main_panel.private.BoolToken_9.Value && !HideFlag):(EventHistoryAvailable && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="Permission" ver="3" value="true"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_historical_mode_icon_24.png"/>
			</object>
			<object access-modifier="private" name="btnSettings" display-name="btnSettings" uuid="9bac6cc6-89cf-4f22-a6de-e5694691cece" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="42" ver="2"/>
				<designed target="Y" value="42" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Параметры..." ver="2"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(EditingSettingsAvailable && Main_panel.private.BoolToken_3.Value && !HideFlag && IsFullAccessAllowed):(EditingSettingsAvailable && !HideFlag && IsFullAccessAllowed)]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="Permission" ver="3" value="true"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[Main_panel.private.Action_SettingsForm.Invoke();]]>
					</body>
				</do-on>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_table_gear_icon_24.png"/>
			</object>
			<object access-modifier="private" name="btnExport" display-name="btnExport" uuid="e66a5b7a-3a0d-4f7a-8149-da7d698dfdfa" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="85" ver="2"/>
				<designed target="Y" value="57" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Сохранить..." ver="2"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(ExportDataAvailability && Main_panel.private.BoolToken_4.Value && !HideFlag):(ExportDataAvailability && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[if (ActiveMode == 0) Main_panel.private.Action_ExportOperTable.Invoke();
else Main_panel.private.Action_ExportHistoryTable.Invoke();]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Active" ver="3">
					<body>
						<![CDATA[(ActiveMode == 0)?(!Main_panel.private.OperTableEmpty):(!Main_panel.private.HistTableEmpty && !Main_panel.private.LoadingHistory)]]>
					</body>
				</do-trace>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_table_excel_icon_2_24.png"/>
			</object>
			<object access-modifier="private" name="btnPrint" display-name="btnPrint" uuid="34528485-8f35-4626-9193-808ad0deeb61" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="117" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Печать..." ver="2"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(PrintingAvailable && Main_panel.private.BoolToken_13.Value && !HideFlag):(PrintingAvailable && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[Main_panel.private.Action_PrintForm.Invoke();]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Active" ver="3">
					<body>
						<![CDATA[(ActiveMode == 0)?(!Main_panel.private.OperTableEmpty):(!Main_panel.private.HistTableEmpty && !Main_panel.private.LoadingHistory)]]>
					</body>
				</do-trace>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_grid-print-24.png"/>
			</object>
			<object access-modifier="private" name="btnFiltr" display-name="btnFiltr" uuid="8dbedd6f-e1e8-4d9d-83dd-fada8458890c" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="145" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Фильтр отображения..." ver="2"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(FilterAvailable && Main_panel.private.BoolToken_5.Value && !HideFlag):(FilterAvailable && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[Main_panel.private.Action_ViewFilterForm.Invoke();]]>
					</body>
				</do-on>
				<init target="Alarms_1" ver="3" ref="here"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseLeave">
					<body kind="om">
						<![CDATA[if (!Checked) 
{
	Hide.PenStyle=0;
	btnFiltrList.Hide.PenStyle = 0;
}]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseEnter">
					<body kind="om">
						<![CDATA[Hide.PenStyle = 1;
btnFiltrList.Hide.PenStyle = 1;]]>
					</body>
				</do-on>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_table_filter_24.png"/>
			</object>
			<object access-modifier="private" name="btnFiltrList" display-name="btnFiltrList" uuid="8bae1e21-8d1a-4efe-89b2-bc4ec9266323" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="3">
				<designed target="X" value="173" ver="3"/>
				<designed target="Y" value="43.25" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<init target="Active" ver="3" value="true"/>
				<init target="Checked" ver="3" value="false"/>
				<designed target="Tooltip" value="Фильтр отображения..." ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(btnFiltr.X, btnFiltr.Y)-me.X);
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(me.X, me.Y) + me.Image_1.Height);
Main_panel.private.DropListMenuChoise = 0; //Вызываем меню для фильтр отображения
Main_panel.private.Action_openDropList.Invoke();]]>
					</body>
				</do-on>
				<init target="Permission" ver="3" value="true"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(FilterAvailable && Main_panel.private.BoolToken_5.Value && !HideFlag):(FilterAvailable && !HideFlag)]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="12"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseEnter">
					<body kind="om">
						<![CDATA[Hide.PenStyle = 1;
btnFiltr.Hide.PenStyle = 1;]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseLeave">
					<body kind="om">
						<![CDATA[if (!Checked) 
{
	Hide.PenStyle=0;
	btnFiltr.Hide.PenStyle = 0;
}]]>
					</body>
				</do-on>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_arrow_down.png"/>
			</object>
			<object access-modifier="private" name="RecHistory" display-name="RecHistory" uuid="6729c5d2-431a-4f24-a0c9-823f932f0e05" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="2">
				<designed target="X" value="200" ver="2"/>
				<designed target="Y" value="42.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<object access-modifier="private" name="IntervalStart" display-name="IntervalStart" uuid="44c34afb-47b7-4372-83f3-7ba32eba490f" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="3">
					<designed target="X" value="-40" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="ZValue" value="0" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<designed target="Scale" value="1" ver="3"/>
					<designed target="Visible" value="true" ver="3"/>
					<designed target="Opacity" value="1" ver="3"/>
					<designed target="Enabled" value="true" ver="3"/>
					<designed target="Tooltip" value="" ver="3"/>
					<designed target="Width" value="110" ver="3"/>
					<designed target="Height" value="20" ver="3"/>
					<designed target="Text" value="Начало интервала:" ver="3"/>
					<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="3"/>
					<designed target="FontColor" value="4278190080" ver="3"/>
					<designed target="TextAlignment" value="132" ver="3"/>
				</object>
				<object access-modifier="private" name="DayMonthYear_start" display-name="DayMonthYear_start" uuid="1b859fc5-4892-473d-a186-5c1353fc03a4" base-type="Alarms_DataField" base-type-id="73812737-d1fa-4c53-8159-38f42d0d362c" ver="3">
					<designed target="X" value="65" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="month" ver="3" value="01"/>
					<init target="year" ver="3" value="2020"/>
					<init target="Alarms_1" ver="3" ref="here"/>
					<init target="day" ver="3" value="01"/>
				</object>
				<object access-modifier="private" name="btnCalendar_start" display-name="btnCalendar_start" uuid="1be7d646-1344-4fbb-9eb8-87436c23ae70" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="3">
					<designed target="X" value="172" ver="3"/>
					<designed target="Y" value="11.5" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="Active" ver="3" value="true"/>
					<init target="Checked" ver="3" value="false"/>
					<designed target="Tooltip" value="Дата начала интервала" ver="3"/>
					<init target="Permission" ver="3" value="true"/>
					<init target="defWidth" ver="3" value="12"/>
					<init target="defHeight" ver="3" value="21"/>
					<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MousePress">
						<body kind="om">
							<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(DayMonthYear_start.X, DayMonthYear_start.Y)-me.X);
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(me.X, me.Y) + me.Image_1.Height);
Main_panel.private.StartDate = true;
Main_panel.private.Action_openCalendar.Invoke();]]>
						</body>
					</do-on>
					<init target="Alarms_1" ver="3" ref="here"/>
					<init target="Image" ver="4" value="Alarms_Icons/alarms_arrow_down.png"/>
				</object>
				<object access-modifier="private" name="Time_start" display-name="Time_start" uuid="e19b5440-2f1a-4c16-981c-34ca91016846" base-type="Alarms_TimeField" base-type-id="4fab6d06-6bb8-4178-815c-0027fe581789" ver="3">
					<designed target="X" value="203" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="Alarms_1" ver="3" ref="here"/>
				</object>
				<object access-modifier="private" name="IntervalFinal" display-name="IntervalFinal" uuid="1a16cddd-21da-4bae-8454-36a0a22e3bf8" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="3">
					<designed target="X" value="274" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="ZValue" value="0" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<designed target="Scale" value="1" ver="3"/>
					<designed target="Visible" value="true" ver="3"/>
					<designed target="Opacity" value="1" ver="3"/>
					<designed target="Enabled" value="true" ver="3"/>
					<designed target="Tooltip" value="" ver="3"/>
					<designed target="Width" value="105" ver="3"/>
					<designed target="Height" value="20" ver="3"/>
					<designed target="Text" value="Конец интервала:" ver="3"/>
					<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="3"/>
					<designed target="FontColor" value="4278190080" ver="3"/>
					<designed target="TextAlignment" value="132" ver="3"/>
				</object>
				<object access-modifier="private" name="DayMonthYear_final" display-name="DayMonthYear_final" uuid="cf3b1499-5e89-41af-b97f-d81a7ffc467b" base-type="Alarms_DataField" base-type-id="73812737-d1fa-4c53-8159-38f42d0d362c" ver="3">
					<designed target="X" value="379" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="day" ver="3" value="31"/>
					<init target="month" ver="3" value="12"/>
					<init target="year" ver="3" value="2020"/>
					<init target="Alarms_1" ver="3" ref="here"/>
				</object>
				<object access-modifier="private" name="btnCalendar_final" display-name="btnCalendar_final" uuid="f422c358-5308-4bd5-89e2-b50d78935f46" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="3">
					<designed target="X" value="486" ver="3"/>
					<designed target="Y" value="10" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="Active" ver="3" value="true"/>
					<init target="Checked" ver="3" value="false"/>
					<designed target="Tooltip" value="Дата конца интервала" ver="3"/>
					<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MousePress">
						<body kind="om">
							<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(DayMonthYear_final.X, DayMonthYear_final.Y)-me.X);
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(me.X, me.Y) + me.Image_1.Height);
Main_panel.private.StartDate = false;
Main_panel.private.Action_openCalendar.Invoke();]]>
						</body>
					</do-on>
					<init target="Alarms_1" ver="3" ref="here"/>
					<init target="defWidth" ver="3" value="12"/>
					<init target="defHeight" ver="3" value="21"/>
					<init target="Permission" ver="3" value="true"/>
					<init target="Image" ver="4" value="Alarms_Icons/alarms_arrow_down.png"/>
				</object>
				<object access-modifier="private" name="Time_final" display-name="Time_final" uuid="2184eecf-8344-4681-ac58-7badf1da7abf" base-type="Alarms_TimeField" base-type-id="4fab6d06-6bb8-4178-815c-0027fe581789" ver="3">
					<designed target="X" value="514" ver="3"/>
					<designed target="Y" value="11" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="Alarms_1" ver="3" ref="here"/>
				</object>
				<object access-modifier="private" name="btnHistRequest" display-name="btnHistRequest" uuid="775addf8-7504-4248-bc7a-f720dd89696d" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
					<designed target="X" value="591" ver="2"/>
					<designed target="Y" value="8" ver="2"/>
					<designed target="Rotation" value="0" ver="2"/>
					<init target="Checked" ver="2" value="false"/>
					<init target="Active" ver="2" value="true"/>
					<designed target="Tooltip" value="Запросить данные" ver="2"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
						<body kind="om">
							<![CDATA[if (!Main_panel.private.LoadingHistory) Main_panel.private.LoadHistory();
else 
{
	Main_panel.private.Action_DialogWindow.inputString = "Прервать запрос истории событий?";
	Main_panel.private.Action_DialogWindow.inputMode = 0; //режим отмены запроса истории
	Main_panel.private.Action_DialogWindow.Invoke();
}]]>
						</body>
					</do-on>
					<init target="Alarms_1" ver="3" ref="here"/>
					<init target="defWidth" ver="3" value="26"/>
					<init target="defHeight" ver="3" value="26"/>
					<init target="Permission" ver="3" value="true"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseEnter">
						<body kind="om">
							<![CDATA[Hide.PenStyle = 1;
btnHistRequestList.Hide.PenStyle = 1;]]>
						</body>
					</do-on>
					<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseLeave">
						<body kind="om">
							<![CDATA[if (!Checked) 
{
	Hide.PenStyle=0;
	btnHistRequestList.Hide.PenStyle = 0;
}]]>
						</body>
					</do-on>
					<do-trace access-modifier="private" target="Tooltip" ver="3">
						<body>
							<![CDATA[(!Main_panel.private.LoadingHistory)?("Запросить данные"):("Прервать запрос истории")]]>
						</body>
					</do-trace>
					<do-trace access-modifier="private" target="Image" ver="3">
						<conditional-expr>
							<condition>
								<![CDATA[Main_panel.private.LoadingHistory]]>
							</condition>
							<expr>
								<![CDATA["Alarms_Icons/alarms_cancel.png"]]>
							</expr>
						</conditional-expr>
						<conditional-expr>
							<condition>
								<![CDATA[!StatePanel.RequestFilterON]]>
							</condition>
							<expr>
								<![CDATA["Alarms_Icons/alarms_table_refresh_icon_24.png"]]>
							</expr>
						</conditional-expr>
						<conditional-expr>
							<condition>
								<![CDATA[StatePanel.RequestFilterON]]>
							</condition>
							<expr>
								<![CDATA["Alarms_Icons/alarms_table_refresh_with_filter_24.png"]]>
							</expr>
						</conditional-expr>
					</do-trace>
				</object>
				<object access-modifier="private" name="btnHistRequestList" display-name="btnHistRequestList" uuid="8870faa5-cc51-4f50-b095-37566cebf696" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="3">
					<designed target="X" value="616" ver="3"/>
					<designed target="Y" value="8" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<init target="Active" ver="3" value="true"/>
					<init target="Checked" ver="3" value="false"/>
					<designed target="Tooltip" value="Запросить данные" ver="3"/>
					<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MousePress">
						<body kind="om">
							<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(btnHistRequest.X, btnHistRequest.Y)-me.X);
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(me.X, me.Y) + me.Image_1.Height);
Main_panel.private.DropListMenuChoise = 1; //Выпадающий список для фильтра запроса
Main_panel.private.Action_openDropList.Invoke();]]>
						</body>
					</do-on>
					<init target="Alarms_1" ver="3" ref="here"/>
					<init target="defWidth" ver="3" value="12"/>
					<init target="defHeight" ver="3" value="26"/>
					<init target="Permission" ver="3" value="true"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseEnter">
						<body kind="om">
							<![CDATA[Hide.PenStyle = 1;
btnHistRequest.Hide.PenStyle = 1;]]>
						</body>
					</do-on>
					<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseLeave">
						<body kind="om">
							<![CDATA[if (!Checked) 
{
	Hide.PenStyle=0;
	btnHistRequest.Hide.PenStyle = 0;
}]]>
						</body>
					</do-on>
					<do-trace access-modifier="private" target="Active" ver="3">
						<body>
							<![CDATA[!Main_panel.private.LoadingHistory]]>
						</body>
					</do-trace>
					<do-trace access-modifier="private" target="Permission" ver="3">
						<body>
							<![CDATA[(UseSecurity)?(FilterAvailable && Main_panel.private.BoolToken_5.Value && !HideFlag):(FilterAvailable && !HideFlag)]]>
						</body>
					</do-trace>
					<init target="Image" ver="4" value="Alarms_Icons/alarms_arrow_down.png"/>
				</object>
				<do access-modifier="private" name="Set_Size" display-name="Set_Size" ver="3" type="" type-id="">
					<body kind="om">
						<![CDATA[//Задаем видимость кнопок
if (Mode > 0 && Permission)
{
	Visible = true;
	IntervalStart.X = 10;
	DayMonthYear_start.X = 120;
	btnCalendar_start.X = 227;
	Time_start.X = 239;
	IntervalFinal.X = 310;
	DayMonthYear_final.X = 420;
	btnCalendar_final.X = 527;
	Time_final.X = 539;
	btnHistRequest.X = 611;
	btnHistRequestList.X = 636;
	
	IntervalStart.Width = 110;
	IntervalFinal.Width = 110;
	DayMonthYear_start.Set_Size(1);
	DayMonthYear_final.Set_Size(1);
	btnCalendar_final.Set_Size(1);
	Time_start.Set_Size(1);
	Time_final.Set_Size(1);
	btnCalendar_start.Set_Size(1);
	btnHistRequest.Set_Size(1);
	btnHistRequestList.Set_Size(1);
}
else
{
	if (Mode == 0) Visible = false;
	IntervalStart.X = 0;
	DayMonthYear_start.X = 0;
	btnCalendar_start.X = 0;
	Time_start.X = 0;
	IntervalFinal.X = 0;
	DayMonthYear_final.X = 0;
	Time_final.X = 0;
	btnHistRequest.X = 0;
	btnHistRequestList.X = 0;
	btnCalendar_final.X = 0;
	IntervalStart.Width = 0;
	IntervalFinal.Width = 0;
	
	DayMonthYear_start.Set_Size(0);
	DayMonthYear_final.Set_Size(0);
	btnCalendar_final.Set_Size(0);
	Time_start.Set_Size(0);
	Time_final.Set_Size(0);
	btnCalendar_start.Set_Size(0);
	btnHistRequest.Set_Size(0);
	btnHistRequestList.Set_Size(0);
}
]]>
					</body>
					<param access-modifier="private" name="Mode" display-name="" uuid="0cd1f00a-2979-415d-9b11-844626cff046" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
				</do>
				<object access-modifier="private" name="HideFlag" display-name="HideFlag" uuid="510f017f-5bec-4774-97da-1e8de2f8a6ac" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
				<object access-modifier="private" name="Permission" display-name="Permission" uuid="5300b159-cb0e-4730-bd7b-50a128191d39" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
						<body kind="javascript">
							<![CDATA[//Проверка наличия разрешения на отображение
if (!Value) Set_Size(0);
else if (btnHistRequest.Image_1.Width == 0) Set_Size(1);]]>
						</body>
					</do-on>
				</object>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(EventHistoryAvailable && Main_panel.private.BoolToken_9.Value && !HideFlag && ActiveMode == 1 && EventHistoryAvailable):(EventHistoryAvailable && !HideFlag && ActiveMode == 1 && EventHistoryAvailable)]]>
					</body>
				</do-trace>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<init target="HideFlag" ver="3" value="false"/>
				<init target="Permission" ver="3" value="false"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
			</object>
			<object access-modifier="private" name="btnAckSel" display-name="btnAckSel" uuid="32ca604e-0c33-4521-a691-71c0c117c02b" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="807.235" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Квитировать" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MouseClick">
					<body kind="om">
						<![CDATA[AckSelected();]]>
					</body>
				</do-on>
				<init target="Permission" ver="3" value="true"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(AcknowledgmentAvailable && Main_panel.private.BoolToken_1.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(AcknowledgmentAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable && Main_panel.private.UserName != "")]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-trace access-modifier="private" target="Active" ver="3">
					<body>
						<![CDATA[!FollowLatestEvent]]>
					</body>
				</do-trace>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_ack_one_24.png"/>
			</object>
			<object access-modifier="private" name="btnAckAll" display-name="btnAckAll" uuid="35dc4247-283d-4d45-8ff7-0cee4c9ad25a" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="826.706" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<designed target="Tooltip" value="Квитировать все" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MouseClick" form-by-id="false">
					<body kind="om">
						<![CDATA[AckAll();]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(AcknowledgmentAvailable && Main_panel.private.BoolToken_1.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(AcknowledgmentAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable && Main_panel.private.UserName != "")]]>
					</body>
				</do-trace>
				<init target="Active" ver="3" value="true"/>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_ack_all_24.png"/>
			</object>
			<object access-modifier="private" name="btnClearAll" display-name="btnClearAll" uuid="d92c5d75-b8a1-4c97-a7a1-779d63d4bbad" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="846.176" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Очистить список" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MousePress" form-by-id="false">
					<body kind="om">
						<![CDATA[ClearOperativeEventList();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Enabled" ver="3">
					<body kind="om">
						<![CDATA[Active]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(ClearingCurrentEventsAvailable && Main_panel.private.BoolToken_2.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(ClearingCurrentEventsAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable && Main_panel.private.UserName != "")]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-trace access-modifier="private" target="Active" ver="3">
					<body>
						<![CDATA[!SnapshotON]]>
					</body>
				</do-trace>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_ClearAll.png"/>
			</object>
			<object access-modifier="private" name="btnSnapshot" display-name="btnSnapshot" uuid="bd9c17ea-9f31-43d4-a433-a2f1e61735f4" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="865.647" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Снимок" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MouseClick">
					<body kind="om">
						<![CDATA[frozenState: bool = Main_tables_Operative.Table_Operative_mode.TableModel_1.Frozen; 
if (frozenState) DisplayCurrentEvents();
else DisplayCurrentEventsSnapshot();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(SnapshotAvailable && Main_panel.private.BoolToken_7.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(SnapshotAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-trace access-modifier="private" target="Checked" ver="3">
					<body>
						<![CDATA[SnapshotON]]>
					</body>
				</do-trace>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_table_snapshot_icon_24.png"/>
			</object>
			<object access-modifier="private" name="btnSndClear" display-name="btnSndClear" uuid="dd20b9f1-57b3-48d9-9382-f6f5ebbe59ae" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="885.118" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Очистить очередь звуков" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MousePress" form-by-id="false">
					<body kind="om">
						<![CDATA[ClearSoundQueue();



]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(SoundPlaybackManagmentAvailable && Main_panel.private.BoolToken_6.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(SoundPlaybackManagmentAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_sound_queue_clear_24.png"/>
			</object>
			<object access-modifier="private" name="btnSndNext" display-name="btnSndNext" uuid="9d16b49d-7877-4087-84aa-b28d47c48cf3" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="904.588" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Пропустить звук" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MousePress" form-by-id="false">
					<body kind="om">
						<![CDATA[Sound_1.Active = false; 			  			// прерываем текущий звук события
Main_panel.private.SoundQueue2=""; 	// удаляем второй звук события
SkipCurrentSound(); 			// переходим к следующему событию]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(SoundPlaybackManagmentAvailable && Main_panel.private.BoolToken_6.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(SoundPlaybackManagmentAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_sound_forward_24.png"/>
			</object>
			<object access-modifier="private" name="btnSndMute" display-name="btnSndMute" uuid="26a3458d-ef56-4532-8c39-f97ca3d642e2" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="924.059" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Режим без звука" ver="2"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="2" event="MousePress" form-by-id="false">
					<body kind="om">
						<![CDATA[Mute = !Mute;
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(SoundPlaybackManagmentAvailable && Main_panel.private.BoolToken_6.Value && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable):(SoundPlaybackManagmentAvailable && !HideFlag && ActiveMode == 0 && CurrentEventsAvailable)]]>
					</body>
				</do-trace>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-trace access-modifier="private" target="Image" ver="3">
					<body>
						<![CDATA[(Mute)?("Alarms_Icons/alarms_sound_disabled_24.png"):("Alarms_Icons/alarms_sound_enabled_24.png")]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="Tooltip" ver="3">
					<body>
						<![CDATA[(Mute)?("Включить проигрывание звуков"):("Отключить проигрывание звуков")]]>
					</body>
				</do-trace>
			</object>
			<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="2aa201e7-23e8-43e5-abef-ca81910ace4e" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
				<designed target="Weight" value="30" ver="2"/>
			</object>
			<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="13d8265d-d78d-46ae-9fb3-83d830fe5d71" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="2">
				<designed target="Orientation" value="1" ver="2"/>
				<designed target="Gap" value="0" ver="2"/>
			</object>
			<object access-modifier="private" name="btnSort" display-name="btnSort" uuid="e9f29259-2443-4168-948f-c96c5356fa93" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="2">
				<designed target="X" value="943.529" ver="2"/>
				<designed target="Y" value="43.25" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<init target="Checked" ver="2" value="false"/>
				<init target="Active" ver="2" value="true"/>
				<designed target="Tooltip" value="Сортировка..." ver="2"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[(UseSecurity)?(EventTableSortAvailability && Main_panel.private.BoolToken_11.Value && !HideFlag && IsFullAccessAllowed):(EventTableSortAvailability && !HideFlag && IsFullAccessAllowed)]]>
					</body>
				</do-trace>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="Permission" ver="3" value="true"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[Main_panel.private.Action_SortForm.Invoke();]]>
					</body>
				</do-on>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_sort_24.png"/>
			</object>
			<object access-modifier="private" name="btnLogin" display-name="btnLogin" uuid="47dc715e-3c64-4454-a599-d59a0da08bdc" base-type="ToolButton" base-type-id="76f54e9d-00fa-4fc7-81ad-fd37c305cbb1" ver="3">
				<designed target="X" value="963" ver="3"/>
				<designed target="Y" value="43.25" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<init target="Active" ver="3" value="true"/>
				<init target="Checked" ver="3" value="false"/>
				<init target="Permission" ver="3" value="true"/>
				<init target="Alarms_1" ver="3" ref="here"/>
				<init target="defWidth" ver="3" value="26"/>
				<init target="defHeight" ver="3" value="26"/>
				<do-trace access-modifier="private" target="Permission" ver="3">
					<body>
						<![CDATA[UseSecurity && !HideFlag]]>
					</body>
				</do-trace>
				<designed target="Tooltip" value="Сменить пользователя" ver="3"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MousePress">
					<body kind="om">
						<![CDATA[Main_panel.private.Action_AutorizationForm.Invoke();]]>
					</body>
				</do-on>
				<init target="Image" ver="4" value="Alarms_Icons/alarms_Lock.png"/>
			</object>
			<object access-modifier="private" name="SnapshotON" display-name="SnapshotON" uuid="b86255b9-8284-47f1-98b3-18ef4c2a707e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
					<body kind="om">
						<![CDATA[//Запоминание режима FollowLatestEvent и его выключение

if (value && FollowLatestEvent)
{
	Main_panel.private.followLastEventMemory = true;
	FollowLatestEvent = false;
	Main_tables_Operative.Table_Operative_mode.SetSelectedRows("[]");
}
if (!value && Main_panel.private.followLastEventMemory)
{
	Main_panel.private.followLastEventMemory = false;
	FollowLatestEvent = true;
}]]>
					</body>
				</do-on>
			</object>
		</object>
		<object access-modifier="private" name="TreeMapLayout_1" display-name="TreeMapLayout_1" uuid="e4a9c83b-54b2-473b-bed3-cc3db4208ad4" base-type="TreeMapLayout" base-type-id="abf2598f-0779-4d54-94e9-597b15cdb8e9" ver="2"/>
		<object access-modifier="private" name="private" display-name="private" uuid="ad383bce-cd5d-411e-b5f1-4a7978aa1525" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="-470" ver="2"/>
			<designed target="Y" value="397.81" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="500" ver="2"/>
			<designed target="Height" value="54.3807" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="4278190080" ver="2"/>
			<designed target="PenStyle" value="0" ver="2"/>
			<designed target="PenWidth" value="1" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="5b899f5d-5c56-4dcc-a15e-d389622bff62" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
				<designed target="Weight" value="0" ver="2"/>
			</object>
			<object access-modifier="private" name="Hist_on" display-name="Hist_on" uuid="3fe8a0ef-011e-4594-a3ad-ed24792eb874" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
			<object access-modifier="private" name="Oper_on" display-name="Oper_on" uuid="dfb85b4f-75f2-42b7-9839-97468dc16394" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
			<object access-modifier="private" name="followLastEventMemory" display-name="followLastEventMemory" uuid="bc2a0701-45ba-4c40-991c-fd9a232fab1b" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<object access-modifier="private" name="f_start_time" display-name="f_start_time" uuid="2a810cb8-673e-498d-84b0-75caa4dfd930" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="2"/>
			<object access-modifier="private" name="Field_Filter" display-name="Field_Filter" uuid="5fc216af-0673-4faa-8397-cbb626488055" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Need_To_Filter" display-name="Need_To_Filter" uuid="275d56e4-8405-4396-99df-3de2b778f56e" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
			<object access-modifier="private" name="count_of_connections" display-name="count_of_connections" uuid="f516084b-6338-4fef-a4dd-1d838a14fec1" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
			<object access-modifier="private" name="Filter_lowSeverity" display-name="Filter_lowSeverity" uuid="39125fba-aa14-4adc-b196-4bca6fe37770" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Filter_highSeverity" display-name="Filter_highSeverity" uuid="ac68314c-b072-4399-aae5-c34369d752d1" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Filter_messages" display-name="Filter_messages" uuid="9cc62e81-9cda-466b-8fcd-ac1d37e90fd9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Filter_sources" display-name="Filter_sources" uuid="3f2bdede-7bec-4474-a8f1-416c498ab155" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Filter_off" display-name="Filter_off" uuid="685da825-9dc2-4526-a084-c42aaca860a3" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
			<object access-modifier="private" name="UserName" display-name="UserName" uuid="544c3562-0d73-40ed-aac6-4373dc437d5d" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="2"/>
			<object access-modifier="private" name="AckComment" display-name="AckComment" uuid="bedb456d-a6b4-4eaa-9d92-56885aefba12" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="AckContinue" display-name="AckContinue" uuid="9d27da94-d903-406d-a57d-3d48d7b61716" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="Invoked">
					<body kind="om">
						<![CDATA[//Функция квитирования сообщений в нескольких режимах
sSelect:string = "";//Набор строк
indexRow:int4 = 0;//Индекс текущей строки
indexSelRow:int4 = 0;//Индекс выделенной строки
Acked:bool = true;//Статус квитирования
AckSost:variant;//Статус квитирования в variant
bAckNeed:bool= false; // Потребность квитирования выделенных строк
end:bool = false;//Конец иттератора
currentSource: string = "";//Текущий источник для режима квитирования последовательности
index:int4 = 0;//Текущий индекс строки источников
currentPosition: int4 = 0;//Текущая позиция в строке источников
severity:uint2;//Важность

Src:string;//Источник
ConditionName:string;//Условие
ActiveTime:uint8;//Время срабатывания
Cookie:uint4;

if (ActiveMode == 0)
{
	//Режим квитирования выделенных или всех событий
	if (nAckMode == 1 || nAckMode == 2)
	{
		if (nAckMode == 1) Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstSelectedRow();
		else Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstRow();
		while (!end)
		{
			if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
			{
		 		AckSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
				severity = Variant.ToUint2(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
				if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
				if (!Acked && !isInformativeEvent(severity)) 
				{
						Src = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_5.GetIndex()),"");
						ConditionName = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_11_not_show.GetIndex()),"");
						ActiveTime = Variant.ToUint8(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_2.GetIndex()),0);
						Cookie = Variant.ToUint4(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_15_not_show.GetIndex()),0);
						ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
				}
			}
			end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
			Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
		}
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
	}
	//Режим квитирования последовательностей
	if (nAckMode == 3)
	{
		sSelect = GetAlarmsSequence();//Получаем строку в виде последовательности источников
	 	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstRow();
		while (!end)
		{
			if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
			{
				
		 		AckSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
				severity = Variant.ToUint2(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
				if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
				if (!Acked && !isInformativeEvent(severity)) 
				{
					currentPosition = 0;
					Src = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_5.GetIndex()),"");
					while (currentPosition != String.Length(sSelect))
					{
						index = String.IndexOf(sSelect, "\t");
						if (index != -1)
						{
							currentSource = String.SubString(sSelect,currentPosition,index);
							currentPosition = index + 1;
						}
						else 
						{
							currentSource = String.SubString(sSelect,currentPosition,String.Length(sSelect));
							currentPosition = String.Length(sSelect);
						}
						
						if (Src == currentSource)
						{
							ConditionName = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_11_not_show.GetIndex()),"");
							ActiveTime = Variant.ToUint8(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_2.GetIndex()),0);
							Cookie = Variant.ToUint4(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_15_not_show.GetIndex()),0);
							ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
						}
					}
				}
			}
			end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
			Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
		}
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
	}
}
else
{
	//Режим квитирования выделенных или всех событий
	if (nAckMode == 1 || nAckMode == 2)
	{
		if (nAckMode == 1) Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.FirstSelectedRow();
		else Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.FirstRow();
		while (!end)
		{
			if (Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetStatus() == 0)
			{
		 		AckSost = Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
				severity = Variant.ToUint2(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
				if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
				if (!Acked && !isInformativeEvent(severity))  
				{
						Src = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_5.GetIndex()),"");
						ConditionName = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_11_not_show.GetIndex()),"");
						ActiveTime = Variant.ToUint8(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_2.GetIndex()),0);
						Cookie = Variant.ToUint4(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_15_not_show.GetIndex()),0);
						ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
				}
			}
			end = !Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.HasNext();
			Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Next();
		}
		Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Close();
	}
	//Режим квитирования последовательностей
	if (nAckMode == 3)
	{
		sSelect = GetAlarmsSequence();//Получаем строку в виде последовательности источников
	 	Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.FirstRow();
		while (!end)
		{
			if (Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetStatus() == 0)
			{
				
		 		AckSost = Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
				
				severity = Variant.ToUint2(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
				if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
				if (!Acked && !isInformativeEvent(severity))  
				{
					currentPosition = 0;
					Src = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_5.GetIndex()),"");
					while (currentPosition != String.Length(sSelect))
					{
						index = String.IndexOf(sSelect, "\t");
						if (index != -1)
						{
							currentSource = String.SubString(sSelect,currentPosition,index);
							currentPosition = index + 1;
						}
						else 
						{
							currentSource = String.SubString(sSelect,currentPosition,String.Length(sSelect));
							currentPosition = String.Length(sSelect);
						}
						
						if (Src == currentSource)
						{
							ConditionName = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_11_not_show.GetIndex()),"");
							ActiveTime = Variant.ToUint8(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_2.GetIndex()),0);
							Cookie = Variant.ToUint4(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_15_not_show.GetIndex()),0);
							ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
						}
					}
				}
			}
			end = !Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.HasNext();
			Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Next();
		}
		Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Close();
	}
}]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="DoubleClick" display-name="DoubleClick" uuid="871bc211-65f7-4634-89f5-5ffda52355be" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Invoked">
					<body kind="om">
						<![CDATA[//Квитирование двойным нажатием
ackSost: variant;
ackRequest: variant;
end: bool = false;
acked: bool = false;
needToAck: bool = false;

if (AcknowledgmentDoubleClick && !FollowLatestEvent) 
{
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0 && Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetRow() == Main_panel.private.selectedRow)
		{
			ackSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние квитирования
			ackRequest = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_17.GetIndex()); //Признак квитирования
			if (!Variant.IsEmpty(ackSost)) acked = Variant.ToBool(ackSost,false); 
			if (!Variant.IsEmpty(ackRequest)) needToAck = Variant.ToBool(ackRequest,false);
			if (!acked && needToAck) AckSelected();
			break;
		}
		end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
}
]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="nAckMode" display-name="nAckMode" uuid="20d02caa-9683-451c-a1d9-b20e540ddc35" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="2"/>
			<object access-modifier="private" name="SoundQueue2" display-name="SoundQueue2" uuid="95f0d9fd-b721-4dc0-a205-a39a31f395e9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			<object access-modifier="private" name="Range1" display-name="Range1" uuid="293afc1e-cb10-4361-88d0-8dda37bc3e24" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="-21" ver="2"/>
				<designed target="Y" value="33" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="Height" value="18" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="4278190080" ver="2"/>
				<designed target="PenStyle" value="1" ver="2"/>
				<designed target="PenWidth" value="1" ver="2"/>
				<designed target="BrushColor" value="4278190080" ver="2"/>
				<designed target="BrushStyle" value="0" ver="2"/>
				<object access-modifier="private" name="SoundPriority" display-name="SoundPriority" uuid="2d6c2d25-ab7a-4f7c-9016-4399208c5818" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundEnable" display-name="SoundEnable" uuid="5f5e0966-834a-4efa-97dd-45dc07217786" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<object access-modifier="private" name="nSoundRepeats" display-name="nSoundRepeats" uuid="b0cf834f-0c84-4d01-aa0c-0845768bad83" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundCount" display-name="SoundCount" uuid="f7854e29-2886-429c-a234-5911471afd7e" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vSoundRepeats" display-name="vSoundRepeats" uuid="4179761f-689c-4b66-8ff8-60cc15d24ff9" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="QueueLength" display-name="QueueLength" uuid="cad4de51-58c7-46f4-9fc7-b9b8ae7351e7" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="PriorityCount" display-name="PriorityCount" uuid="4bb5244a-f232-483e-aa20-2c35213daaad" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vIndex" display-name="vIndex" uuid="cfb5dfff-54bf-476b-840c-a816b0ae8d93" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="bSkipped" display-name="bSkipped" uuid="b61156b8-09b8-46b7-8d20-f41eabbc2080" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<object access-modifier="private" name="allSoundPlayed" display-name="allSoundPlayed" uuid="ae68c11b-596d-46b0-a2dc-78566a41e790" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			</object>
			<object access-modifier="private" name="Range2" display-name="Range2" uuid="1b185564-eb64-4661-8ca1-f780162c99f0" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="-1" ver="2"/>
				<designed target="Y" value="53" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="Height" value="18" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="4278190080" ver="2"/>
				<designed target="PenStyle" value="1" ver="2"/>
				<designed target="PenWidth" value="1" ver="2"/>
				<designed target="BrushColor" value="4278190080" ver="2"/>
				<designed target="BrushStyle" value="0" ver="2"/>
				<object access-modifier="private" name="SoundPriority" display-name="SoundPriority" uuid="fd9570aa-a22f-42a3-aeea-a3ff0263d785" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundEnable" display-name="SoundEnable" uuid="66bd472d-7108-4613-b08f-37e147b71a19" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<object access-modifier="private" name="nSoundRepeats" display-name="nSoundRepeats" uuid="245f8ab2-8052-470b-91b2-08fcb9e40c3d" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundCount" display-name="SoundCount" uuid="d58fcc97-99ea-40b0-aa99-a51e1bdca832" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vSoundRepeats" display-name="vSoundRepeats" uuid="19a5cbe5-38f5-41f9-9d76-136f747adb5b" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="QueueLength" display-name="QueueLength" uuid="928a9e1e-bb7e-4bbe-98b6-5555acccba73" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="PriorityCount" display-name="PriorityCount" uuid="cba0d938-368a-48cf-a9b7-2ed36f95dedc" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vIndex" display-name="vIndex" uuid="b2319a6c-9b80-4d34-b4a4-37e6b93d2468" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="bSkipped" display-name="bSkipped" uuid="eafff36e-4114-4844-a67c-f077317e68c1" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<object access-modifier="private" name="allSoundPlayed" display-name="allSoundPlayed" uuid="d4896c60-736c-4e82-8e0c-9d110744a48d" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			</object>
			<object access-modifier="private" name="Range3" display-name="Range3" uuid="a7363b5b-c8ec-4d6c-9c95-a0117449162e" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="19" ver="2"/>
				<designed target="Y" value="73" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="Height" value="18" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="4278190080" ver="2"/>
				<designed target="PenStyle" value="1" ver="2"/>
				<designed target="PenWidth" value="1" ver="2"/>
				<designed target="BrushColor" value="4278190080" ver="2"/>
				<designed target="BrushStyle" value="0" ver="2"/>
				<object access-modifier="private" name="SoundPriority" display-name="SoundPriority" uuid="946a045a-221f-4571-997d-83f5c69b7b5f" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundEnable" display-name="SoundEnable" uuid="2a9177ca-f991-49a1-82d9-7436b28004cf" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<object access-modifier="private" name="nSoundRepeats" display-name="nSoundRepeats" uuid="292a3931-8e26-4057-8975-45ccbcba47b0" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundCount" display-name="SoundCount" uuid="cf6de731-6082-45bd-9044-07444903b2b8" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vSoundRepeats" display-name="vSoundRepeats" uuid="9ec1cde9-0e55-45dd-a9d3-7341b9f4a094" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="QueueLength" display-name="QueueLength" uuid="686c5348-f776-47ab-bbf5-5dbc5ac07fa6" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="PriorityCount" display-name="PriorityCount" uuid="722f51ba-7c7b-4d25-a79b-142e39c62597" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vIndex" display-name="vIndex" uuid="f8afa611-26a9-4184-af71-f48c763844f3" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="bSkipped" display-name="bSkipped" uuid="253f44d5-d691-40fb-8771-2da06b854c4b" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<object access-modifier="private" name="allSoundPlayed" display-name="allSoundPlayed" uuid="89945b8c-3042-47db-9a00-a223bda45df2" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			</object>
			<object access-modifier="private" name="Range4" display-name="Range4" uuid="e2fb315a-65b4-4119-ac9f-c29e44a4d1f5" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="39" ver="2"/>
				<designed target="Y" value="93" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="Height" value="18" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="4278190080" ver="2"/>
				<designed target="PenStyle" value="1" ver="2"/>
				<designed target="PenWidth" value="1" ver="2"/>
				<designed target="BrushColor" value="4278190080" ver="2"/>
				<designed target="BrushStyle" value="0" ver="2"/>
				<object access-modifier="private" name="SoundPriority" display-name="SoundPriority" uuid="0ad1e1bf-a115-40e6-b669-68e393ef27d4" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundEnable" display-name="SoundEnable" uuid="4eb13e3c-8722-45f7-be6a-c23310df274d" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<object access-modifier="private" name="tempSoundEnable" display-name="tempSoundEnable" uuid="afe37938-9f7e-4574-ac6b-e6245a6f488d" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<object access-modifier="private" name="nSoundRepeats" display-name="nSoundRepeats" uuid="9582d660-0467-4d8b-9444-cd041a66568d" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="SoundCount" display-name="SoundCount" uuid="1f4caca0-9c13-4195-be5b-2aa75f30f678" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vSoundRepeats" display-name="vSoundRepeats" uuid="56fb9a99-50e1-49d0-a7c0-3c7516f0408f" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="QueueLength" display-name="QueueLength" uuid="2d6e22e4-4b89-449f-81a7-a15927163192" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="PriorityCount" display-name="PriorityCount" uuid="db5e63b1-1679-460b-bd7b-fc56c257f69f" base-type="int2" base-type-id="3534bee3-61d3-4ad6-ac4f-9ad442cb71cf" ver="2"/>
				<object access-modifier="private" name="vIndex" display-name="vIndex" uuid="e77e19f9-4c65-4f91-a94f-549eb9161f7c" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<object access-modifier="private" name="bSkipped" display-name="bSkipped" uuid="52aace4e-9268-4379-a0d4-57d0b02576c9" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<object access-modifier="private" name="allSoundPlayed" display-name="allSoundPlayed" uuid="d7252a88-24fb-4bf5-8f44-c86c6e84d050" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			</object>
			<object access-modifier="private" name="SoundCount" display-name="SoundCount" uuid="85d6b734-d5fd-47a0-b301-7773c3c0650b" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
			<object access-modifier="private" name="SecurityContext_1" display-name="SecurityContext_1" uuid="6b980106-8126-441d-8118-374e7e965c1c" base-type="SecurityContext" base-type-id="d9cb0fff-b70a-4e2d-833d-3f73cf74e0dd" ver="2">
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="CurrentUserChanged">
					<body kind="om">
						<![CDATA[UserLoggedIn = !GuestMode;
if (UseSecurity) Main_panel.private.UserName = CurrentUserDisplayName;
]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="BoolToken_1" display-name="BoolToken_1" uuid="cecaf780-bf51-45de-883a-afcb255a28fd" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="Acknowledgment"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_2" display-name="BoolToken_2" uuid="81935575-2b85-4a80-9121-f7e0848fbbde" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="ClearCurrentEvents"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_3" display-name="BoolToken_3" uuid="72d15cae-052e-4189-acee-15e302f42f91" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="EditSettings"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_4" display-name="BoolToken_4" uuid="296021cf-3943-440b-ad9e-54ccbc8dd302" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="ExportDataAvailability"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_5" display-name="BoolToken_5" uuid="14531ee4-d861-48b6-b71e-09acb07aac90" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="Filtering"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_6" display-name="BoolToken_6" uuid="7881cad4-8d83-47f3-b296-cf3c8bf5a13a" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="SoundPlaybackManagment"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_7" display-name="BoolToken_7" uuid="6c1ca24c-12b6-4cf2-b8c0-29c72daa5436" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="TakeCurrentEventsSnapshot"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_8" display-name="BoolToken_8" uuid="67d2a179-f9cf-444f-9708-20b0939f9974" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="ViewCurrentEvents"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_9" display-name="BoolToken_9" uuid="1192b917-88fa-4ddf-8c42-36a350f678c7" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="ViewEventHistory"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_10" display-name="BoolToken_10" uuid="3e6b6062-5f2f-41ee-9f56-1ad9e1b4f1e3" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="ArrangeEventHistoryIntoPages"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_11" display-name="BoolToken_11" uuid="57ee1953-ad85-44ef-826f-d51bc3a539b4" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="EventTableSortAvailability"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_12" display-name="BoolToken_12" uuid="6aa283f4-e309-4792-95fc-54cffbec9343" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="FileSystemAccess"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="BoolToken_13" display-name="BoolToken_13" uuid="17172688-2637-4dd2-8be0-cba5eb7f31ad" base-type="BoolToken" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" ver="2">
				<init target="Right" ver="2" value="Printing"/>
				<init target="SecurityContext" ver="2" ref="SecurityContext_1"/>
				<init target="Application" ver="4" ref="SecurityApplication"/>
			</object>
			<object access-modifier="private" name="PermissionResult" display-name="PermissionResult" uuid="fda3edac-b290-4c1f-8afd-41562bf5f97f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
			<object access-modifier="private" name="bInit" display-name="bInit" uuid="4af7ef3a-d4eb-466c-a403-fa0aa88ef90a" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
			<do access-modifier="private" name="Initializer" display-name="Initializer" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[//Функция инициализации
if (!Main_panel.private.bInit) Main_panel.private.bInit = true; //Признак инициализации
else return;//Инициализация проходит только один раз

Main_panel.private.rowCountKvit=0;

//Задаём путь по умолчанию конфигурации по ОС
//Проверяем, проект запущен на ОС Linux по наличию файлов.
if (!File.Exists("/opt/")) Main_panel.private.Linux = false;
else Main_panel.private.Linux = true;
if (!Main_panel.private.Linux) 
{
	Main_panel.private.ConfigPathDefault = "resources\\AlarmSettings";
	Main_panel.private.ExportPathDefault = "C:\\Users\\Public\\Documents";
}
else 
{
	Main_panel.private.ConfigPathDefault = "resources/AlarmSettings";
	Main_panel.private.ExportPathDefault = File.ProjectFolder + "/Export";
}

InitAlarmQueueTableModel(); // Инициализация моделей очереди алармов

//Скрываем нужные колонки
Main_tables_Operative.Table_Operative_mode.Colum_11_not_show.Hidden=true;
Main_tables_Operative.Table_Operative_mode.Colum_12_not_show.Hidden=true;
Main_tables_Operative.Table_Operative_mode.Colum_13_not_show.Hidden=true;
Main_tables_Operative.Table_Operative_mode.Colum_15_not_show.Hidden=true;

Main_tables_Historical.Table_History_mode.Colum_11_not_show.Hidden=true;
Main_tables_Historical.Table_History_mode.Colum_12_not_show.Hidden=true;
Main_tables_Historical.Table_History_mode.Colum_13_not_show.Hidden=true;
Main_tables_Historical.Table_History_mode.Colum_15_not_show.Hidden=true;
//
Main_panel.private.Need_To_Filter=false;
Main_panel.private.f_start_time=DateTime.Now()-Main_panel.private.TimeZone();//Запись старта формы

EventSettings.TableInitializer();//Инициализация таблицы параметров декоратора
if (!LoadConfiguration(ConfigurationFolder))// Если результат выполения чтения из файла false то записываем текущие настройки в файл
{
	Main_panel.private.SetDefaultSettings();//Установка настроек по умолчанию
	Main_panel.private.func_SettingsToFile(0);//Запись текущих наcтроек в файл 
	Main_panel.private.SaveSortingConfig();//Запись настроек сортировок
}

if (UseSecurity) Main_panel.private.UserName = Main_panel.private.SecurityContext_1.CurrentUserDisplayName;
Main_panel.ToolBar.btnFiltrList.Set_Size(1);
//Инициализируем видимость панелей
DisplayToolbar = DisplayToolbarAtStartup;
DisplayStatePanel = DisplayStatePanelAtStartup;

Main_panel.private.InitComplete = true;
if (ApSource.ConnectionState == 2) Main_panel.private.func_Operative_mode();]]>
				</body>
			</do>
			<do access-modifier="private" name="func_Operative_mode" display-name="func_Operative_mode" ver="4" type="" type-id="">
				<body kind="om">
					<![CDATA[Main_panel.private.Initializer();

// Дожидаемся полной инициализации и подключения к источнику
if (ApSource.ConnectionState != 2 || !Main_panel.private.InitComplete) return;

// Установка начального значения подписки
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Filter = SubscriptionAdvancedFilter; 

if (ActiveConditionsList) Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Mode=1;
else Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Mode=2;

Main_tables_Operative.Table_Operative_mode.TableModel_1.CancelReadAsync();
Main_tables_Operative.Table_Operative_mode.TableModel_1.Clear();

Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Reload(); // Запрос для вывода сообщений в таблицу

Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.Reload(); 
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.Reload(); 
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.Reload(); 
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.Reload(); 

Main_tables_Operative.Table_Operative_mode.TableModel_1.BeginReadAsync();
StatePanel.ViewFilterStateChange(); // Выводим в строку фильтр подписки и отображения
Main_panel.private.ChangeColumnOrder(Main_panel.private.CurrentColumnOrder); // Изменение порядка столбцов]]>
				</body>
			</do>
			<do access-modifier="private" name="func_Use_Settings" display-name="func_Use_Settings" ver="2" type="" type-id="">
				<param access-modifier="private" name="number_table" display-name="" uuid="d543d03a-c6b3-426b-bb70-43ad45848959" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
				<param access-modifier="private" name="title" display-name="" uuid="f6f05133-8daf-49c4-9b04-f4200a521797" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<param access-modifier="private" name="hidden" display-name="" uuid="913814aa-6cc9-4a05-ae41-02d55f3a820c" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
				<param access-modifier="private" name="width" display-name="" uuid="e38f553e-c27d-47eb-9e2f-af02ee39f3ee" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="2"/>
				<body kind="javascript">
					<![CDATA[switch(number_table)
{
case 1:
Main_tables_Operative.Table_Operative_mode.source_1.Title=title;
Main_tables_Operative.Table_Operative_mode.source_1.Hidden=hidden;
if(width>0)
{
Main_tables_Operative.Table_Operative_mode.source_1.Width=width;
Main_tables_Operative.Table_Operative_mode.source_1.WidthResizeMode=2;
}
else
{
Main_tables_Operative.Table_Operative_mode.source_1.WidthResizeMode=3;
}
break;
case 2:
Main_tables_Operative.Table_Operative_mode.time_2.Title=title;
Main_tables_Operative.Table_Operative_mode.time_2.Hidden=hidden;
if(width>0)
{
Main_tables_Operative.Table_Operative_mode.time_2.Width=width;
Main_tables_Operative.Table_Operative_mode.time_2.WidthResizeMode=2;
}
else
{
Main_tables_Operative.Table_Operative_mode.time_2.WidthResizeMode=3;
}
break;
}]]>
				</body>
			</do>
			<do access-modifier="private" name="func_SettingsToFile" display-name="func_SettingsToFile" ver="2" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция сохранения конфигураций в файл
var FolderPath;
//Проверяем, является ли указанный путь абсолютным
if (IsAbsolutePath(ConfigurationFolder)) FolderPath = ConfigurationFolder;
else if (ConfigurationFolder=="") FolderPath = File.CombinePath(File.ProjectFolder, ConfigPathDefault);
else FolderPath = File.CombinePath(File.CombinePath(File.ProjectFolder, ConfigPathDefault), ConfigurationFolder);

var ConfigTable="tableview.json";//вид таблицы
var ConfigToolbox="toolbox.json";//видимость элементов панели инструментов
var ConfigSeverity="severitygroups.json";//распределение групп важностей и проигрывания звуков
var ConfigPatterns="commenttemplates.json";//шаблоны комментариев
var ConfigExport="export.json";//настройки экспорта
var ConfigEvents="eventstyles.json";//настройки событий

var ConfigTablePath = File.CombinePath( FolderPath, ConfigTable);
var ConfigToolboxPath = File.CombinePath( FolderPath, ConfigToolbox);
var ConfigSeverityPath = File.CombinePath( FolderPath, ConfigSeverity);
var ConfigPatternsPath = File.CombinePath( FolderPath, ConfigPatterns);
var ConfigExportPath = File.CombinePath( FolderPath, ConfigExport);
var ConfigEventsPath = File.CombinePath( FolderPath, ConfigEvents);

//Инициализация параметров вида таблицы
var TableView = {};
TableView.Columns = [];
var Colum_1 = {};
var Colum_2 = {};
var Colum_3 = {};
var Colum_4 = {};
var Colum_5 = {};
var Colum_6 = {};
var Colum_7 = {};
var Colum_8 = {};
var Colum_9 = {};
var Colum_10 = {};
var Colum_14 = {};
var Colum_17 = {};
var Colum_19 = {};
var Colum_20 = {};
var Colum_21 = {};
var RowHeight = {};
var HeaderHeight = {};

//Инициализация параметров кнопок
var ToolBox = {};
ToolBox.btnOperMode = {};
ToolBox.btnHistMode = {};
ToolBox.btnSettings = {};
ToolBox.btnExport = {};
ToolBox.btnPrint = {};
ToolBox.btnFiltr = {};
ToolBox.RecHistory = {};
ToolBox.btnAckSel = {};
ToolBox.btnAckAll = {};
ToolBox.btnClearAll = {};
ToolBox.btnSnapshot = {};
ToolBox.btnSndClear = {};
ToolBox.btnSndNext = {};
ToolBox.btnSndMute = {};
ToolBox.btnSort = {};
ToolBox.btnLogin = {};

//Инициализация параметров очередей алармов
var SeverityGroup = {};
SeverityGroup.ApAlarmQueue_1 = {};
SeverityGroup.ApAlarmQueue_2 = {};
SeverityGroup.ApAlarmQueue_3 = {};
SeverityGroup.ApAlarmQueue_4 = {};

//Инициализация шаблонов комментариев
var Comment = {};
Comment.CommentTemplates = [];

//Инициализация параметров экспорта
var Export = {};

//Инициализация параметров событий
var Events = {};

// Проверка на существование папки конфигурации
if (!File.Exists(FolderPath)) File.CreateRecursiveFolder(FolderPath);

//Запись параметров активной таблицы
if (ActiveMode.Value == 0)
{
	//Запись настроек ширины столбцов во временные переменные в случае, если они видны
	if (Main_tables_Operative.Table_Operative_mode.Colum_1.Width != 0) Main_panel.private.widthColumn.Column_1 = Main_tables_Operative.Table_Operative_mode.Colum_1.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_2.Width != 0) Main_panel.private.widthColumn.Column_2 = Main_tables_Operative.Table_Operative_mode.Colum_2.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_3.Width != 0) Main_panel.private.widthColumn.Column_3 = Main_tables_Operative.Table_Operative_mode.Colum_3.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_4.Width != 0) Main_panel.private.widthColumn.Column_4 = Main_tables_Operative.Table_Operative_mode.Colum_4.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_5.Width != 0) Main_panel.private.widthColumn.Column_5 = Main_tables_Operative.Table_Operative_mode.Colum_5.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_6.Width != 0) Main_panel.private.widthColumn.Column_6 = Main_tables_Operative.Table_Operative_mode.Colum_6.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_7.Width != 0) Main_panel.private.widthColumn.Column_7 = Main_tables_Operative.Table_Operative_mode.Colum_7.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_8.Width != 0) Main_panel.private.widthColumn.Column_8 = Main_tables_Operative.Table_Operative_mode.Colum_8.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_9.Width != 0) Main_panel.private.widthColumn.Column_9 = Main_tables_Operative.Table_Operative_mode.Colum_9.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_10.Width != 0) Main_panel.private.widthColumn.Column_10 = Main_tables_Operative.Table_Operative_mode.Colum_10.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_14.Width != 0) Main_panel.private.widthColumn.Column_14 = Main_tables_Operative.Table_Operative_mode.Colum_14.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_17.Width != 0) Main_panel.private.widthColumn.Column_17 = Main_tables_Operative.Table_Operative_mode.Colum_17.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_19.Width != 0) Main_panel.private.widthColumn.Column_19 = Main_tables_Operative.Table_Operative_mode.Colum_19.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_20.Width != 0) Main_panel.private.widthColumn.Column_20 = Main_tables_Operative.Table_Operative_mode.Colum_20.Width;
	if (Main_tables_Operative.Table_Operative_mode.Colum_21.Width != 0) Main_panel.private.widthColumn.Column_21 = Main_tables_Operative.Table_Operative_mode.Colum_21.Width;
	
	//Запись параметров вида таблицы
	Colum_1.Title = Main_tables_Operative.Table_Operative_mode.Colum_1.Title;
	Colum_1.Width = Main_panel.private.widthColumn.Column_1;
	Colum_1.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_1.Hidden;
	Colum_1.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_1.WidthResizeMode;
	Colum_1.Index = Main_tables_Operative.Table_Operative_mode.Colum_1.GetIndex();
	Colum_1.Font = Main_tables_Operative.Table_Operative_mode.Colum_1.Font;
	Colum_1.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_1.TitleFont;
	
	Colum_2.Title = Main_tables_Operative.Table_Operative_mode.Colum_2.Title;
	Colum_2.Width = Main_panel.private.widthColumn.Column_2;
	Colum_2.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_2.Hidden;
	Colum_2.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_2.WidthResizeMode;
	Colum_2.Index = Main_tables_Operative.Table_Operative_mode.Colum_2.GetIndex();
	Colum_2.Font = Main_tables_Operative.Table_Operative_mode.Colum_2.Font;
	Colum_2.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_2.TitleFont;
	
	Colum_3.Title = Main_tables_Operative.Table_Operative_mode.Colum_3.Title;
	Colum_3.Width = Main_panel.private.widthColumn.Column_3;
	Colum_3.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_3.Hidden;
	Colum_3.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_3.WidthResizeMode;
	Colum_3.Index = Main_tables_Operative.Table_Operative_mode.Colum_3.GetIndex();
	Colum_3.Font = Main_tables_Operative.Table_Operative_mode.Colum_3.Font;
	Colum_3.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_3.TitleFont;
	
	Colum_4.Title = Main_tables_Operative.Table_Operative_mode.Colum_4.Title;
	Colum_4.Width = Main_panel.private.widthColumn.Column_4;
	Colum_4.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_4.Hidden;
	Colum_4.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_4.WidthResizeMode;
	Colum_4.Index = Main_tables_Operative.Table_Operative_mode.Colum_4.GetIndex();
	Colum_4.Font = Main_tables_Operative.Table_Operative_mode.Colum_4.Font;
	Colum_4.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_4.TitleFont;

	Colum_5.Title = Main_tables_Operative.Table_Operative_mode.Colum_5.Title;
	Colum_5.Width = Main_panel.private.widthColumn.Column_5;
	Colum_5.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_5.Hidden;
	Colum_5.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_5.WidthResizeMode;
	Colum_5.Index = Main_tables_Operative.Table_Operative_mode.Colum_5.GetIndex();
	Colum_5.Font = Main_tables_Operative.Table_Operative_mode.Colum_5.Font;
	Colum_5.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_5.TitleFont;

	Colum_6.Title = Main_tables_Operative.Table_Operative_mode.Colum_6.Title;
	Colum_6.Width = Main_panel.private.widthColumn.Column_6;
	Colum_6.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_6.Hidden;
	Colum_6.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_6.WidthResizeMode;
	Colum_6.Index = Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex();
	Colum_6.Font = Main_tables_Operative.Table_Operative_mode.Colum_6.Font;
	Colum_6.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_6.TitleFont;

	Colum_7.Title = Main_tables_Operative.Table_Operative_mode.Colum_7.Title;
	Colum_7.Width = Main_panel.private.widthColumn.Column_7;
	Colum_7.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_7.Hidden;
	Colum_7.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_7.WidthResizeMode;
	Colum_7.Index = Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex();
	Colum_7.Font = Main_tables_Operative.Table_Operative_mode.Colum_7.Font;
	Colum_7.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_7.TitleFont;

	Colum_8.Title = Main_tables_Operative.Table_Operative_mode.Colum_8.Title;
	Colum_8.Width = Main_panel.private.widthColumn.Column_8;
	Colum_8.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_8.Hidden;
	Colum_8.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_8.WidthResizeMode;
	Colum_8.Index = Main_tables_Operative.Table_Operative_mode.Colum_8.GetIndex();
	Colum_8.Font = Main_tables_Operative.Table_Operative_mode.Colum_8.Font;
	Colum_8.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_8.TitleFont;

	Colum_9.Title = Main_tables_Operative.Table_Operative_mode.Colum_9.Title;
	Colum_9.Width = Main_panel.private.widthColumn.Column_9;
	Colum_9.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_9.Hidden;
	Colum_9.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_9.WidthResizeMode;
	Colum_9.Index = Main_tables_Operative.Table_Operative_mode.Colum_9.GetIndex();
	Colum_9.Font = Main_tables_Operative.Table_Operative_mode.Colum_9.Font;
	Colum_9.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_9.TitleFont;

	Colum_10.Title = Main_tables_Operative.Table_Operative_mode.Colum_10.Title;
	Colum_10.Width = Main_panel.private.widthColumn.Column_10;
	Colum_10.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_10.Hidden;
	Colum_10.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_10.WidthResizeMode;
	Colum_10.Index = Main_tables_Operative.Table_Operative_mode.Colum_10.GetIndex();
	Colum_10.Font = Main_tables_Operative.Table_Operative_mode.Colum_10.Font;
	Colum_10.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_10.TitleFont;
	
	Colum_14.Title = Main_tables_Operative.Table_Operative_mode.Colum_14.Title;
	Colum_14.Width = Main_panel.private.widthColumn.Column_14;
	Colum_14.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_14.Hidden;
	Colum_14.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_14.WidthResizeMode;
	Colum_14.Index = Main_tables_Operative.Table_Operative_mode.Colum_14.GetIndex();
	Colum_14.Font = Main_tables_Operative.Table_Operative_mode.Colum_14.Font;
	Colum_14.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_14.TitleFont;
	
	Colum_17.Title = Main_tables_Operative.Table_Operative_mode.Colum_17.Title;
	Colum_17.Width = Main_panel.private.widthColumn.Column_17;
	Colum_17.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_17.Hidden;
	Colum_17.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_17.WidthResizeMode;
	Colum_17.Index = Main_tables_Operative.Table_Operative_mode.Colum_17.GetIndex();
	Colum_17.Font = Main_tables_Operative.Table_Operative_mode.Colum_17.Font;
	Colum_17.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_17.TitleFont;
	
	Colum_19.Title = Main_tables_Operative.Table_Operative_mode.Colum_19.Title;
	Colum_19.Width = Main_panel.private.widthColumn.Column_19;
	Colum_19.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_19.Hidden;
	Colum_19.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_19.WidthResizeMode;
	Colum_19.Index = Main_tables_Operative.Table_Operative_mode.Colum_19.GetIndex();
	Colum_19.Font = Main_tables_Operative.Table_Operative_mode.Colum_19.Font;
	Colum_19.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_19.TitleFont;
	
	Colum_20.Title = Main_tables_Operative.Table_Operative_mode.Colum_20.Title;
	Colum_20.Width = Main_panel.private.widthColumn.Column_20;
	Colum_20.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_20.Hidden;
	Colum_20.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_20.WidthResizeMode;
	Colum_20.Index = Main_tables_Operative.Table_Operative_mode.Colum_20.GetIndex();
	Colum_20.Font = Main_tables_Operative.Table_Operative_mode.Colum_20.Font;
	Colum_20.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_20.TitleFont;
	
	Colum_21.Title = Main_tables_Operative.Table_Operative_mode.Colum_21.Title;
	Colum_21.Width = Main_panel.private.widthColumn.Column_21;
	Colum_21.Hidden = Main_tables_Operative.Table_Operative_mode.Colum_21.Hidden;
	Colum_21.WidthResizeMode = Main_tables_Operative.Table_Operative_mode.Colum_21.WidthResizeMode;
	Colum_21.Index = Main_tables_Operative.Table_Operative_mode.Colum_21.GetIndex();
	Colum_21.Font = Main_tables_Operative.Table_Operative_mode.Colum_21.Font;
	Colum_21.TitleFont = Main_tables_Operative.Table_Operative_mode.Colum_21.TitleFont;
	
	TableView.Columns.push({"Column_1":Colum_1});
	TableView.Columns.push({"Column_2":Colum_2});
	TableView.Columns.push({"Column_3":Colum_3});
	TableView.Columns.push({"Column_4":Colum_4});
	TableView.Columns.push({"Column_5":Colum_5});
	TableView.Columns.push({"Column_6":Colum_6});
	TableView.Columns.push({"Column_7":Colum_7});
	TableView.Columns.push({"Column_8":Colum_8});
	TableView.Columns.push({"Column_9":Colum_9});
	TableView.Columns.push({"Column_10":Colum_10});
	TableView.Columns.push({"Column_14":Colum_14});
	TableView.Columns.push({"Column_17":Colum_17});
	TableView.Columns.push({"Column_19":Colum_19});
	TableView.Columns.push({"Column_20":Colum_20});
	TableView.Columns.push({"Column_21":Colum_21});

	//Записываем высоту строки и заголовка
	RowHeight = Main_tables_Operative.Table_Operative_mode.RowHeight;
	HeaderHeight = Main_tables_Operative.Table_Operative_mode.HeaderHeight;
	TableView.RowHeight = RowHeight;
	TableView.TitleHeight = HeaderHeight;
}
else
{
	//Запись настроек ширины столбцов во временные переменные в случае, если они видны
	if (Main_tables_Historical.Table_History_mode.Colum_1.Width != 0) Main_panel.private.widthColumn.Column_1 = Main_tables_Historical.Table_History_mode.Colum_1.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_2.Width != 0) Main_panel.private.widthColumn.Column_2 = Main_tables_Historical.Table_History_mode.Colum_2.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_3.Width != 0) Main_panel.private.widthColumn.Column_3 = Main_tables_Historical.Table_History_mode.Colum_3.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_4.Width != 0) Main_panel.private.widthColumn.Column_4 = Main_tables_Historical.Table_History_mode.Colum_4.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_5.Width != 0) Main_panel.private.widthColumn.Column_5 = Main_tables_Historical.Table_History_mode.Colum_5.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_6.Width != 0) Main_panel.private.widthColumn.Column_6 = Main_tables_Historical.Table_History_mode.Colum_6.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_7.Width != 0) Main_panel.private.widthColumn.Column_7 = Main_tables_Historical.Table_History_mode.Colum_7.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_8.Width != 0) Main_panel.private.widthColumn.Column_8 = Main_tables_Historical.Table_History_mode.Colum_8.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_9.Width != 0) Main_panel.private.widthColumn.Column_9 = Main_tables_Historical.Table_History_mode.Colum_9.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_10.Width != 0) Main_panel.private.widthColumn.Column_10 = Main_tables_Historical.Table_History_mode.Colum_10.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_14.Width != 0) Main_panel.private.widthColumn.Column_14 = Main_tables_Historical.Table_History_mode.Colum_14.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_19.Width != 0) Main_panel.private.widthColumn.Column_19 = Main_tables_Historical.Table_History_mode.Colum_19.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_20.Width != 0) Main_panel.private.widthColumn.Column_20 = Main_tables_Historical.Table_History_mode.Colum_20.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_17.Width != 0) Main_panel.private.widthColumn.Column_17 = Main_tables_Historical.Table_History_mode.Colum_17.Width;
	if (Main_tables_Historical.Table_History_mode.Colum_21.Width != 0) Main_panel.private.widthColumn.Column_21 = Main_tables_Historical.Table_History_mode.Colum_21.Width;

	//Запись параметров вида таблицы
	Colum_1.Title = Main_tables_Historical.Table_History_mode.Colum_1.Title;
	Colum_1.Width = Main_panel.private.widthColumn.Column_1;
	Colum_1.Hidden = Main_tables_Historical.Table_History_mode.Colum_1.Hidden;
	Colum_1.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_1.WidthResizeMode;
	Colum_1.Index = Main_tables_Historical.Table_History_mode.Colum_1.GetIndex();
	Colum_1.Font = Main_tables_Historical.Table_History_mode.Colum_1.Font;
	Colum_1.TitleFont = Main_tables_Historical.Table_History_mode.Colum_1.TitleFont;
	
	Colum_2.Title = Main_tables_Historical.Table_History_mode.Colum_2.Title;
	Colum_2.Width = Main_panel.private.widthColumn.Column_2;
	Colum_2.Hidden = Main_tables_Historical.Table_History_mode.Colum_2.Hidden;
	Colum_2.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_2.WidthResizeMode;
	Colum_2.Index = Main_tables_Historical.Table_History_mode.Colum_2.GetIndex();
	Colum_2.Font = Main_tables_Historical.Table_History_mode.Colum_2.Font;
	Colum_2.TitleFont = Main_tables_Historical.Table_History_mode.Colum_2.TitleFont;
	
	Colum_3.Title = Main_tables_Historical.Table_History_mode.Colum_3.Title;
	Colum_3.Width = Main_panel.private.widthColumn.Column_3;
	Colum_3.Hidden = Main_tables_Historical.Table_History_mode.Colum_3.Hidden;
	Colum_3.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_3.WidthResizeMode;
	Colum_3.Index = Main_tables_Historical.Table_History_mode.Colum_3.GetIndex();
	Colum_3.Font = Main_tables_Historical.Table_History_mode.Colum_3.Font;
	Colum_3.TitleFont = Main_tables_Historical.Table_History_mode.Colum_3.TitleFont;
	
	Colum_4.Title = Main_tables_Historical.Table_History_mode.Colum_4.Title;
	Colum_4.Width = Main_panel.private.widthColumn.Column_4;
	Colum_4.Hidden = Main_tables_Historical.Table_History_mode.Colum_4.Hidden;
	Colum_4.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_4.WidthResizeMode;
	Colum_4.Index = Main_tables_Historical.Table_History_mode.Colum_4.GetIndex();
	Colum_4.Font = Main_tables_Historical.Table_History_mode.Colum_4.Font;
	Colum_4.TitleFont = Main_tables_Historical.Table_History_mode.Colum_4.TitleFont;

	Colum_5.Title = Main_tables_Historical.Table_History_mode.Colum_5.Title;
	Colum_5.Width = Main_panel.private.widthColumn.Column_5;
	Colum_5.Hidden = Main_tables_Historical.Table_History_mode.Colum_5.Hidden;
	Colum_5.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_5.WidthResizeMode;
	Colum_5.Index = Main_tables_Historical.Table_History_mode.Colum_5.GetIndex();
	Colum_5.Font = Main_tables_Historical.Table_History_mode.Colum_5.Font;
	Colum_5.TitleFont = Main_tables_Historical.Table_History_mode.Colum_5.TitleFont;

	Colum_6.Title = Main_tables_Historical.Table_History_mode.Colum_6.Title;
	Colum_6.Width = Main_panel.private.widthColumn.Column_6;
	Colum_6.Hidden = Main_tables_Historical.Table_History_mode.Colum_6.Hidden;
	Colum_6.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_6.WidthResizeMode;
	Colum_6.Index = Main_tables_Historical.Table_History_mode.Colum_6.GetIndex();
	Colum_6.Font = Main_tables_Historical.Table_History_mode.Colum_6.Font;
	Colum_6.TitleFont = Main_tables_Historical.Table_History_mode.Colum_6.TitleFont;

	Colum_7.Title = Main_tables_Historical.Table_History_mode.Colum_7.Title;
	Colum_7.Width = Main_panel.private.widthColumn.Column_7;
	Colum_7.Hidden = Main_tables_Historical.Table_History_mode.Colum_7.Hidden;
	Colum_7.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_7.WidthResizeMode;
	Colum_7.Index = Main_tables_Historical.Table_History_mode.Colum_7.GetIndex();
	Colum_7.Font = Main_tables_Historical.Table_History_mode.Colum_7.Font;
	Colum_7.TitleFont = Main_tables_Historical.Table_History_mode.Colum_7.TitleFont;

	Colum_8.Title = Main_tables_Historical.Table_History_mode.Colum_8.Title;
	Colum_8.Width = Main_panel.private.widthColumn.Column_8;
	Colum_8.Hidden = Main_tables_Historical.Table_History_mode.Colum_8.Hidden;
	Colum_8.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_8.WidthResizeMode;
	Colum_8.Index = Main_tables_Historical.Table_History_mode.Colum_8.GetIndex();
	Colum_8.Font = Main_tables_Historical.Table_History_mode.Colum_8.Font;
	Colum_8.TitleFont = Main_tables_Historical.Table_History_mode.Colum_8.TitleFont;

	Colum_9.Title = Main_tables_Historical.Table_History_mode.Colum_9.Title;
	Colum_9.Width = Main_panel.private.widthColumn.Column_9;
	Colum_9.Hidden = Main_tables_Historical.Table_History_mode.Colum_9.Hidden;
	Colum_9.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_9.WidthResizeMode;
	Colum_9.Index = Main_tables_Historical.Table_History_mode.Colum_9.GetIndex();
	Colum_9.Font = Main_tables_Historical.Table_History_mode.Colum_9.Font;
	Colum_9.TitleFont = Main_tables_Historical.Table_History_mode.Colum_9.TitleFont;

	Colum_10.Title = Main_tables_Historical.Table_History_mode.Colum_10.Title;
	Colum_10.Width = Main_panel.private.widthColumn.Column_10;
	Colum_10.Hidden = Main_tables_Historical.Table_History_mode.Colum_10.Hidden;
	Colum_10.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_10.WidthResizeMode;
	Colum_10.Index = Main_tables_Historical.Table_History_mode.Colum_10.GetIndex();
	Colum_10.Font = Main_tables_Historical.Table_History_mode.Colum_10.Font;
	Colum_10.TitleFont = Main_tables_Historical.Table_History_mode.Colum_10.TitleFont;

	Colum_14.Title = Main_tables_Historical.Table_History_mode.Colum_14.Title;
	Colum_14.Width = Main_panel.private.widthColumn.Column_14;
	Colum_14.Hidden = Main_tables_Historical.Table_History_mode.Colum_14.Hidden;
	Colum_14.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_14.WidthResizeMode;
	Colum_14.Index = Main_tables_Historical.Table_History_mode.Colum_14.GetIndex();
	Colum_14.Font = Main_tables_Historical.Table_History_mode.Colum_14.Font;
	Colum_14.TitleFont = Main_tables_Historical.Table_History_mode.Colum_14.TitleFont;

	Colum_17.Title = Main_tables_Historical.Table_History_mode.Colum_17.Title;
	Colum_17.Width = Main_panel.private.widthColumn.Column_17;
	Colum_17.Hidden = Main_tables_Historical.Table_History_mode.Colum_17.Hidden;
	Colum_17.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_17.WidthResizeMode;
	Colum_17.Index = Main_tables_Historical.Table_History_mode.Colum_17.GetIndex();
	Colum_17.Font = Main_tables_Historical.Table_History_mode.Colum_17.Font;
	Colum_17.TitleFont = Main_tables_Historical.Table_History_mode.Colum_17.TitleFont;
	
	Colum_19.Title = Main_tables_Historical.Table_History_mode.Colum_19.Title;
	Colum_19.Width = Main_panel.private.widthColumn.Column_19;
	Colum_19.Hidden = Main_tables_Historical.Table_History_mode.Colum_19.Hidden;
	Colum_19.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_19.WidthResizeMode;
	Colum_19.Index = Main_tables_Historical.Table_History_mode.Colum_19.GetIndex();
	Colum_19.Font = Main_tables_Historical.Table_History_mode.Colum_19.Font;
	Colum_19.TitleFont = Main_tables_Historical.Table_History_mode.Colum_19.TitleFont;
	
	Colum_20.Title = Main_tables_Historical.Table_History_mode.Colum_20.Title;
	Colum_20.Width = Main_panel.private.widthColumn.Column_20;
	Colum_20.Hidden = Main_tables_Historical.Table_History_mode.Colum_20.Hidden;
	Colum_20.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_20.WidthResizeMode;
	Colum_20.Index = Main_tables_Historical.Table_History_mode.Colum_20.GetIndex();
	Colum_20.Font = Main_tables_Historical.Table_History_mode.Colum_20.Font;
	Colum_20.TitleFont = Main_tables_Historical.Table_History_mode.Colum_20.TitleFont;
	
	Colum_21.Title = Main_tables_Historical.Table_History_mode.Colum_21.Title;
	Colum_21.Width = Main_panel.private.widthColumn.Column_21;
	Colum_21.Hidden = Main_tables_Historical.Table_History_mode.Colum_21.Hidden;
	Colum_21.WidthResizeMode = Main_tables_Historical.Table_History_mode.Colum_21.WidthResizeMode;
	Colum_21.Index = Main_tables_Historical.Table_History_mode.Colum_21.GetIndex();
	Colum_21.Font = Main_tables_Historical.Table_History_mode.Colum_21.Font;
	Colum_21.TitleFont = Main_tables_Historical.Table_History_mode.Colum_21.TitleFont;
	
	TableView.Columns.push({"Column_1":Colum_1});
	TableView.Columns.push({"Column_2":Colum_2});
	TableView.Columns.push({"Column_3":Colum_3});
	TableView.Columns.push({"Column_4":Colum_4});
	TableView.Columns.push({"Column_5":Colum_5});
	TableView.Columns.push({"Column_6":Colum_6});
	TableView.Columns.push({"Column_7":Colum_7});
	TableView.Columns.push({"Column_8":Colum_8});
	TableView.Columns.push({"Column_9":Colum_9});
	TableView.Columns.push({"Column_10":Colum_10});
	TableView.Columns.push({"Column_14":Colum_14});
	TableView.Columns.push({"Column_17":Colum_17});
	TableView.Columns.push({"Column_19":Colum_19});
	TableView.Columns.push({"Column_20":Colum_20});
	TableView.Columns.push({"Column_21":Colum_21});
	
	//Записываем высоту строки и заголовка
	RowHeight = Main_tables_Historical.Table_History_mode.RowHeight;
	HeaderHeight = Main_tables_Historical.Table_History_mode.HeaderHeight;
	TableView.RowHeight = RowHeight;
	TableView.TitleHeight = HeaderHeight;
	TableView.Font = Main_tables_Historical.Table_History_mode.Colum_1.Font;
}

//В случае записи только ширины столбцов, выходим
if (mode == 1) 
{
	File.WriteTextFile(ConfigTablePath, JSON.stringify(TableView));
	return;
}

//Запись настроек отображения кнопок панели
ToolBox.btnOperMode.Hidden = Main_panel.ToolBar.btnOperMode.HideFlag.Value;
ToolBox.btnHistMode.Hidden = Main_panel.ToolBar.btnHistMode.HideFlag.Value;
ToolBox.btnSettings.Hidden = Main_panel.ToolBar.btnSettings.HideFlag.Value;
ToolBox.btnExport.Hidden = Main_panel.ToolBar.btnExport.HideFlag.Value;
ToolBox.btnPrint.Hidden = Main_panel.ToolBar.btnPrint.HideFlag.Value;
ToolBox.btnFiltr.Hidden = Main_panel.ToolBar.btnFiltr.HideFlag.Value;
ToolBox.RecHistory.Hidden = Main_panel.ToolBar.RecHistory.HideFlag.Value;
ToolBox.btnAckSel.Hidden = Main_panel.ToolBar.btnAckSel.HideFlag.Value;
ToolBox.btnAckAll.Hidden = Main_panel.ToolBar.btnAckAll.HideFlag.Value;
ToolBox.btnClearAll.Hidden = Main_panel.ToolBar.btnClearAll.HideFlag.Value;
ToolBox.btnSnapshot.Hidden = Main_panel.ToolBar.btnSnapshot.HideFlag.Value;
ToolBox.btnSndClear.Hidden = Main_panel.ToolBar.btnSndClear.HideFlag.Value;
ToolBox.btnSndNext.Hidden = Main_panel.ToolBar.btnSndNext.HideFlag.Value;
ToolBox.btnSndMute.Hidden = Main_panel.ToolBar.btnSndMute.HideFlag.Value;
ToolBox.btnSort.Hidden = Main_panel.ToolBar.btnSort.HideFlag.Value;
ToolBox.btnLogin.Hidden = Main_panel.ToolBar.btnLogin.HideFlag.Value;

//Запись настроек важностей и проигрывания звуков
SeverityGroup.ApAlarmQueue_1.Severity = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.JsonFilter;
SeverityGroup.ApAlarmQueue_2.Severity = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.JsonFilter;
SeverityGroup.ApAlarmQueue_3.Severity = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.JsonFilter;
SeverityGroup.ApAlarmQueue_4.Severity = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.JsonFilter;

SeverityGroup.ApAlarmQueue_1.SoundEnabled = Main_panel.private.Range1.SoundEnable;
SeverityGroup.ApAlarmQueue_2.SoundEnabled = Main_panel.private.Range2.SoundEnable;
SeverityGroup.ApAlarmQueue_3.SoundEnabled = Main_panel.private.Range3.SoundEnable;
SeverityGroup.ApAlarmQueue_4.SoundEnabled = Main_panel.private.Range4.tempSoundEnable;

SeverityGroup.ApAlarmQueue_1.SoundRepeats = Main_panel.private.Range1.nSoundRepeats;
SeverityGroup.ApAlarmQueue_2.SoundRepeats = Main_panel.private.Range2.nSoundRepeats;
SeverityGroup.ApAlarmQueue_3.SoundRepeats =Main_panel.private.Range3.nSoundRepeats;
SeverityGroup.ApAlarmQueue_4.SoundRepeats =Main_panel.private.Range4.nSoundRepeats;

SeverityGroup.ApAlarmQueue_1.SoundPriority = Main_panel.private.Range1.SoundPriority;
SeverityGroup.ApAlarmQueue_2.SoundPriority = Main_panel.private.Range2.SoundPriority;
SeverityGroup.ApAlarmQueue_3.SoundPriority =Main_panel.private.Range3.SoundPriority;
SeverityGroup.ApAlarmQueue_4.SoundPriority =Main_panel.private.Range4.SoundPriority;

//Запись шаблонов комментариев
for (let i = 0; i < private.CommentPattern.PatternsTable.GetRowCount(); i++)
{
	Comment.CommentTemplates.push(private.CommentPattern.PatternsTable.GetCellData(i,0));
}

//Запись настроек экспорта
Export.Path = Main_panel.private.ExportPath;
Export.ViewColumnSettings = Main_panel.private.ViewColumnSettings.Value;

//Запись настроек событий
Events.OperTableDecorator = Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator;
Events.HistTableDecorator = Main_tables_Historical.Table_History_mode.TableDecorator_1.JsonDecorator;
Events.Table = [];
let tempArray = [];
for (let i = 0; i < private.EventSettings.DecoratorSettings.GetRowCount(); i++)
{
	tempArray = [];
	for (let j = 0; j < private.EventSettings.DecoratorSettings.GetColumnCount(); j++)
	{
		tempArray.push(private.EventSettings.DecoratorSettings.GetCellData(i,j));
	}
	Events.Table.push(tempArray);
}
Events.DefColBackground = private.EventSettings.DefColBackground;
Events.DefColText = private.EventSettings.DefColText;
Events.AckColBackground = private.EventSettings.AckColBackground;
Events.AckColText = private.EventSettings.AckColText;
Events.SelectEventsCol = private.EventSettings.SelectEventsCol;
Events.AckStyleMode = private.EventSettings.AckStyleMode;

//Запись в файл
File.WriteTextFile(ConfigTablePath, JSON.stringify(TableView));
File.WriteTextFile(ConfigToolboxPath, JSON.stringify(ToolBox));
File.WriteTextFile(ConfigSeverityPath, JSON.stringify(SeverityGroup));
File.WriteTextFile(ConfigPatternsPath, JSON.stringify(Comment));
File.WriteTextFile(ConfigExportPath, JSON.stringify(Export));
File.WriteTextFile(ConfigEventsPath, JSON.stringify(Events));
]]>
				</body>
				<param access-modifier="private" name="mode" display-name="" uuid="2138479c-170e-497a-91ba-608a77b60ae6" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			</do>
			<do access-modifier="private" name="GetPermission" display-name="GetPermission" ver="2" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<body kind="om">
					<![CDATA[
vb:bool=false;
if (UseSecurity)
{
	if (Str.Equals(sPermission,"Разрешение- Квитирование")){
		vb= AcknowledgmentAvailable && Main_panel.private.BoolToken_1.Value;
	}
	if (sPermission=="Разрешение- Очистка списка сообщений"){
		vb= ClearingCurrentEventsAvailable && Main_panel.private.BoolToken_2.Value;
	}
	if (sPermission=="Разрешение- Редактирование настроек"){
		vb= EditingSettingsAvailable && Main_panel.private.BoolToken_3.Value;
	}
	if (sPermission=="Разрешение- Экспорт в Excel"){
		vb= ExportDataAvailability && Main_panel.private.BoolToken_4.Value;
	}
	if (sPermission=="Разрешение- Фильтрация"){
		vb= FilterAvailable && Main_panel.private.BoolToken_5.Value;
	}
	if (sPermission=="Разрешение- Управление звуками"){
		vb= SoundPlaybackManagmentAvailable && Main_panel.private.BoolToken_6.Value;
	}
	if (sPermission=="Разрешение- Снимок сообщений"){
		vb= SnapshotAvailable && Main_panel.private.BoolToken_7.Value;
	}
	if (sPermission=="Разрешение- Оперативные сообщения"){
		vb= CurrentEventsAvailable && Main_panel.private.BoolToken_8.Value;
	}
	if (sPermission=="Разрешение- Исторические сообщения"){
		vb= EventHistoryAvailable && Main_panel.private.BoolToken_9.Value;
	}
	if (sPermission=="Разрешение- Печать"){
	vb= PrintingAvailable && Main_panel.private.BoolToken_13.Value;
	}
	if (sPermission=="Разрешение- Сортировка"){
	vb= EventTableSortAvailability && Main_panel.private.BoolToken_11.Value;
	}
	PermissionResult = (vb)?(1):(-2);
}
else
{
		if (sPermission=="Разрешение- Редактирование настроек"){
			vb= EditingSettingsAvailable ;
		}
		if (sPermission=="Разрешение- Экспорт в Excel"){
			vb= ExportDataAvailability ;
		}
		if (sPermission=="Разрешение- Фильтрация"){
			vb= FilterAvailable;
		}
		if (sPermission=="Разрешение- Оперативные сообщения"){
			vb= CurrentEventsAvailable;
		}
		if (sPermission=="Разрешение- Исторические сообщения"){
			vb= EventHistoryAvailable;
		}
		if (sPermission=="Разрешение- Печать"){
			vb= PrintingAvailable;
		}
		if (sPermission=="Разрешение- Сортировка"){
			vb= EventTableSortAvailability;
		}
	if (Str.Length(Main_panel.private.UserName)>0) {
		if (sPermission=="Разрешение- Квитирование"){
			vb= AcknowledgmentAvailable;
		}
		if (sPermission=="Разрешение- Очистка списка сообщений"){
			vb= ClearingCurrentEventsAvailable;
		}
		if (sPermission=="Разрешение- Управление звуками"){
			vb= SoundPlaybackManagmentAvailable;
		}
		if (sPermission=="Разрешение- Снимок сообщений"){
			vb= SnapshotAvailable;
		}
		PermissionResult = (vb)?(1):(-2);
	}else{
		PermissionResult=-1;
	}
}
return vb;]]>
				</body>
				<param access-modifier="private" name="sPermission" display-name="" uuid="3ebbe541-31a4-4ebb-bf17-eaf5fc1cb05d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			</do>
			<object access-modifier="private" name="rowCountKvit" display-name="rowCountKvit" uuid="bb050393-7494-4a84-a84d-824ff3d1ae07" base-type="int8" base-type-id="1f8f5a02-c52c-4260-90d1-e3b1b93b3949" ver="2"/>
			<object access-modifier="private" name="selectedRow" display-name="selectedRow" uuid="fd1097f9-f99d-4bf0-991a-36837af04c52" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
			<do access-modifier="private" name="TimeZone" display-name="TimeZone" ver="2" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
				<body kind="om">
					<![CDATA[time_zone: uint8 = DateTime.Now()-DateTime.UtcNow();
return (time_zone);]]>
				</body>
			</do>
			<do access-modifier="private" name="Filter" display-name="Filter" ver="2" type="" type-id="">
				<body kind="om">
					<![CDATA[Main_panel.private.Field_Filter=Filter_name;
Main_panel.private.Need_To_Filter=true;]]>
				</body>
				<param access-modifier="private" name="Filter_name" display-name="" uuid="be70e22b-7807-477c-8174-fc3315b0d981" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			</do>
			<do access-modifier="private" name="CheckTableEmpty" display-name="CheckTableEmpty" ver="2" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="javascript">
					<![CDATA[/*

//Блокирование кнопки Экспорта и печати, если таблица пуста
//Функционал тестируется
if (ActiveMode == 1) return;
Main_panel.private.int1_1++;
log("Запущено раз CheckTableEmpty: " + Main_panel.private.int1_1);
if (SelectRows()>0) 
{
	Main_panel.ToolBar.btnExport.Active = GetPermission("Разрешение- Экспорт в Excel");
	Main_panel.ToolBar.btnPrint.Active = GetPermission("Разрешение- Печать");
}
else 
{
	Main_panel.ToolBar.btnExport.Active = false;
	Main_panel.ToolBar.btnPrint.Active = false;
}


*/]]>
				</body>
			</do>
			<object access-modifier="private" name="tempAutoScroll" display-name="tempAutoScroll" uuid="e9dcbe63-3fb2-46bf-89ef-64971952dfc7" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<object access-modifier="private" name="firstRowAdded" display-name="firstRowAdded" uuid="addd2527-c0b9-47a5-ae5c-3f281d33f4b5" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<object access-modifier="private" name="widthColumn" display-name="widthColumn" uuid="b6d2d51e-3496-4d8a-ab91-b1bcb0544920" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="59" ver="2"/>
				<designed target="Y" value="113" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="Height" value="18" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="4278190080" ver="2"/>
				<designed target="PenStyle" value="1" ver="2"/>
				<designed target="PenWidth" value="1" ver="2"/>
				<designed target="BrushColor" value="4278190080" ver="2"/>
				<designed target="BrushStyle" value="0" ver="2"/>
				<object access-modifier="private" name="Column_1" display-name="Column_1" uuid="2ec8c544-a958-4f06-9395-69297c4d15cd" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_2" display-name="Column_2" uuid="1cdbd12a-91bc-4511-b52f-c05383e3797b" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_3" display-name="Column_3" uuid="b742b715-4f17-46ab-9e5b-9cb763219b76" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_4" display-name="Column_4" uuid="9255b731-b091-4f2f-b561-08ee7786a12a" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_5" display-name="Column_5" uuid="b6af5e05-8969-4fca-a2b0-c6e64c988e8d" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_6" display-name="Column_6" uuid="39bc6663-ffd0-40f7-b1f3-2c5d5dc72ba9" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_7" display-name="Column_7" uuid="9e4db25d-659e-4dcf-b140-474d4213a8c4" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_8" display-name="Column_8" uuid="e6a1ef9d-1774-4c1f-8724-3a9282d8ab55" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_9" display-name="Column_9" uuid="ce43c051-be08-4945-a082-ca7b1132fc08" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_10" display-name="Column_10" uuid="bb461b39-c183-4fc1-8718-c06a91e57d88" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_14" display-name="Column_14" uuid="6584a81a-a14a-4628-97e4-4d149ad1f7f1" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_19" display-name="Column_19" uuid="148125ca-40f7-4ebd-922a-f549a5b5f855" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_20" display-name="Column_20" uuid="3b0656d6-ad0d-4500-acbc-65f230c9f308" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="Column_17" display-name="Column_17" uuid="5a621fd6-a43d-4964-bbd8-db3dbbe0c7de" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<object access-modifier="private" name="Column_21" display-name="Column_21" uuid="04984f20-6911-4ccc-9065-1ea7961c7d7d" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
			</object>
			<object access-modifier="private" name="tempX" display-name="tempX" uuid="2ccc6736-8dcf-475e-91c5-a2b8c503f145" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
			<init target="tempX" ver="3" value="0"/>
			<object access-modifier="private" name="tempY" display-name="tempY" uuid="11edb20e-9630-4d17-84a8-7133138e76ab" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
			<do access-modifier="private" name="GetAlarmsSequence" display-name="GetAlarmsSequence" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="om">
					<![CDATA[//Функция поиска последовательности сообщений источника. Возвращает строку с номерами строк таблицы
end: bool = false;//Конец иттератора
AckSost: variant;//Состояние квитирования
Acked: bool;//Флаг квитирования
source:string;//Источник
sourceString: string = "";//Строка с источниками


//Выделение источников сообщений
if (ActiveMode == 0)
{
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
		{
	 		AckSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
			source = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetText(Main_tables_Operative.Table_Operative_mode.Colum_5.GetIndex());
			if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
			if (!Acked)
			{
	
				if (!String.Contains(sourceString, source)) 
				{
					if (String.Length(sourceString) > 0) sourceString = String.Concat(sourceString,"\t");
					sourceString = String.Concat(sourceString,source);
				}
			}
		}
		end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
}
else
{
	Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetStatus() == 0)
		{
	 		AckSost = Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
			source = Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetText(Main_tables_Historical.Table_History_mode.Colum_5.GetIndex());
			if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
			if (!Acked)
			{
	
				if (!String.Contains(sourceString, source)) 
				{
					if (String.Length(sourceString) > 0) sourceString = String.Concat(sourceString,"\t");
					sourceString = String.Concat(sourceString,source);
				}
			}
		}
		end = !Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Close();
}
return sourceString;]]>
				</body>
			</do>
			<object access-modifier="private" name="tempHeight" display-name="tempHeight" uuid="04ef677c-60ce-47af-9c8a-ea5827787ced" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
			<do access-modifier="private" name="SetTableParameters" display-name="SetTableParameters" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция передачи параметров таблиц между собой, в частности: параметры сортировки и ширину столбцов
var Column_Oper=[];
var Column_Hist=[];
var widthTemp = [];
var columnCount;

Column_Oper[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
Column_Oper[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
Column_Oper[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
Column_Oper[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
Column_Oper[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
Column_Oper[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
Column_Oper[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
Column_Oper[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
Column_Oper[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
Column_Oper[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
Column_Oper[10] = Main_tables_Operative.Table_Operative_mode.Colum_14;
Column_Oper[11] = Main_tables_Operative.Table_Operative_mode.Colum_17;
Column_Oper[12] = Main_tables_Operative.Table_Operative_mode.Colum_19;
Column_Oper[13] = Main_tables_Operative.Table_Operative_mode.Colum_20;
Column_Oper[14] = Main_tables_Operative.Table_Operative_mode.Colum_21;

Column_Hist[0] = Main_tables_Historical.Table_History_mode.Colum_1;
Column_Hist[1] = Main_tables_Historical.Table_History_mode.Colum_2;
Column_Hist[2] = Main_tables_Historical.Table_History_mode.Colum_3;
Column_Hist[3] = Main_tables_Historical.Table_History_mode.Colum_4;
Column_Hist[4] = Main_tables_Historical.Table_History_mode.Colum_5;
Column_Hist[5] = Main_tables_Historical.Table_History_mode.Colum_6;
Column_Hist[6] = Main_tables_Historical.Table_History_mode.Colum_7;
Column_Hist[7] = Main_tables_Historical.Table_History_mode.Colum_8;
Column_Hist[8] = Main_tables_Historical.Table_History_mode.Colum_9;
Column_Hist[9] = Main_tables_Historical.Table_History_mode.Colum_10;
Column_Hist[10] = Main_tables_Historical.Table_History_mode.Colum_14;
Column_Hist[11] = Main_tables_Historical.Table_History_mode.Colum_17;
Column_Hist[12] = Main_tables_Historical.Table_History_mode.Colum_19;
Column_Hist[13] = Main_tables_Historical.Table_History_mode.Colum_20;
Column_Hist[14] = Main_tables_Historical.Table_History_mode.Colum_21;

widthTemp[0] = widthColumn.Column_1;
widthTemp[1] = widthColumn.Column_2;
widthTemp[2] = widthColumn.Column_3;
widthTemp[3] = widthColumn.Column_4;
widthTemp[4] = widthColumn.Column_5;
widthTemp[5] = widthColumn.Column_6;
widthTemp[6] = widthColumn.Column_7;
widthTemp[7] = widthColumn.Column_8;
widthTemp[8] = widthColumn.Column_9;
widthTemp[9] = widthColumn.Column_10;
widthTemp[10] = widthColumn.Column_14;
widthTemp[11] = widthColumn.Column_17;
widthTemp[12] = widthColumn.Column_19;
widthTemp[13] = widthColumn.Column_20;
widthTemp[14] = widthColumn.Column_21;

columnCount = Math.min(Column_Oper.length, Column_Hist.length); //Ищем минимальное количество столбцов, параметры которых можно передать

//Импорт параметров между таблицами
//Импорт параметров в оперативную таблицу
if (ActiveMode == 0)
{
	//Сброс сортировки 
	for (let i = 0; i < columnCount; i++)
	{
		Column_Oper[i].SortingEnabled = false;
	}
	Main_tables_Operative.Table_Operative_mode.ApplySort();
	
	for (let i = 0; i < Column_Hist.length; i++)
	{
		Column_Oper[i].WidthResizeMode = Column_Hist[i].WidthResizeMode;
		Column_Oper[i].Width = widthTemp[i];
		Column_Oper[i].SortingEnabled = Column_Hist[i].SortingEnabled;
		Column_Oper[i].SortOrder = Column_Hist[i].SortOrder;
		Column_Oper[i].SortPriority = Column_Hist[i].SortPriority;
	}
	Main_tables_Operative.Table_Operative_mode.ApplySort();
}
else
{
	//Сброс сортировки
	for (let i = 0; i < columnCount; i++)
	{
		Column_Hist[i].SortingEnabled = false;
	}
	Main_tables_Historical.Table_History_mode.ApplySort();
	
	for (let i = 0; i < columnCount; i++)
	{
		Column_Hist[i].WidthResizeMode = Column_Oper[i].WidthResizeMode;
		Column_Hist[i].Width = widthTemp[i];
		Column_Hist[i].SortingEnabled = Column_Oper[i].SortingEnabled;
		Column_Hist[i].SortOrder = Column_Oper[i].SortOrder;
		Column_Hist[i].SortPriority = Column_Oper[i].SortPriority;
	}
	Main_tables_Historical.Table_History_mode.ApplySort();
}
]]>
				</body>
			</do>
			<object access-modifier="private" name="StartDate" display-name="StartDate" uuid="e3ddf3f7-5b31-4a22-8d37-cde7c6c0d8d8" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<do access-modifier="private" name="LoadHistory" display-name="LoadHistory" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[// Загружаем историю
dateStart: uint8 = DateTime.Create(ToolBar.RecHistory.DayMonthYear_start.year, ToolBar.RecHistory.DayMonthYear_start.month, ToolBar.RecHistory.DayMonthYear_start.day, ToolBar.RecHistory.Time_start.hours, ToolBar.RecHistory.Time_start.minutes, ToolBar.RecHistory.Time_start.seconds, 0);
dateFinal: uint8 = DateTime.Create(ToolBar.RecHistory.DayMonthYear_final.year, ToolBar.RecHistory.DayMonthYear_final.month, ToolBar.RecHistory.DayMonthYear_final.day, ToolBar.RecHistory.Time_final.hours, ToolBar.RecHistory.Time_final.minutes, ToolBar.RecHistory.Time_final.seconds, 0);

if (ActiveMode==1)
{
	// Если даты некорректны, то выводим сообщение об ошибке
	if (!SetHistoricalInterval(dateStart, dateFinal)) MessageShowError.Invoke();
	StatePanel.RequestFilterStateChange();//Обновляем состояние фильтра в строке
}
]]>
				</body>
			</do>
			<object access-modifier="private" name="DropListMenuChoise" display-name="DropListMenuChoise" uuid="fbc133d3-9821-4143-b552-1563b4d2bc39" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			<object access-modifier="private" name="ApItem" display-name="ApItem" uuid="523a3d6e-71fd-43eb-a7db-7f4b2c1a1652" base-type="ApItemBool" base-type-id="e3f11724-0f76-4497-8d01-38fbb82fb844" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="OnAdviseStateChanged">
					<body kind="javascript">
						<![CDATA[if (adviseState != 2) initStart = false; //инициализируем флаг для пропуска первого значения после подписки
StatePanel.ConnectionStateChange();
]]>
					</body>
				</do-on>
				<init target="Path" ver="3" ref="ClearSoundQueryTag "/>
				<init target="Source" ver="3" ref="ApSource"/>
				<object access-modifier="private" name="initStart" display-name="initStart" uuid="5109b81e-f94e-4c7b-9413-8ea4e2fbacb0" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="OnValueChanged">
					<body kind="om">
						<![CDATA[if (Quality >= 192 && value && initStart) ClearSoundQueueLocal();
if (AdviseState == 2) initStart = true;]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="ClearSoundQueueLocal" display-name="ClearSoundQueueLocal" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[//Очистка очередей звука
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.Clear();
//Выключаем воспроизведение
Sound_1.Active = false;
SoundQueue2 = "";]]>
				</body>
			</do>
			<object access-modifier="private" name="ViewFilter" display-name="ViewFilter" uuid="4a69cdb5-b675-43a8-8fae-e7b97f710c0a" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="-50" ver="3"/>
				<designed target="Y" value="-50" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="20" ver="3"/>
				<designed target="Height" value="20" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="4278190080" ver="3"/>
				<designed target="BrushStyle" value="0" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<do access-modifier="private" name="SetFilterView" display-name="SetFilterView" ver="3" type="" type-id="">
					<body kind="om">
						<![CDATA[// Запись значений фильтров
filter: string = jsonFilter;

if (columnID == "severity") me.JsonFilter.severity = filter;
if (columnID == "group") me.JsonFilter.group = filter;
if (columnID == "message") me.JsonFilter.message = filter;
if (columnID == "source") me.JsonFilter.source = filter;
if (columnID == "time") me.JsonFilter.time = filter;
if (columnID == "active_time") me.JsonFilter.active_time = filter;
if (columnID == "deactive_time") me.JsonFilter.deactive_time = filter;
if (columnID == "ack") me.JsonFilter.ack = filter;
if (columnID == "ack_time") me.JsonFilter.ack_time = filter;
if (columnID == "actor_id") me.JsonFilter.actor_id = filter;
if (columnID == "ack_comment") me.JsonFilter.ack_comment = filter;]]>
					</body>
					<param access-modifier="private" name="columnID" display-name="" uuid="0bcd0d27-17bf-4d93-93b6-11994568266a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="jsonFilter" display-name="" uuid="e1f26313-e51c-4d34-8b05-71047f52630a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<object access-modifier="private" name="JsonFilter" display-name="JsonFilter" uuid="c4881f03-bf12-43a9-8037-b7d93a0483c6" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
					<designed target="X" value="-50" ver="3"/>
					<designed target="Y" value="-50" ver="3"/>
					<designed target="ZValue" value="0" ver="3"/>
					<designed target="Rotation" value="0" ver="3"/>
					<designed target="Scale" value="1" ver="3"/>
					<designed target="Visible" value="false" ver="3"/>
					<designed target="Opacity" value="1" ver="3"/>
					<designed target="Enabled" value="true" ver="3"/>
					<designed target="Tooltip" value="" ver="3"/>
					<designed target="Width" value="100" ver="3"/>
					<designed target="Height" value="100" ver="3"/>
					<designed target="RoundingRadius" value="0" ver="3"/>
					<designed target="PenColor" value="4278190080" ver="3"/>
					<designed target="PenStyle" value="1" ver="3"/>
					<designed target="PenWidth" value="1" ver="3"/>
					<designed target="BrushColor" value="4278190080" ver="3"/>
					<designed target="BrushStyle" value="0" ver="3"/>
					<object access-modifier="private" name="severity" display-name="severity" uuid="cb59c586-75b3-4b28-a4e8-aed1774711be" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="message" display-name="message" uuid="989d7a77-d5d7-4dec-bc36-5d259bf3642f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="source" display-name="source" uuid="93d8ca6f-edd4-465f-aa0f-f9b8eac4674c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="time" display-name="time" uuid="182870d1-6df0-4099-bf2c-14a53c5370a3" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="active_time" display-name="active_time" uuid="61e5ad27-fedb-41f5-ae80-615159a7bec5" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="deactive_time" display-name="deactive_time" uuid="fda5d907-5ac3-410d-8d10-e06fff47f0cb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="ack" display-name="ack" uuid="1fc55586-0eb7-4ba2-b855-a49abdcc946f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="ack_time" display-name="ack_time" uuid="0b8e763e-5c42-4062-bc31-151287f3fc45" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="actor_id" display-name="actor_id" uuid="263d083a-3327-44be-881a-a860a80b8a6e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="ack_comment" display-name="ack_comment" uuid="4701717e-615c-456d-b203-15b1e16b6d08" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<object access-modifier="private" name="group" display-name="group" uuid="62299b83-9164-4f7b-8031-b01dcd4af8c4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				</object>
			</object>
			<object access-modifier="private" name="RequestFilter" display-name="RequestFilter" uuid="7fccd401-262b-4652-827c-a6aa992f9d01" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="-50" ver="3"/>
				<designed target="Y" value="-50" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="20" ver="3"/>
				<designed target="Height" value="20" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="4278190080" ver="3"/>
				<designed target="BrushStyle" value="0" ver="3"/>
				<object access-modifier="private" name="severity" display-name="severity" uuid="bda6135a-2142-4ec4-88e9-d36944b2412f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<object access-modifier="private" name="message" display-name="message" uuid="9847b393-e080-423e-8f59-05ae9c97baa3" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<object access-modifier="private" name="source" display-name="source" uuid="eb7480a7-636a-498e-8dc7-d7350c3afd2b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<object access-modifier="private" name="acknow" display-name="acknow" uuid="4f36346b-7b43-4855-bc50-c157f0671833" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
			</object>
			<object access-modifier="private" name="Open_CommentAck" display-name="Open_CommentAck" uuid="380e4f83-55f5-408b-90fb-fb9ceb5b0c66" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="052df691-6bff-406c-91ae-35b8ffb410ed" base-type="CommentAck" base-type-id="849094ab-4a33-4e58-ad4d-5a8e53262f5c" ver="2">
						<init target="pAlarms" ver="2" ref="here"/>
						<designed target="WindowPosition" value="3" ver="2"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Focus" ver="3" value="true"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
						<init target="mode" ver="3" ref="initMode"/>
					</object>
				</do-on>
				<object access-modifier="private" name="initMode" display-name="initMode" uuid="f306d886-979f-4587-bbc1-e59377630a7c" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			</object>
			<object access-modifier="private" name="Action_openCalendar" display-name="Action_openCalendar" uuid="4e59c835-c219-40c9-a302-f5e6465d8874" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-new">
					<object access-modifier="private" uuid="45c269ed-58e4-45f7-b5ec-41005201efdb" base-type="CalendarForm" base-type-id="778bc14f-b24c-4098-a67d-e10d17056cbb" ver="3">
						<designed target="WindowPosition" value="0" ver="3"/>
						<init target="WindowX" ver="3" ref="Main_panel.private.tempX"/>
						<init target="WindowY" ver="3" ref="Main_panel.private.tempY"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<designed target="Width" value="202" ver="3"/>
						<designed target="Height" value="202" ver="3"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_openDropList" display-name="Action_openDropList" uuid="9913c314-f329-42a9-88d1-51b9e19e536f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-new">
					<object access-modifier="private" uuid="1a137b9c-856e-499e-9d26-1b31811aa426" base-type="DropList" base-type-id="da6d7b24-1a01-4745-80e8-01a4a02c9624" ver="3">
						<init target="Alarms" ver="3" ref="here"/>
						<designed target="WindowHeight" value="0" ver="3"/>
						<init target="WindowX" ver="3" ref="Main_panel.private.tempX"/>
						<init target="WindowY" ver="3" ref="Main_panel.private.tempY"/>
						<designed target="Height" value="1" ver="3"/>
						<init target="ListChoise" ver="3" ref="DropListMenuChoise"/>
						<designed target="Width" value="1" ver="3"/>
						<designed target="WindowWidth" value="180" ver="3"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_openContextMenu" display-name="Action_openContextMenu" uuid="ac38b08a-4ab5-4d08-8691-647b7f49fb58" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-new">
					<object access-modifier="private" uuid="5636f248-556f-4b3a-a210-daf8c1c837e7" base-type="ContextMenu" base-type-id="e370bb8d-718a-43d0-80bf-f2f271b7c121" ver="3">
						<init target="Alarms" ver="3" ref="here"/>
						<init target="OpenFiltrForm" ver="3" value="false"/>
						<designed target="Width" value="1" ver="3"/>
						<designed target="Height" value="1" ver="3"/>
						<designed target="WindowWidth" value="250" ver="3"/>
						<designed target="WindowSizeMode" value="0" ver="3"/>
						<designed target="WindowHeight" value="0" ver="3"/>
						<init target="WindowX" ver="4" ref="tempX"/>
						<init target="WindowY" ver="4" ref="tempY"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_ExportHistoryTable" display-name="Action_ExportHistoryTable" uuid="457a82a4-1887-4408-9789-2aace0266b95" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="e0081261-01a5-4a0a-9e40-7f649ec7a176" base-type="ExportAlarms" base-type-id="4eaa655b-e7df-43ce-a704-693e19fb182e" ver="3">
						<init target="Link_Alarms" ver="3" ref="here"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Init_TableModel" ver="4" ref="Main_tables_Historical.Table_History_mode.TableModel_1"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_ExportOperTable" display-name="Action_ExportOperTable" uuid="ddb39ec9-4786-444b-a77b-10efb9713a2e" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="069f93f3-9ba5-4c11-babb-cdb6ef592e79" base-type="ExportAlarms" base-type-id="4eaa655b-e7df-43ce-a704-693e19fb182e" ver="3">
						<init target="Link_Alarms" ver="3" ref="here"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Init_TableModel" ver="4" ref="Main_tables_Operative.Table_Operative_mode.TableModel_1"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_SettingsForm" display-name="Action_SettingsForm" uuid="642bc580-5c86-494b-a2bd-6537300e945a" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="44a3a732-4ce2-42d0-96ce-4cb7ad114e91" base-type="SettingsForm" base-type-id="82dc7618-130c-486c-840d-5d302f40306b" ver="3">
						<init target="pAlarms" ver="3" ref="here"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_ViewFilterForm" display-name="Action_ViewFilterForm" uuid="48d9b255-4a15-44f1-a100-60302bcf9b7c" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="bd3f6d0a-2613-47e0-9805-1ab0c3c63c43" base-type="FilterViewForm" base-type-id="0eb5fd44-6f82-41a2-83b6-c72fb7903de1" ver="3">
						<init target="Link_Alarms" ver="3" ref="here"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_PrintForm" display-name="Action_PrintForm" uuid="2445e0e8-6515-4bc9-b29b-0ed195d64a28" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<object access-modifier="private" name="Open" display-name="Open" uuid="3e4965b1-d569-48a0-b88e-127f58c8586b" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
					<designed target="Enabled" value="true" ver="4"/>
					<designed target="InvokeTrigger" value="false" ver="4"/>
					<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
						<object access-modifier="private" uuid="a496e93d-8690-4fa4-9b8d-7fc398caebd0" base-type="PrintForm" base-type-id="a0785a72-33ef-4e4e-a349-99dd6fa180bc" ver="3">
							<init target="pAlarms" ver="3" ref="here"/>
							<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
							<designed target="AlwaysOnTop" value="true" ver="3"/>
							<init target="Scale" ver="4" ref="newScale"/>
						</object>
					</do-on>
				</object>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="4" event="Invoked">
					<body kind="om">
						<![CDATA[newScale = ChangeFormScale(defaultWidth, defaultHeight);
Open.Invoke();]]>
					</body>
				</do-on>
				<object access-modifier="private" name="newScale" display-name="newScale" uuid="a79af6a4-c2fb-4c0e-8068-94dc8cd1c6af" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="4"/>
				<object access-modifier="private" name="defaultWidth" display-name="defaultWidth" uuid="f3fd493b-c768-4eb4-b1ad-de74e96cf211" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
				<object access-modifier="private" name="defaultHeight" display-name="defaultHeight" uuid="d1d3c6c6-b79b-42b9-bd2c-327a02d81fea" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
				<init target="newScale" ver="4" value="1.0"/>
				<init target="defaultWidth" ver="4" value="855"/>
				<init target="defaultHeight" ver="4" value="880"/>
			</object>
			<object access-modifier="private" name="Action_SortForm" display-name="Action_SortForm" uuid="65b241d7-f987-4552-9e1f-4583f2e187cf" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="f2db7041-4132-4caa-b182-1b0583052444" base-type="SortForm" base-type-id="95d52964-3d3f-43d2-ad6f-f3cb68a1c51b" ver="3">
						<init target="Alarms_1" ver="3" ref="here"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_RequestFilterForm" display-name="Action_RequestFilterForm" uuid="1d9f452f-0761-46c4-9c3f-9e938d32b08e" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="10906d28-55f0-42ac-b947-ff95b7d98bfb" base-type="FilterForm" base-type-id="3a63182a-45e8-4259-a203-84dcd20232b8" ver="3">
						<init target="Link_Alarms" ver="3" ref="here"/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
					</object>
				</do-on>
			</object>
			<do access-modifier="private" name="SaveSortingConfig" display-name="SaveSortingConfig" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция сохранения сортировки в файл
var FolderPath;

//Проверяем, является ли указанный путь абсолютным
if (IsAbsolutePath(ConfigurationFolder)) FolderPath = ConfigurationFolder;
else if (ConfigurationFolder=="") FolderPath = File.CombinePath(File.ProjectFolder, ConfigPathDefault);
else FolderPath = File.CombinePath(File.CombinePath(File.ProjectFolder, ConfigPathDefault), ConfigurationFolder);

var ConfigSorting="sorting.json";//сортировка
var ConfigSortingPath = File.CombinePath( FolderPath, ConfigSorting);
var Column = [];

//Создание структуры сохраняемых параметров
var SortingSet = {};
SortingSet.Columns = [];
var Colum_1 = {};
var Colum_2 = {};
var Colum_3 = {};
var Colum_4 = {};
var Colum_5 = {};
var Colum_6 = {};
var Colum_7 = {};
var Colum_8 = {};
var Colum_9 = {};
var Colum_10 = {};
var Colum_14 = {};
var Colum_17 = {};
var Colum_19 = {};
var Colum_20 = {};
var Colum_21 = {};

// Проверка на существование папки конфигурации
if (!File.Exists(FolderPath)) File.CreateRecursiveFolder(FolderPath);

//Запись параметров активной таблицы
if (ActiveMode.Value == 0)
{
	Column[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
	Column[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
	Column[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
	Column[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
	Column[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
	Column[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
	Column[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
	Column[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
	Column[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
	Column[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
	Column[10] = Main_tables_Operative.Table_Operative_mode.Colum_14;
	Column[11] = Main_tables_Operative.Table_Operative_mode.Colum_17;
	Column[12] = Main_tables_Operative.Table_Operative_mode.Colum_19;
	Column[13] = Main_tables_Operative.Table_Operative_mode.Colum_20;
	Column[14] = Main_tables_Operative.Table_Operative_mode.Colum_21;
}
else
{
	Column[0] = Main_tables_Historical.Table_History_mode.Colum_1;
	Column[1] = Main_tables_Historical.Table_History_mode.Colum_2;
	Column[2] = Main_tables_Historical.Table_History_mode.Colum_3;
	Column[3] = Main_tables_Historical.Table_History_mode.Colum_4;
	Column[4] = Main_tables_Historical.Table_History_mode.Colum_5;
	Column[5] = Main_tables_Historical.Table_History_mode.Colum_6;
	Column[6] = Main_tables_Historical.Table_History_mode.Colum_7;
	Column[7] = Main_tables_Historical.Table_History_mode.Colum_8;
	Column[8] = Main_tables_Historical.Table_History_mode.Colum_9;
	Column[9] = Main_tables_Historical.Table_History_mode.Colum_10;
	Column[10] = Main_tables_Historical.Table_History_mode.Colum_14;
	Column[11] = Main_tables_Historical.Table_History_mode.Colum_17;
	Column[12] = Main_tables_Historical.Table_History_mode.Colum_19;
	Column[13] = Main_tables_Historical.Table_History_mode.Colum_20;
	Column[14] = Main_tables_Historical.Table_History_mode.Colum_21;
}

Colum_1.SortingEnabled = Column[0].SortingEnabled;
Colum_1.SortPriority = Column[0].SortPriority;
Colum_1.SortOrder = Column[0].SortOrder;

Colum_2.SortingEnabled = Column[1].SortingEnabled;
Colum_2.SortPriority = Column[1].SortPriority;
Colum_2.SortOrder = Column[1].SortOrder;

Colum_3.SortingEnabled = Column[2].SortingEnabled;
Colum_3.SortPriority = Column[2].SortPriority;
Colum_3.SortOrder = Column[2].SortOrder;

Colum_4.SortingEnabled = Column[3].SortingEnabled;
Colum_4.SortPriority = Column[3].SortPriority;
Colum_4.SortOrder = Column[3].SortOrder;

Colum_5.SortingEnabled = Column[4].SortingEnabled;
Colum_5.SortPriority = Column[4].SortPriority;
Colum_5.SortOrder = Column[4].SortOrder;

Colum_6.SortingEnabled = Column[5].SortingEnabled;
Colum_6.SortPriority = Column[5].SortPriority;
Colum_6.SortOrder = Column[5].SortOrder;

Colum_7.SortingEnabled = Column[6].SortingEnabled;
Colum_7.SortPriority = Column[6].SortPriority;
Colum_7.SortOrder = Column[6].SortOrder;

Colum_8.SortingEnabled = Column[7].SortingEnabled;
Colum_8.SortPriority = Column[7].SortPriority;
Colum_8.SortOrder = Column[7].SortOrder;

Colum_9.SortingEnabled = Column[8].SortingEnabled;
Colum_9.SortPriority = Column[8].SortPriority;
Colum_9.SortOrder = Column[8].SortOrder;

Colum_10.SortingEnabled = Column[9].SortingEnabled;
Colum_10.SortPriority = Column[9].SortPriority;
Colum_10.SortOrder = Column[9].SortOrder;

Colum_14.SortingEnabled = Column[10].SortingEnabled;
Colum_14.SortPriority = Column[10].SortPriority;
Colum_14.SortOrder = Column[10].SortOrder;

Colum_17.SortingEnabled = Column[11].SortingEnabled;
Colum_17.SortPriority = Column[11].SortPriority;
Colum_17.SortOrder = Column[11].SortOrder;

Colum_19.SortingEnabled = Column[12].SortingEnabled;
Colum_19.SortPriority = Column[12].SortPriority;
Colum_19.SortOrder = Column[12].SortOrder;

Colum_20.SortingEnabled = Column[13].SortingEnabled;
Colum_20.SortPriority = Column[13].SortPriority;
Colum_20.SortOrder = Column[13].SortOrder;

Colum_21.SortingEnabled = Column[14].SortingEnabled;
Colum_21.SortPriority = Column[14].SortPriority;
Colum_21.SortOrder = Column[14].SortOrder;

SortingSet.Columns.push({"Colum_1":Colum_1});
SortingSet.Columns.push({"Colum_2":Colum_2});
SortingSet.Columns.push({"Colum_3":Colum_3});
SortingSet.Columns.push({"Colum_4":Colum_4});
SortingSet.Columns.push({"Colum_5":Colum_5});
SortingSet.Columns.push({"Colum_6":Colum_6});
SortingSet.Columns.push({"Colum_7":Colum_7});
SortingSet.Columns.push({"Colum_8":Colum_8});
SortingSet.Columns.push({"Colum_9":Colum_9});
SortingSet.Columns.push({"Colum_10":Colum_10});
SortingSet.Columns.push({"Colum_14":Colum_14});
SortingSet.Columns.push({"Colum_17":Colum_17});
SortingSet.Columns.push({"Colum_19":Colum_19});
SortingSet.Columns.push({"Colum_20":Colum_20});
SortingSet.Columns.push({"Colum_21":Colum_21});

//Запись в файл
File.WriteTextFile(ConfigSortingPath, JSON.stringify(SortingSet));
]]>
				</body>
			</do>
			<object access-modifier="private" name="Action_AutorizationForm" display-name="Action_AutorizationForm" uuid="e5b50285-4db3-4564-aee9-aa3a68e8e9d7" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="6ebe17a0-c1f2-42f6-a2b7-b68d676e47fa" base-type="Alarms_AuthorizationForm" base-type-id="516a9bf3-b44c-409a-b3b8-639c8dc21745" ver="3">
						<init target="AlwaysOnTop" ver="3" ref="AlwaysOnTopForm"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<init target="bInit" ver="3" value="false"/>
						<init target="loginYes" ver="3" value="false"/>
						<init target="passwordOld" ver="3" value="false"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="Action_DialogWindow" display-name="Action_DialogWindow" uuid="3e0e3ded-17eb-4b77-afdb-74c7d99b3a4a" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="3">
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="InvokeTrigger" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="0a795168-1849-4bec-aae5-f0a180c57810" base-type="Alarms_DialogWindow" base-type-id="547cb690-acf8-42a8-9b89-e05fdd1caef4" ver="3">
						<init target="message" ver="3" ref="inputString"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<init target="mode" ver="3" ref="inputMode"/>
					</object>
				</do-on>
				<object access-modifier="private" name="inputString" display-name="inputString" uuid="ddda3c0e-9c95-43b3-97d0-1abc30534d01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<object access-modifier="private" name="inputMode" display-name="inputMode" uuid="dc9a686f-676f-4b6b-b809-c2d00910b584" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			</object>
			<object access-modifier="private" name="MessageNoPermission" display-name="MessageNoPermission" uuid="c6a301a5-b527-43f5-997d-2f9a106c9c4d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="195fe239-e3e3-4644-9cd6-25ff065b6454" base-type="ShowMessage" base-type-id="80efb285-008a-4076-a272-29a14a2e651a" ver="2">
						<init target="message" ver="2" value="Отсутствует разрешение на выполнение данной операции."/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<init target="title" ver="3" value="Ошибка"/>
						<designed target="Width" value="1" ver="3"/>
						<designed target="Height" value="1" ver="3"/>
						<designed target="WindowHeight" value="0" ver="3"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="MessageNoLogOn" display-name="MessageNoLogOn" uuid="558cd957-fe54-4ef9-a358-36f38909b4f7" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="4bac3c58-9490-47a2-ab81-560b24417a6e" base-type="ShowMessage" base-type-id="80efb285-008a-4076-a272-29a14a2e651a" ver="2">
						<init target="message" ver="2" value="Операция невозможна! 
Необходима регистрация оператора."/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<init target="title" ver="3" value="Ошибка"/>
						<designed target="Width" value="1" ver="3"/>
						<designed target="Height" value="1" ver="3"/>
						<designed target="WindowHeight" value="0" ver="3"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="MessageShowError" display-name="MessageShowError" uuid="be02c236-b7a2-4d8e-af80-fb7e720c5dab" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="2">
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="InvokeTrigger" value="false" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="63e2bb32-458e-4521-bb1c-f0db02d1f05e" base-type="ShowMessage" base-type-id="80efb285-008a-4076-a272-29a14a2e651a" ver="2">
						<init target="message" ver="2" value="Недопустимое значение границ интервала запроса истории."/>
						<designed target="AlwaysOnTop" value="true" ver="3"/>
						<init target="Alarms_1" ver="3" ref="here"/>
						<init target="title" ver="3" value="Ошибка"/>
						<designed target="WindowHeight" value="0" ver="3"/>
						<designed target="Height" value="1" ver="3"/>
						<designed target="Width" value="1" ver="3"/>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="ConfigPathDefault" display-name="ConfigPathDefault" uuid="2fc43bea-9c75-4736-806b-3e1549f9a46a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<object access-modifier="private" name="CommentPattern" display-name="CommentPattern" uuid="05e74a11-af98-414b-92ec-7e08e39e937e" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="-50" ver="3"/>
				<designed target="Y" value="-50" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="0.01" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="100" ver="3"/>
				<designed target="Height" value="100" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="4278190080" ver="3"/>
				<designed target="BrushStyle" value="0" ver="3"/>
				<object access-modifier="private" name="PatternsTable" display-name="PatternsTable" uuid="5e811027-631f-4f50-9b5f-da4d9b776c2b" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
				</object>
				<designed target="ZValue" value="0" ver="3"/>
			</object>
			<do access-modifier="private" name="SelectedRowsFromJSON" display-name="SelectedRowsFromJSON" ver="3" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
				<body kind="javascript">
					<![CDATA[//Функция разложения строки с номерами строк в JSON-формате
var str = JSON.parse(StringJSON);
if (index > str.length - 1) return -1;
else return str[index];
]]>
				</body>
				<param access-modifier="private" name="StringJSON" display-name="" uuid="48e70a9a-2df3-4a4c-8242-6a3871557077" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<param access-modifier="private" name="index" display-name="" uuid="73120e86-6784-4c5b-bd46-754ae7c1b004" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
			</do>
			<object access-modifier="private" name="CurrentColumnOrder" display-name="CurrentColumnOrder" uuid="7c8e607d-4ef9-49c7-9ef3-da7c22f7f45a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<do access-modifier="private" name="ChangeColumnOrder" display-name="ChangeColumnOrder" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Изменяем порядок столбцов
var ColumnOper = [];
var ColumnHist = [];
var Order;

ColumnOper[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
ColumnOper[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
ColumnOper[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
ColumnOper[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
ColumnOper[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
ColumnOper[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
ColumnOper[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
ColumnOper[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
ColumnOper[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
ColumnOper[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
ColumnOper[10] = Main_tables_Operative.Table_Operative_mode.Colum_14;
ColumnOper[11] = Main_tables_Operative.Table_Operative_mode.Colum_17;
ColumnOper[12] = Main_tables_Operative.Table_Operative_mode.Colum_19;
ColumnOper[13] = Main_tables_Operative.Table_Operative_mode.Colum_20;
ColumnOper[14] = Main_tables_Operative.Table_Operative_mode.Colum_21;

ColumnHist[0] = Main_tables_Historical.Table_History_mode.Colum_1;
ColumnHist[1] = Main_tables_Historical.Table_History_mode.Colum_2;
ColumnHist[2] = Main_tables_Historical.Table_History_mode.Colum_3;
ColumnHist[3] = Main_tables_Historical.Table_History_mode.Colum_4;
ColumnHist[4] = Main_tables_Historical.Table_History_mode.Colum_5;
ColumnHist[5] = Main_tables_Historical.Table_History_mode.Colum_6;
ColumnHist[6] = Main_tables_Historical.Table_History_mode.Colum_7;
ColumnHist[7] = Main_tables_Historical.Table_History_mode.Colum_8;
ColumnHist[8] = Main_tables_Historical.Table_History_mode.Colum_9;
ColumnHist[9] = Main_tables_Historical.Table_History_mode.Colum_10;
ColumnHist[10] = Main_tables_Historical.Table_History_mode.Colum_14;
ColumnHist[11] = Main_tables_Historical.Table_History_mode.Colum_17;
ColumnHist[12] = Main_tables_Historical.Table_History_mode.Colum_19;
ColumnHist[13] = Main_tables_Historical.Table_History_mode.Colum_20;
ColumnHist[14] = Main_tables_Historical.Table_History_mode.Colum_21;

if (bInit)
{
	try
	{
		Order = JSON.parse(newOrderJSON);
		for (let i = 0; i < ColumnOper.length; i++)
		{
			Main_tables_Operative.Table_Operative_mode.MoveColumn(ColumnOper[i].GetIndex(),Order[i]);
			Main_tables_Historical.Table_History_mode.MoveColumn(ColumnHist[i].GetIndex(),Order[i]);
		}
	}
	catch(err)
	{
		log("Exception in 'ChangeColumnOrder': "+err);
		return;
	}
}
]]>
				</body>
				<param access-modifier="private" name="newOrderJSON" display-name="" uuid="8edd902c-05f0-457a-88db-587c50182092" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<object access-modifier="private" name="DisplayAcknowledgeInColumn" display-name='Отображение кнопки "Квитировать" в столбце' uuid="bbd833f5-877f-4fef-ace8-cec7e2b81eac" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
			<object access-modifier="private" name="ComputerName" display-name="ComputerName" uuid="40c62753-7dd5-40df-a952-414afdf09d86" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<do access-modifier="private" name="SeverityJSONtoString" display-name="SeverityJSONtoString" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[//Функция преобразования JSON объекта в строку для важностей: например, 1,2-5
//Умеет парсить, например, это:
//{"OR":[{"severity":8},{"AND":[{">=":{"severity":100}},{"<=":{"severity":150}}]}]}
//{"severity":100}
//{"AND":[{">=":{"severity":100}},{"<=":{"severity":105}}]}
var obj = inputStr;
var strOut = "";
if (obj != "") obj = JSON.parse(obj); //Проверяем наличие в JSON-строке элементов
else return strOut;

if (obj.OR != undefined)
{
	for (let i = 0; i < obj.OR.length; i++)
	{
		if (obj.OR[i].AND != undefined)
		{
			for (let j = 0; j < obj.OR[i].AND.length; j++)
			{
				if (strOut != "") strOut += ",";
				if (obj.OR[i].AND[j][">="] != undefined) 
				{
					strOut += obj.OR[i].AND[j][">="]["severity"] + "-" + obj.OR[i].AND[j+1]["<="]["severity"];
					j++;
				}
			}
		}
		else
		{
			if (strOut != "") strOut += ",";
		 	strOut += obj.OR[i].severity;
		}
	}
}
if (obj.AND != undefined)
{
	for (let j = 0; j < obj.AND.length; j++)
	{
		if (strOut != "") strOut += ",";
		if (obj.AND[j].severity != undefined) strOut += obj.AND[j].severity;
		if (obj.AND[j][">="] != undefined) 
		{
			strOut += obj.AND[j][">="]["severity"] + "-" + obj.AND[j+1]["<="]["severity"];
			j++;
		}
	}
}

if (obj.severity != undefined && obj.severity != 0) strOut += obj.severity; //Если в JSON-строке только одно число
//log(strOut);
return strOut;
]]>
				</body>
				<param access-modifier="private" name="inputStr" display-name="" uuid="15d6ae75-5054-4dc4-b523-0bb251cdcfba" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<do access-modifier="private" name="GapToArray" display-name="GapToArray" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[//Преобразование последовательности в массив идущих друг за другом чисел
var str = inputString;
var numberArray = [];
var tempArray = [];
var commonArray = [];
var gapPattern = /\d+\s?[-]\s?\d+/;

str = inputString.replace(/[ ]/g,"");
//Проверка на случай, если элемент всего один
if (/(^\s?[0-9]{1,3}\s?$)|(^\s?[0-9]{1,3}\s?[-]\s?[0-9]{1,3}\s?$|^\s?(1000)$)/.test(str))commonArray[0] = str;
else commonArray = str.split(",");
if (/[,]/.test(commonArray[commonArray.length-1])) return "error";

//Проверка на верную запись диапазона чисел, запись его чисел в виде элемента массива
for (let i = 0; i < commonArray.length; i++)
{
	if (gapPattern.test(commonArray[i])) //Если элемент - диапазон чисел, то проверяем его и формируем массив
	{
		tempArray = commonArray[i].match(/\d+/g);
		if (parseInt(tempArray[0]) >= parseInt(tempArray[1])) return "error";
		while (parseInt(tempArray[0]) <= parseInt(tempArray[1]))
		{
			numberArray.push(tempArray[0]);
			tempArray[0] = parseInt(tempArray[0])+1;
		}
	}
	else numberArray.push(commonArray[i]);
	tempArray = [];
}
return numberArray.join(',');]]>
				</body>
				<param access-modifier="private" name="inputString" display-name="" uuid="532690fc-8c14-49ad-a833-0842ad40b89d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<do access-modifier="private" name="OrdinaryMessageCorrection" display-name="OrdinaryMessageCorrection" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция корректировки количества обычных сообщений
//Если строк больше допустимого, то удаляется последнее поступившее (является первым в модели данных) событие НЕ ОСОБОВАЖНОЕ

//Получаем массив значений важности из очереди запросов особоважных событий
var sevArray = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.severityArray.split(",");
var count = Main_tables_Operative.Table_Operative_mode.TableModel.GetRowCount();

//Если количество строк таблицы превышает максимальное допустимое значение
if (count > MaxVisibleOrdinaryEvents) {
	Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.FirstSelected();
	//Пока не будут пройдены все строки или в качестве первого события не будет особо важное
	while (!Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.End() && count != MaxVisibleOrdinaryEvents) {
		var match = false;
		var index = Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.CurrentRow;
		var severityVal = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(index, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()));
		var acked = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(index, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()));
		
		//Проверяем, относится ли событие к особо важным и неквитировано
		match = (sevArray.indexOf(severityVal.toString()) != -1)?(true):(false);

		//Если обычное сообщение, то удаляем его
		if (!match || acked)
		{
			//#23568 здесь будем удалять запись из очередей звуков ApAlarmQueue_*
			var source = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(index, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_source_not_show.GetIndex()));
			var condition = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(index, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_11_not_show.GetIndex()));
			var activeTime = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(index, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_2.GetIndex()));
			var alarmQueue = [];
			alarmQueue[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1;
			alarmQueue[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2;
			alarmQueue[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3;
			alarmQueue[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4;
			for (let i = 0; i < alarmQueue.length; i++)
			{
				if (alarmQueue[i].Length == 0) continue;
				alarmQueue[i].MoveFirst();
				while(true)
				{
					var alarmInfo = JSON.parse(alarmQueue[i].CurrentAlarm());
					var _source = alarmInfo.source;
					var _condition = alarmInfo.condition;
					var _activeTime = alarmInfo.activeTime;
					if (source==_source && condition==_condition && activeTime==_activeTime)
						alarmQueue[i].RemoveCurrent();
					if (!alarmQueue[i].MoveNext()) break;
				}
			}
			//удаляем строку из оперативной таблицы
			Main_tables_Operative.Table_Operative_mode.TableModel.RemoveRow(index);
			count--;
		}
		else
		{
			count--;
			Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.Next();
		}
	}
}
]]>
				</body>
			</do>
			<object access-modifier="private" name="ExportPathDefault" display-name="ExportPathDefault" uuid="0d5b8c2d-c558-42e8-9fa4-111f592880d1" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<object access-modifier="private" name="ViewColumnSettings" display-name="ViewColumnSettings" uuid="52cbd321-6eba-4d66-bf9d-9d469eed78dd" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<object access-modifier="private" name="ExportPath" display-name="ExportPath" uuid="379e7ca4-905c-46f9-8ded-2c93eb1a566b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<object access-modifier="private" name="Linux" display-name="Linux" uuid="32ee492c-0ea6-494b-b023-97a2e5e2f642" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<do access-modifier="private" name="JSONstringForFilter" display-name="JSONstringForFilter" ver="4" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[//Функция преобразует исходную строк в формат JSON: проводит поиск по шаблонам и составляет массив элементов, затем применяется обратная польская запись для определения порядка действий;
//filterType == 0 - на выходе строка будет в формате фильтра отображения, 1 - фильтра запроса;
//source: различаются форматы строки для severity и для time. Все остальные идут как строка символов (например, message);

//Алгоритм следующий:
//1.входная строка делится на аргументы и логические элементы по шаблону elementPattern(логические элементы)
//2.формируется массив из этих элементов, в котором пользовательские лог.операции приводятся к единому формату, преобразуются аргументы в зависимости от типа поля
//3.проверяется наличие ошибок в получившемся массиве
//4.формируется польская запись: определяются веса лог.операций и сортировка массива в соотвествии с аргументами и весами
//5.формируется json-строка из объектов, представляющих из себя массив логической операции, элементами которого являются аргументы. Массивы могут быть вложенными.

var resultArray = []; //Массив с аргументами и лог.операторами в формате польской записи
var operatorArray = []; //Массив с лог.операторами с сортировкой по приоритету следования
var gravityPrev = 0;
var gravity = 0;
var objectInfo = {}; //Объект с аргументами и лог.операторами, который преобразуется в json
var prevPrevElem = '';
var prevElem = '';
var jsonStr = ''; //Выходная json строка
var commonArray = []; //Массив с элементами, состоящими из элементов входной строки
var elementPattern;
var signPattern;
var argumentPattern;
var commonArrayStr;
var operatorPattern;
var tempArray = [];
var stringMode; //Формат выходной строки

//Если строка пустая, выходим
inputString = inputString.trim();//Удаляем лишние пробелы из входной строки
if (inputString.trim() == "") return "";

//Инициализируем шаблон на поиск операторов, чисел и операндов
switch (source)
{
	case "severity":
		elementPattern = /(\s*ИЛИ\s*)|(\s*И\s*)|(\s*\&\s*)|(\s*\|\s*)|(\s*<>\s*)|(\s*!=\s*)|\s*[(]\s*|\s*[)]\s*/gi;//Все доступные пользователю логические операции
		operatorPattern = /^([(]|[)]|[&]|[|]|[!=]|[<>])$/;//Представление логических операций внутри скрипта
		signPattern = /([><=]+)/g;//Знаковые выражения ==, >, <, <=, >=
		argumentPattern = /(\d+)/;//Значение аргумента без знака
		stringMode = 1;
		break;
	case "time":
		elementPattern = /(\s*ИЛИ\s*)|(\s*И\s*)|(\s*\&\s*)|(\s*\|\s*)|\s*[(]\s*|\s*[)]\s*/gi;
		operatorPattern = /^([(]|[)]|[&]|[|])$/;
		signPattern = /([><=]+)/;
		argumentPattern = /((0[1-9]|[12][0-9]|3[01])[.](0[1-9]|1[012])[.]\d{4}\s([01]\d|2[0-3])(:[0-5]\d){2}(\.[0-9]{3})+)/;
		stringMode = 2;
		break;
	default:
		elementPattern = /([""]{2}.*?[^"]{1}[^"]{1}[""]{2})|[)]\s*((ИЛИ)|(И)|(НЕ)|(\!)|(\|)|(\&))\s*[(]|( ИЛИ )|( И )|(\s*НЕ )|( \& )|( \| )|(\s*\! )|( \& )|( \| )|[(]|[)]|( )/gi;
		operatorPattern = /^([(]|[)]|[&]|[|]|[!])$/;
		signPattern = /([=]*)/g;
		argumentPattern = /(.*)/;
		stringMode = 0;
		break;
}
var arrayPattern = /object/;//Шаблон массива

////Парсим входную строку по elementPattern и формируем массив всех составляющих строки
try
{
	let temp = inputString.replace(/\s\s+/g,' ');//Сокращаем лишние пробелы в строке до одного пробела
	temp = temp.replace(elementPattern,'^$&^'); //Формируем строку, в которых выделены логические операторы, """" и скобки
	commonArray = temp.split("^"); //Формируем массив элементов из полученной строки разделением по ^

	//Преобразуем элементы массива в единую запись (обработка значений времени, числовых и строковых)
	for (let i = 0; i < commonArray.length; i++)
	{
		let index = 0;
		if (commonArray[i] != " ") commonArray[i] = commonArray[i].trim();
		
		if (commonArray[i] == "") index = 1;
		if (/^(И|\&)$/i.test(commonArray[i]) || commonArray[i] == " ") index = 2;
		if (/^(ИЛИ|\|)$/i.test(commonArray[i])) index = 3;
		if (/^НЕ$/i.test(commonArray[i]) && stringMode == 0) index = 4;
		if (/^(!=|<>)$/.test(commonArray[i]) && stringMode == 1) index = 5;
		if (/^([)]|[(])$/.test(commonArray[i])) index = 6;

		switch (index)
		{
			case 1://Удаление пустых элементов
				commonArray.splice(i,1);
				i--;
				break;
			case 2://Обработка логического И
				commonArray[i] = "&";
				break;
			case 3://Обработка логического ИЛИ
				commonArray[i] = "|";
				break;
			case 4://Обработка логического НЕ
				commonArray[i] = "!";
				if (commonArray[i-1] == ")")//Если за скобкой нет логической операции & или |, то по умолчанию добавляем &
				{
					commonArray.splice(i,0,"&");
					i++;
				}
				break;
			case 5://Обработка отрицания для числовых значений
				commonArray[i] = "!";
				if (commonArray[i+1] != "(" && commonArray[i+1] != "") commonArray[i+1] = "==" + commonArray[i+1]; //Добавляем аргументу знак ==
				break;
			case 6:
				break;
			default://Обработка аргумента
				//Только для строковых полей. Избавляемся от ковычек и добавляем к аргументу **
				if (stringMode == 0)
				{
					if (/^"".*""$/.test(commonArray[i])) commonArray[i] = commonArray[i].replace(/^""|""$/g, "");//Избавляемся от двойных ковычек
					if (!operatorPattern.test(commonArray[i])) commonArray[i] = `*${commonArray[i]}*`;//Добавляем аргументам **
					if (commonArray[i-1] == ")")
					{
						commonArray.splice(i,0,"&");
						i++;
					}
				}
				//Только для полей времени. Приводим к единому формату (дата + часы:минуты:секунды.мс). Парсим точное совпадение
				if (stringMode == 2)
				{	
					let addDate = "";
					//Приводим к единому формату (дата + часы:минуты:секунды.мс)
					if (!(argumentPattern.test(commonArray[i])))	
					{
						//Предполагается, что не указаны мс
						addDate = ".000";
						//Проверка, указаны ли секунды
						if (!/(0[1-9]|[12][0-9]|3[01])[- \.](0[1-9]|1[012])[.]\d{4}\s([0-1]\d|2[0-3])(:[0-5]\d){2}/.test(commonArray[i])) addDate = ":00" + addDate;
						//Проверка, указаны ли часы - минуты
						if (!/(0[1-9]|[12][0-9]|3[01])[- \.](0[1-9]|1[012])[.]\d{4}\s([0-1]\d|2[0-3])(:[0-5]\d){1}/.test(commonArray[i])) addDate = " 00:00" + addDate;
						commonArray[i] = commonArray[i] + addDate;
					}
			
					 //Добавляем аргументу знак ==
					if (!(signPattern.test(commonArray[i]))) commonArray[i] = "==" + commonArray[i];
					//Приведение выражения ==21.02.2018 10:50:06.123 к виду : >=21.02.2018 10:50:06.123 И <21.02.2018 10:50:07.124;
					if (/^(={2})\d/.test(commonArray[i]))
					{
						let newDate;
						let timeValue = commonArray[i].replace(signPattern,"");
						//В зависимости от указания формата значения, прибавляем свой отрезок времени
						//if (addDate == "") newDate = DataTimeAdd(timeValue, "ms"); //работает некорректно (ОМ плохо работает с мс)
						if (addDate == "") break;
						if (addDate == ".000") newDate = DataTimeAdd(timeValue, "sec");
						if (addDate == ":00.000") newDate = DataTimeAdd(timeValue, "min");
						if (addDate == " 00:00:00.000") newDate = DataTimeAdd(timeValue, "day");
						commonArray[i] = ">=" + timeValue;
						commonArray.splice(i+1,0,"&");
						commonArray.splice(i+2,0,"<" + newDate);
						i = i + 2;
					}
				}
				break;
		}
	}
		
	//Проверяем массив на ошибки, если ошибка есть - возвращается "error"
	switch (stringMode)
	{
		case 1:
			if (!CheckValueInt(JSON.stringify(commonArray))) throw 'Ошибка преобразования строки в JSON: неверный формат строки';
			break;
		case 2:
		if (!CheckValueDateTime(JSON.stringify(commonArray))) throw 'Ошибка преобразования строки в JSON: неверный формат строки';
			break;
		default:
			if (!CheckValueString(JSON.stringify(commonArray))) throw 'Ошибка преобразования строки в JSON: неверный формат строки';
			break;
	}

	///На этом этапе парсинг строки окончен. Необходимо представить строку в виде польской записи
	////Проходим поэлементно массив для формирования польской записи
	for (let i = 0; i < commonArray.length; i++)
	{	
		//Если элемент - логический оператор
		if (operatorPattern.test(commonArray[i]))
		{
			gravity = GravityValue(commonArray[i]);
			//В случае, если "("
			if (gravity == 4) 
			{
				operatorArray.push(commonArray[i]);
				continue;
			}
	
			//В случае, если ")" - скобка закрылась
			if (gravity == 5)
			{
				let bracketIndex = operatorArray.lastIndexOf("(", operatorArray.length-1)
				//Операторы, что были в скобках, записываем в результирующий массив
				while (operatorArray.length - 1 != bracketIndex)resultArray.push(operatorArray.pop());
				operatorArray.pop();
			}
		
			//В случае, если предыдущий оператор имеет больший вес - записываем в результирующий массив кроме случае с ()
			if (operatorArray.length != null) gravityPrev = GravityValue(operatorArray[operatorArray.length-1]);
			while (gravityPrev >= gravity && gravityPrev != 4 && gravityPrev != 5 && operatorArray.length != 0)
			{
				resultArray.push(operatorArray.pop());
				gravityPrev = GravityValue(operatorArray[operatorArray.length-1]);
			}
			
			//")" - не записываем
			if (gravity != 5) operatorArray.push(commonArray[i]);
		}
		else resultArray.push(commonArray[i]);
		
		//Если массив кончился - записываем остатки операндов в результирующий массив
		if (i == commonArray.length - 1)
		{
			while (operatorArray.length != 0)
			{
				resultArray.push(operatorArray.pop());
			}
		}
	}
	
	////Формирование JSON-строки
	for (let i = 0; i < resultArray.length; i++)
	{
		//Если всего один элемент в массиве, то выводим только это условие
		if (resultArray.length == 1) if (!arrayPattern.test(resultArray[i])) jsonStr = MakeExpression(resultArray[i]);
		//Если условий несколько
		if (operatorPattern.test(resultArray[i]) && resultArray.length > 1)
		{
			let notExpression;
			let operator = resultArray[i].match(/[&]|[|]|[!]/);
			switch(operator[0])
			{
				case '&':
					operator = 'AND';
					break;
				case '|':
					operator = 'OR';
					break;
				case '!':
					operator = 'NOT';
					//В случае, если есть отрицание, применяем к скобкам или выражению
					if (!arrayPattern.test(resultArray[i-1])) prevElem = MakeExpression(resultArray[i-1]);
					else prevElem = resultArray[i-1];
					notExpression = {'NOT': prevElem};
					jsonStr = JSON.stringify(notExpression);
					jsonStr = JSON.parse(jsonStr);
					resultArray.splice(i-1, 2, jsonStr);
					i-= 1;
					objectInfo = {};
					continue;
			}
			
			//Считываем элемент i-2 и i-1, если это не объекты - преобразуем
			if (!arrayPattern.test(resultArray[i-2]))prevPrevElem = MakeExpression(resultArray[i-2]);
			else prevPrevElem = resultArray[i-2];
			if (!arrayPattern.test(resultArray[i-1]))prevElem = MakeExpression(resultArray[i-1]);
			else prevElem = resultArray[i-1];;
			//Создаем объект с именем оператора, который является массивом и заполняем его
			objectInfo[`${operator}`] = [];
			objectInfo[objectInfo[`${operator}`].push(prevPrevElem)];
			objectInfo[objectInfo[`${operator}`].push(prevElem)];
			
			//записываем объект в виде строки
			jsonStr = JSON.stringify(objectInfo);
			jsonStr = JSON.parse(jsonStr);
			
			//Заменяем элементы i-2 и i-1 на полученное выражение
			resultArray.splice(i-2, 3, jsonStr);
			i-= 2;
			objectInfo = {};
			
			//В случае последнего прохода строку не обнуляем
			if (i >= 2) jsonStr = '';
		}
	}
	jsonStr = JSON.stringify(jsonStr);
	if (jsonStr == '""') throw 'myException';
	//log(jsonStr);
	return jsonStr;
	
	////Используемые функции
	//Функция опеределения веса оператора
	function GravityValue(gravity)
	{
		switch(gravity)
		{
			case '&':
				gravity = 2;
				break;
			case '|':
				gravity = 1;
				break;
			case '(':
				gravity = 4;
				break;
			case ')':
				gravity = 5;
				break;
			case '!':
				gravity = 3;
				break;
		}
		return gravity;
	}
	
	////Фукнция получения выражения вида^
	//">": { "data": 10 }" - фильтр отображения
	//">": { "severity": 10 }" - фильтр запроса
	function MakeExpression(str)
	{
		let sign;
		let number;
		let argument = str.match(argumentPattern);
		let expression = {};
		//Выбор формата выходного выражения. filterType = 0 - фильтр отображения, 1 - фильтр запроса
		switch (stringMode)
		{
			case 1://Важность
				sign = str.match(signPattern);
		 		if (filterType == 0) expression = {[sign[0]]: {"data":parseInt(argument)}};
		 		else expression = {[sign[0]]: {[source]:parseInt(argument)}};
		 		break;
		 	case 2://Дата
		 		sign = str.match(signPattern);
		 		//перед нахождением выражения здесь надо преобразовать строку времени в запись вида мм-дд-гг ч:м:с:мс
				//expression = {[sign[0]]: {"data":Date.parse(argument[0].replace(/(\d+)\.(\d+)\.(\d+)/, '$2.$1.$3'))}}; если время в таблице хранится в формате unix
				expression = {[sign[0]]: {"data":StringToDateTime(argument[0])}};
				break;
			default://Символы
				if (filterType == 0)
				{
					if (isFormatted)
						expression = {text:argument[0].toString().trim()};
					else expression = {data:argument[0].toString().trim()};
				}
				else
					expression = {[source]:argument[0].toString().trim()};
				break;
		}
		return expression;
	}

}
catch(err)
{
	log("Exception in 'JSONstringForFilter': "+err);
	return "error"
}
																												
											
																
										 
											   
]]>
				</body>
				<param access-modifier="private" name="inputString" display-name="" uuid="94c437ea-dc7c-4590-b340-839d1a301c04" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<param access-modifier="private" name="source" display-name="" uuid="2d748526-a04e-4371-be05-dfed3fc08435" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
				<param access-modifier="private" name="filterType" display-name="" uuid="0ec23269-f0f9-4679-ab02-ee82f681db3d" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
				<param access-modifier="private" name="isFormatted" display-name="" uuid="1daff452-bfec-4876-94d4-d344a8883f15" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
			</do>
			<do access-modifier="private" name="CheckValueString" display-name="CheckValueString" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<body kind="javascript">
					<![CDATA[//Функция проверки корректности ввода значений типа string. Возвращает true, если ошибок нет
var commonArray = [];
var count = 0;
commonArray = JSON.parse(inputString);
if (commonArray == null) return true; 
//опеределяем количество скобок
try
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
		switch (commonArray[i])
		{
			case "(":
				count++;
				if (i == commonArray.length - 1) return false; 
				break;
			case ")":
				count--;
				break;
			case "&":
			case "|":
				if (commonArray[i-1] == "(" || commonArray[i-1] == "!" || commonArray[i-1] == "&" || commonArray[i-1] == "|") return false; 
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|") return false; 
				if (i == commonArray.length - 1) return false; 
				break;
			case "!":
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|"|| commonArray[i+1] == "!") return false; 
				if (i == commonArray.length - 1) return false; 
				break;
		}
	}
}
catch (err)
{
	return false; 
}
if (count != 0) return false; 
return true;

]]>
				</body>
				<param access-modifier="private" name="inputString" display-name="" uuid="8a6ecd2e-417a-42c7-aec2-04c024d28ae4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<do access-modifier="private" name="CheckValueInt" display-name="CheckValueInt" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" form-by-id="true">
				<param access-modifier="private" name="inputValue" display-name="" uuid="e7478ddd-cb1b-4003-857f-06ea3e5f690a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<body kind="javascript">
					<![CDATA[//Функция проверки корректности ввода значений типа int
var commonArray = [];
var count = 0;
commonArray = JSON.parse(inputValue);
if (commonArray == null) return true; 
//опеределяем количество скобок
try
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
		switch (commonArray[i])
		{
			case "(":
				count++;
				if (i == commonArray.length - 1) error = true;
				break;
			case ")":
				count--;
				break;
			case "&":
			case "|":
				if (commonArray[i-1] == "(" || commonArray[i-1] == "!" || commonArray[i-1] == "&" || commonArray[i-1] == "|") return false; 
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|") return false; 
				if (i == commonArray.length - 1) return false; 
				break;
			case "!":
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|" || commonArray[i+1] == "!") return false; 
				if (i > 0 && commonArray[i-1] != "&" && commonArray[i-1] != "|") return false;
				if (i == commonArray.length - 1) return false; 
				break;
			default:
				if (!/^(==|<=|>=|>|<)\d+$/.test(commonArray[i])) return false; 
				break;
		}
	}
}
catch (err)
{
	return false; 
}
if (count != 0) return false; 
return true;]]>
				</body>
			</do>
			<do access-modifier="private" name="CheckValueDateTime" display-name="CheckValueDateTime" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<body kind="javascript">
					<![CDATA[//Функция проверки корректности ввода значений типа time. Возвращает true, если ошибок нет
var commonArray = [];
var count = 0;
commonArray = JSON.parse(inputValue);
if (commonArray == null) return true; 

//опеределяем количество скобок
try
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
		switch (commonArray[i])
		{
			case "(":
				count++;
				if (i == commonArray.length - 1) error = true;
				break;
			case ")":
				count--;
				break;
			case "&":
			case "|":
				if (commonArray[i-1] == "(" || commonArray[i-1] == "!" || commonArray[i-1] == "&" || commonArray[i-1] == "|") return false; 
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|") return false; 
				if (i == commonArray.length - 1) return false; 
				break;
			case "!":
				if (commonArray[i+1] == ")" || commonArray[i+1] == "&" || commonArray[i+1] == "|"|| commonArray[i+1] == "!") return false; 
				if (i > 0 && commonArray[i-1] != "&" && commonArray[i-1] != "|") return false;
				if (i == commonArray.length - 1) return false; 
				break;
			default:
				if (!/^(==|<=|>=|>|<) *((0[1-9]|[12][0-9]|3[01])[.](0[1-9]|1[012])[.]\d{4}\s([01]\d|2[0-3])(:[0-5]\d){2}(\.[0-9]{3})+)?$/.test(commonArray[i])) return false; 
				if (/^(==|<=|>=|>|<) *(31.12.9999 23:59:59.999)?$/.test(commonArray[i])) return false; 
				break;
		}
	}
}
catch (err)
{
	return false; 
}
if (count != 0) return false; 
return true;]]>
				</body>
				<param access-modifier="private" name="inputValue" display-name="" uuid="abb617a8-37b1-4730-9e04-0024bc80e8aa" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<do access-modifier="private" name="StringToDateTime" display-name="StringToDateTime" ver="2" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
				<body kind="om">
					<![CDATA[str: string = inputString;
time: uint8 = DateTime.Parse(str);
time = DateTime.ToUtc(time);//перевод времени в формат utc
return time;]]>
				</body>
				<param access-modifier="private" name="inputString" display-name="" uuid="94c437ea-dc7c-4590-b340-839d1a301c04" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
			</do>
			<do access-modifier="private" name="DataTimeAdd" display-name="DataTimeAdd" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="om">
					<![CDATA[//Функция прибавления временного отрезка на 1 у.е.
data: uint8 = DateTime.Parse(inputString);
ms: uint2 = 0;
msString: string;

if (offsetMode == "ms") data = DateTime.AddMSeconds(data, 1);
if (offsetMode == "sec") data = DateTime.AddSeconds(data, 1);
if (offsetMode == "min") data = DateTime.AddMinutes(data, 1);
if (offsetMode == "day") data = DateTime.AddDays(data, 1);

ms = DateTime.MSecond(data);//Для вывода мс
if (ms < 10) msString = ".00";
else if (ms < 100) msString = ".0";
else msString = ".";
msString = String.Concat(msString, String.ToString(ms));

resultStr: string = DateTime.ToString(data);
resultStr = String.Concat(resultStr, msString);
return resultStr;]]>
				</body>
				<param access-modifier="private" name="inputString" display-name="" uuid="a3226cbc-39a3-49b1-808a-81d899096720" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<param access-modifier="private" name="offsetMode" display-name="" uuid="edcbd435-2710-4fdb-a929-f0c721aae8b9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<object access-modifier="private" name="EventSettings" display-name="EventSettings" uuid="00ab1bfc-3de1-46f2-8d32-b1e69559e487" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="-30" ver="3"/>
				<designed target="Y" value="-30" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="0.01" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="100" ver="3"/>
				<designed target="Height" value="100" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="4278190080" ver="3"/>
				<designed target="BrushStyle" value="0" ver="3"/>
				<object access-modifier="private" name="DecoratorSettings" display-name="DecoratorSettings" uuid="910582af-7c55-469d-a64b-d76c4e19534c" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
				</object>
				<designed target="ZValue" value="0" ver="3"/>
				<do access-modifier="private" name="TableInitializer" display-name="TableInitializer" ver="3" type="" type-id="">
					<body kind="om">
						<![CDATA[DecoratorSettings.AddColumn("subcondition","","","","string",false,true);
DecoratorSettings.AddColumn("severity","","","","string",false,true);
DecoratorSettings.AddColumn("group","","","","string",false,true);
DecoratorSettings.AddColumn("background","","","","uint4",false,true);
DecoratorSettings.AddColumn("text","","","","uint4",false,true);
DecoratorSettings.AddColumn("example","","","","string",false,true);
DecoratorSettings.AddColumn("blinking","","","","string",false,true);
DecoratorSettings.AddColumn("blinkingBackground","","","","uint4",false,true);
DecoratorSettings.AddColumn("blinkingText","","","","uint4",false,true);
DecoratorSettings.AddColumn("id","","","","uint4",false,true);]]>
					</body>
				</do>
				<object access-modifier="private" name="DefColBackground" display-name="DefColBackground" uuid="45df4f65-7dad-4b3f-90c6-8216a6c4c5dc" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="DefColText" display-name="DefColText" uuid="725d17fa-68ee-4508-b4b4-ea73ec3a9789" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="AckColBackground" display-name="AckColBackground" uuid="ed028760-c4f2-4aa3-90f6-c5fc90368b56" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="AckColText" display-name="AckColText" uuid="6be6eb10-2226-4eb2-a560-9d33a6a78b1c" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="SelectEventsCol" display-name="SelectEventsCol" uuid="f08a8a65-7aac-49a3-86db-0d3c87ce35d9" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
				<object access-modifier="private" name="AckStyleMode" display-name="AckStyleMode" uuid="2dfed435-8f32-4bc7-92d6-9d0d24fed383" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
				<do access-modifier="private" name="GetDefSettings" display-name="GetDefSettings" ver="3" type="" type-id="">
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для оперативной и исторической таблицы
try{
var Object = {};
var ObjectHistoryMode = {};

var active;
var severity;
var group;
var backgroundColor;
var textColor;
var blinkingTime;
var blinkBackColor;
var blinkTextColor;
var ackColBackground = AckColBackground.toString(16);
var ackColText = AckColText.toString(16);
var severityArray = [];

Object.Conditions = [];
Object.Decorating = [];
Object.StyleDictionary = [];
Object.FormatDictionary = [];
Object.Formatting= [];

ObjectHistoryMode.Conditions = [];
ObjectHistoryMode.Decorating = [];
ObjectHistoryMode.StyleDictionary = [];
ObjectHistoryMode.FormatDictionary = [];
ObjectHistoryMode.Formatting= [];

//Настройки декоратора по умолчанию
Object.Decorating.push(JSON.parse(MakeObjectDefStyle('default_settings')).Decorating[0]);
Object.StyleDictionary.push(JSON.parse(MakeObjectDefStyle('default_settings')).StyleDictionary[0]);
ObjectHistoryMode.Decorating.push(JSON.parse(MakeObjectDefStyle('default_settings')).Decorating[0]);
ObjectHistoryMode.StyleDictionary.push(JSON.parse(MakeObjectDefStyle('default_settings')).StyleDictionary[0]);

//Декоратор для кнопки КВИТИРОВАТЬ
Object.Decorating.push(JSON.parse(MakeObjectAckButton('ack_button','ack_button')).Decorating[0]);
Object.StyleDictionary.push(JSON.parse(MakeObjectAckButton('ack_button','ack_button')).StyleDictionary[0]);

//Настройки декоратора для выделенной строки
Object.Decorating.push(JSON.parse(MakeObjectSelStyle('row_selected')).Decorating[0]);
Object.StyleDictionary.push(JSON.parse(MakeObjectSelStyle('row_selected')).StyleDictionary[0]);
ObjectHistoryMode.Decorating.push(JSON.parse(MakeObjectSelStyle('row_selected')).Decorating[0]);
ObjectHistoryMode.StyleDictionary.push(JSON.parse(MakeObjectSelStyle('row_selected')).StyleDictionary[0]);

/*
active = "Все"; //состояние активности
severity = ""; //значение важности
group = ""; //значение группы важности

backgroundColor = EventSettings.DefColBackground; //цвет фона
textColor = EventSettings.DefColText; //цвет текста
blinkBackColor = DecoratorSettings.GetCellData(0,7).toString(16); //цвета фона мигания
blinkTextColor = DecoratorSettings.GetCellData(0,8).toString(16); //цвет текста мигания*/

//Заполняем словарь форматов для столбцов
//Object.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionary("severity_column", JSON.stringify(enumArray))));//#23602 empty format is invalid
Object.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionaryBool("ack_column", JSON.stringify([{'value':true, 'text':'Да'}, {'value':false, 'text':'Нет'}]))));
Object.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionaryBool("active_column", JSON.stringify([{'value':true, 'text':'Активно'}, {'value':false, 'text':'Неактивно'}]))));

//ObjectHistoryMode.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionary("severity_column", JSON.stringify(enumArray))));//#23602 empty format is invalid
ObjectHistoryMode.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionaryBool("ack_column", JSON.stringify([{'value':true, 'text':'Да'}, {'value':false, 'text':'Нет'}]))));
ObjectHistoryMode.FormatDictionary.push(JSON.parse(MakeObjectFormatDictionaryBool("active_column", JSON.stringify([{'value':true, 'text':'Активно'}, {'value':false, 'text':'Неактивно'}]))));

//Заполняем правила форматирования для столбцов
Object.Formatting.push(JSON.parse(MakeObjectFormatting("group_column", "group","","")));
Object.Formatting.push(JSON.parse(MakeObjectFormatting("ack_column", "ack","","")));
Object.Formatting.push(JSON.parse(MakeObjectFormatting("active_column", "active","","")));
Object.Formatting.push(JSON.parse(MakeObjectFormatting("ack_required_column", "ack_required", JSON.stringify([{'condition':{'data:ack':true},'text':'text:ack_time'}, {'condition':{'data:ack':false},'text':'КВИТИРОВАТЬ'}, {'condition':{'data:ack_required':false},'text': ' '}]),"")));
ObjectHistoryMode.Formatting.push(JSON.parse(MakeObjectFormatting("group_column", "group","","")));
ObjectHistoryMode.Formatting.push(JSON.parse(MakeObjectFormatting("ack_column", "ack","","")));
ObjectHistoryMode.Formatting.push(JSON.parse(MakeObjectFormatting("active_column", "active","","")));
ObjectHistoryMode.Formatting.push(JSON.parse(MakeObjectFormatting("ack_required_column", "ack_required", JSON.stringify([{'condition':{'data:ack':true},'text':'text:ack_time'}, {'condition':{'data:ack':false},'text':'Не квитировано'}, {'condition':{'data:ack_required':false},'text': ' '}]),"")));

Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator = JSON.stringify(Object);
Main_tables_Historical.Table_History_mode.TableDecorator_1.JsonDecorator = JSON.stringify(ObjectHistoryMode);
Main_panel.private.EventSettings.OtherEventsDecorating(Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator);

}catch (err){log("Exception in GetDefSettings:"); throw(err);}
]]>
					</body>
				</do>
				<do access-modifier="private" name="AddDefSet" display-name="AddDefSet" ver="3" type="" type-id="">
					<body kind="om">
						<![CDATA[//Значения по умолчанию
if (DefColBackground == 0)  DefColBackground = 4294967295;
if (DefColText == 0)  DefColText = 4278190080;
if (AckColBackground == 0)  AckColBackground = 4294967295;
if (AckColText == 0)  AckColText = 4278190080;
if (SelectEventsCol == 0)  SelectEventsCol = 4278223103;
if (!AckStyleMode) AckStyleMode = false;

//Установить в декоратор настройки по умолчанию
if (Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator == "") GetDefSettings();]]>
					</body>
				</do>
				<do access-modifier="private" name="MakeJSONstring" display-name="MakeJSONstring" ver="2" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" form-by-id="true">
					<param access-modifier="private" name="inputString" display-name="" uuid="94c437ea-dc7c-4590-b340-839d1a301c04" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
					<body kind="javascript">
						<![CDATA[//Функция преобразует исходную строку в формат JSON вида ">": { "severity": 10 }"
//определяются логические операторы и происходит поэтапное формирование логических выражений из элементов массива и происходит формирование строки в JSON формате
var str = inputString;
var objectInfo = {};
var JSONStr = '';
var tempArray =[];

//Если пустая строка, то возвращаем "0" для того, чтобы в очередь не попадали значения
//if (inputString == "") return '{"severity": 0 }';

//Шаблон диапазона
var gapPattern = /\d+[-]\d+/;

//Заполняем массив символами строки
var commonArray = str.split(",");

//Фукнция получения выражения вида ">": { "severity": 10 }"
function MakeExpression(str,gap)
{
	let argument = str.match(/\d+/g);
	let expression = {};
	//Если имеем дело с диапазоном
	expression = {[gap]: {["data:" + `${columnId}`] : parseInt(argument[0])}};
	return expression
}

//Если элемент всего один и не диапазон
if (commonArray.length == 1 && !gapPattern.test(commonArray[0])) 
{
	objectInfo = MakeExpression(commonArray[0],"==");
	JSONStr = JSON.stringify(objectInfo);
	return JSONStr;
}

//Формирование JSON-строки
for (let i = 0; i < commonArray.length; i++)
{
	let tempObject = {};
	tempObject[`AND`] = [];
	if (gapPattern.test(commonArray[i]))
	{
		tempArray = commonArray[i].match(/\d+/g);
		tempObject[`AND`].push(MakeExpression(tempArray[0],">="));
		tempObject[`AND`].push(MakeExpression(tempArray[1],"<="));
		if (commonArray.length > 1)
		{
			if (objectInfo[`OR`] == undefined) objectInfo[`OR`] = [];	
			objectInfo[`OR`].push(tempObject);
		}
		else objectInfo = tempObject;
	}
	else
	{
		if (objectInfo[`OR`] == undefined) objectInfo[`OR`] = [];	
		objectInfo[`OR`].push(MakeExpression(commonArray[i],"=="));
	}
}

//записываем объект в виде строки
JSONStr = JSON.stringify(objectInfo);
return JSONStr;]]>
					</body>
					<param access-modifier="private" name="columnId" display-name="" uuid="974bb16c-4ceb-4bb4-8943-407af17fa153" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectFormatDictionary" display-name="MakeObjectFormatDictionary" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование наборов форматов
var formatDictionary = {};

formatDictionary = {};
formatDictionary[`format_name`] = formatName;
formatDictionary[`format`] = {};
formatDictionary[`format`][`enum_format`] = JSON.parse(enumCondition);

return JSON.stringify(formatDictionary,null,2);]]>
					</body>
					<param access-modifier="private" name="formatName" display-name="" uuid="9b0e76a5-cebe-4232-a221-9cc06b6f8ec8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="enumCondition" display-name="" uuid="db378015-4587-4017-81a6-050be2d4822e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectFormatDictionaryBool" display-name="MakeObjectFormatDictionaryBool" ver="4" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование наборов форматов
var formatDictionary = {};

formatDictionary = {};
formatDictionary[`format_name`] = formatName;
formatDictionary[`format`] = {};
formatDictionary[`format`][`bool_format`] = JSON.parse(enumCondition);

return JSON.stringify(formatDictionary,null,2);]]>
					</body>
					<param access-modifier="private" name="formatName" display-name="" uuid="2de23ca9-8e88-43c9-91bd-524340b0ecb6" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
					<param access-modifier="private" name="enumCondition" display-name="" uuid="96762dc4-c837-4c0a-9d21-161c5a060548" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
				</do>
				<do access-modifier="private" name="MakeObjectFormatting" display-name="MakeObjectFormatting" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование правил форматирования

var formatting = {};

formatting[`formatting_rule_name`] = "formatting_" + formatName;
formatting[`formatting_column`] = columnName;

//Если задаётся текст по-умолчанию
if (text_default != "")
{
formatting[`text`] = text_default;
}

//Выбор типа форматирования: ссылка на формат или условие-значение
if (condition == "")
{
	formatting[`format`] = formatName;
}
else formatting.conditions = JSON.parse(condition);

return JSON.stringify(formatting,null,2);]]>
					</body>
					<param access-modifier="private" name="formatName" display-name="" uuid="9b0e76a5-cebe-4232-a221-9cc06b6f8ec8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="columnName" display-name="" uuid="db378015-4587-4017-81a6-050be2d4822e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="condition" display-name="" uuid="ef8d80b2-43bb-44b0-88ff-1f7b1d3c98b8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="text_default" display-name="" uuid="32758a14-47ac-4b2b-8526-48315507938b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectDefStyle" display-name="MakeObjectDefStyle" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для остальных сообщений
var Object = {};

var backgroundColor;
var textColor;
Object.Decorating = [];
Object.StyleDictionary = [];

backgroundColor = DefColBackground.toString(16); //цвет фона
textColor = DefColText.toString(16); //цвет текста

//Формирование объекта правил декорирования
var decorating = {};
var styleDictionary = {};
decorating[`decoration_rule_name`] = ruleName;
decorating[`rowstyle`] = ruleName + "_style";
//decorating[`columnstyle`] = {};
//decorating[`columnstyle`][`ack_required`] = columnStyleName;
Object.Decorating.push(decorating);

styleDictionary[`style_name`] = ruleName + "_style";
styleDictionary[`style`] = {};
styleDictionary[`style`][`background_color`] = '#'+ backgroundColor +'';
styleDictionary[`style`][`color`] = '#'+textColor+'';
styleDictionary[`style`][`text_align`] = "left";
styleDictionary[`style`][`vertical_align`] = "middle";
styleDictionary[`style`][`text_decoration`] = "none";
//Настройка границ
styleDictionary[`style`][`border`] = {'all':{'color':'#ff000000','style':'none','width':'2'}};

Object.StyleDictionary.push(styleDictionary);

return JSON.stringify(Object,null,2);

]]>
					</body>
					<param access-modifier="private" name="ruleName" display-name="" uuid="94c6cc38-6d18-40fd-9ac3-b215e740da01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectAckButton" display-name="MakeObjectAckButton" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для кнопки "КВИТИРОВАТЬ"
var Object = {};

Object.Decorating = [];
Object.StyleDictionary = [];

//Формирование объекта правил декорирования
var decorating = {};
var styleDictionary = {};
decorating[`decoration_rule_name`] = ruleName;

decorating[`decoration_rule`] = {};
decorating[`decoration_rule`][`AND`] = [];
decorating[`decoration_rule`][`AND`].push({'data:ack':false});
decorating[`decoration_rule`][`AND`].push({'data:ack_required':true});

decorating[`columnstyle`] = {};
decorating[`columnstyle`][`ack_required`] = columnStyle;
Object.Decorating.push(decorating);

styleDictionary[`style_name`] = columnStyle;
styleDictionary[`style`] = {};
styleDictionary[`style`] = {'blinker':{'blinker_period':'0'}};
styleDictionary[`style`][`background_color`] = "#fff0f0f0";
styleDictionary[`style`][`color`] = "#ff000000";
styleDictionary[`style`][`text_align`] = "center";
styleDictionary[`style`][`vertical_align`] = "middle";
styleDictionary[`style`][`text_decoration`] = "none";

//Настройка границ
styleDictionary[`style`][`border`] = {'all':{'color':'#ff000000','style':'groove','width':'2'}};

Object.StyleDictionary.push(styleDictionary);

return JSON.stringify(Object,null,2);
]]>
					</body>
					<param access-modifier="private" name="ruleName" display-name="" uuid="94c6cc38-6d18-40fd-9ac3-b215e740da01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="columnStyle" display-name="" uuid="da003b82-6b10-4f56-9231-2f2fbf8694ea" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectAckedColumns" display-name="MakeObjectAckedColumns" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для столбцов по умолчанию после квитирования: Время генерации, Квитировано, Время квитирования, Пользователь, Комментарий квитирования
var Object = {};

Object.Decorating = [];
Object.StyleDictionary = [];

//Формирование объекта правил декорирования
var decorating = {};
var styleDictionary = {};
decorating[`decoration_rule_name`] = ruleName;

decorating[`decoration_rule`] = {};
decorating[`decoration_rule`][`AND`] = [];
decorating[`decoration_rule`][`AND`].push({'data:ack':true});
decorating[`decoration_rule`][`AND`].push({'data:ack_required':true});

decorating[`columnstyle`] = {};
decorating[`columnstyle`][`time`] = columnStyle;
decorating[`columnstyle`][`ack`] = columnStyle;
decorating[`columnstyle`][`ack_time`] = columnStyle;
decorating[`columnstyle`][`actor_id`] = columnStyle;
decorating[`columnstyle`][`ack_comment`] = columnStyle;
Object.Decorating.push(decorating);

styleDictionary[`style_name`] = columnStyle;
styleDictionary[`style`] = {};
styleDictionary[`style`][`background_color`] = '#' + backgroundColor +'';
styleDictionary[`style`][`color`] = '#' + textColor +'';
styleDictionary[`style`][`text_align`] = "left";
styleDictionary[`style`][`vertical_align`] = "middle";
styleDictionary[`style`][`text_decoration`] = "none";

//Настройка границ
styleDictionary[`style`][`border`] = {'all':{'color':'#ff000000','style':'none','width':'2'}};

Object.StyleDictionary.push(styleDictionary);

return JSON.stringify(Object,null,2);
]]>
					</body>
					<param access-modifier="private" name="ruleName" display-name="" uuid="94c6cc38-6d18-40fd-9ac3-b215e740da01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="columnStyle" display-name="" uuid="da003b82-6b10-4f56-9231-2f2fbf8694ea" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="backgroundColor" display-name="" uuid="5df5938d-7b09-4cab-9880-7cd00352face" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="textColor" display-name="" uuid="5ba9895a-f636-4ecc-93dd-d90f77de284a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectOtherAckedEvents" display-name="MakeObjectOtherAckedEvents" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" form-by-id="true">
					<param access-modifier="private" name="ruleName" display-name="" uuid="94c6cc38-6d18-40fd-9ac3-b215e740da01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для остальных квитированных сообщений
var Object = {};

Object.Decorating = [];
Object.StyleDictionary = [];

//Формирование объекта правил декорирования
var decorating = {};
var styleDictionary = {};
decorating[`decoration_rule_name`] = ruleName;

decorating[`decoration_rule`] = {};
decorating[`decoration_rule`][`AND`] = [];
decorating[`decoration_rule`][`AND`].push({'data:ack':true});
decorating[`decoration_rule`][`AND`].push({'data:ack_required':true});
decorating[`rowstyle`] = ruleName + "_style";
Object.Decorating.push(decorating);

styleDictionary[`style_name`] = ruleName + "_style";
styleDictionary[`style`] = {};
styleDictionary[`style`][`background_color`] = '#'+ backgroundColor +'';
styleDictionary[`style`][`color`] = '#'+textColor+'';
styleDictionary[`style`][`text_align`] = "left";
styleDictionary[`style`][`vertical_align`] = "middle";
styleDictionary[`style`][`text_decoration`] = "none";
//Настройка границ
styleDictionary[`style`][`border`] = {'all':{'color':'#ff000000','style':'none','width':'2'}};

Object.StyleDictionary.push(styleDictionary);

return JSON.stringify(Object,null,2);
]]>
					</body>
					<param access-modifier="private" name="backgroundColor" display-name="" uuid="8501e0cf-7502-47c3-a1a8-c254b0b693bf" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="textColor" display-name="" uuid="e3cc4ba3-3140-498e-987b-4ffef0daa5b9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectConditions" display-name="MakeObjectConditions" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование объекта условий для декоратора
if (severityValue == "") return "";

var conditions = {};

conditions[`condition_name`] = conditionName;
conditions[`condition`] = {};
conditions[`condition`][`AND`] = [];

//Добавляем в массив AND условия важности
conditions[`condition`][`AND`].push(JSON.parse(MakeJSONstring(severityValue, "severity")));

//Добавляем в массив AND условие активности
switch (activeValue)
{
	case "Активные":
		conditions[`condition`][`AND`].push({'data:active':true});
		break;
	case "Неактивные":
		conditions[`condition`][`AND`].push({'data:active':false});
		break;
	default:
		break;
}

//Добавляем в массив AND условие квитирования

//Добавляем в массив AND условие активности
switch (ackValue)
{
	case "true":
		conditions[`condition`][`AND`].push({'data:ack':true});
		break;
	case "false":
		conditions[`condition`][`AND`].push({'data:ack':false});
		break;
	default:
		conditions[`condition`][`AND`].push({'data:ack':``});
		break;
}
//conditions[`condition`][`AND`].push({'data:ack':`${ackValue}`});

//Добавляем в массив AND условие необходимости квитирования
//conditions[`condition`][`AND`].push({'data:ack_required':'true'});
return JSON.stringify(conditions,null,2);]]>
					</body>
					<param access-modifier="private" name="activeValue" display-name="" uuid="9b0e76a5-cebe-4232-a221-9cc06b6f8ec8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="severityValue" display-name="" uuid="db378015-4587-4017-81a6-050be2d4822e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="ackValue" display-name="" uuid="e341edd9-c685-43cd-80cf-7c7f97e57050" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="conditionName" display-name="" uuid="9e544436-fa1e-48d2-96d5-b51fb774562a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectDecorations" display-name="MakeObjectDecorations" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" form-by-id="true">
					<param access-modifier="private" name="ruleName" display-name="" uuid="9b0e76a5-cebe-4232-a221-9cc06b6f8ec8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="conditionName" display-name="" uuid="db378015-4587-4017-81a6-050be2d4822e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="rowStyleName" display-name="" uuid="e341edd9-c685-43cd-80cf-7c7f97e57050" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<body kind="javascript">
						<![CDATA[//Формирование объекта правил декорирования
var decorating = {};
//log(columnStyle);
decorating[`decoration_rule_name`] = ruleName;
decorating[`decoration_rule`] = {"==":{	["condition:"+conditionName]:true}};
decorating[`rowstyle`] = rowStyleName;
if (columnStyle != "")
{
	decorating[`columnstyle`] = {};
	decorating[`columnstyle`] = JSON.parse(columnStyle);
}
return JSON.stringify(decorating,null,2);]]>
					</body>
					<param access-modifier="private" name="columnStyle" display-name="" uuid="5307304d-9960-4d8a-9fae-285db08fc565" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectStyleDictionary" display-name="MakeObjectStyleDictionary" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[// Формирование объекта набора стилей

var styleDictionary = {};

styleDictionary[`style_name`] = styleName;
styleDictionary[`style`] = {};
styleDictionary[`style`][`background_color`] = '#' + backgroundColor +'';
styleDictionary[`style`][`color`] = '#'+textColor+'';
styleDictionary[`style`][`text_align`] = "left";
styleDictionary[`style`][`vertical_align`] = "middle";
styleDictionary[`style`][`text_decoration`] = "none";

// Заполняем параметры мигания
if (blinkingTime != "0") {
	styleDictionary[`style`][`blinker`] = {};
	styleDictionary[`style`][`blinker`][`blinker_color`] = '#'+blinkTextColor+'';
	styleDictionary[`style`][`blinker`][`blinker_background_color`] = '#'+blinkBackColor+'';
	styleDictionary[`style`][`blinker`][`blinker_period`] = blinkingTime;
}

// Настройка границ
styleDictionary[`style`][`border`] = {'all':{'color':'#ff000000','style':'none','width':'2'}};

return JSON.stringify(styleDictionary,null,2);]]>
					</body>
					<param access-modifier="private" name="styleName" display-name="" uuid="e341edd9-c685-43cd-80cf-7c7f97e57050" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="backgroundColor" display-name="" uuid="cbc2a0e5-3374-4be0-a42f-83ac681e736e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="textColor" display-name="" uuid="a502a3b6-13dd-4b65-99b0-474ae3336e49" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="blinkBackColor" display-name="" uuid="239e9397-6434-4104-ad2d-ec4ce2241512" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="blinkTextColor" display-name="" uuid="c5436668-fe49-4c38-9b33-ed12288d43de" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
					<param access-modifier="private" name="blinkingTime" display-name="" uuid="1a1ede80-6b90-4928-8002-1803dd3b2804" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeObjectSelStyle" display-name="MakeObjectSelStyle" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Формирование строки декоратора для выбранного сообщения
var Object = {};

var backgroundColor;
var textColor;
Object.Decorating = [];
Object.StyleDictionary = [];

backgroundColor = SelectEventsCol.toString(16); //цвет фона
textColor = DefColText.toString(16); //цвет текста

//Формирование объекта правил декорирования
var decorating = {};
var styleDictionary = {};
decorating[`decoration_rule_name`] = ruleName;
decorating[`decoration_rule`] = {"row:isSelected": true};
decorating[`rowstyle`] = ruleName + "_style";
Object.Decorating.push(decorating);

styleDictionary[`style_name`] = ruleName + "_style";
styleDictionary[`style`] = {};
styleDictionary[`style`][`border`] ={'top':{'color':'#'+ backgroundColor +'','style':'solid','width':'2'},'bottom':{'color':'#'+ backgroundColor +'','style':'solid','width':'2'}};
Object.StyleDictionary.push(styleDictionary);

return JSON.stringify(Object,null,2);
]]>
					</body>
					<param access-modifier="private" name="ruleName" display-name="" uuid="94c6cc38-6d18-40fd-9ac3-b215e740da01" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<do access-modifier="private" name="MakeAckButtonCondition" display-name="MakeAckButtonCondition" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[//Функция преобразует исходную строку в формат JSON для условий важности
//определяются логические операторы и происходит поэтапное формирование логических выражений из элементов массива и происходит формирование строки в JSON формате
var objectInfo = {};
var resultObject = {};
var JSONStr = '';
var tempArray = [];
var AND = [];

//Если пустая строка, то возвращаем "0" для того, чтобы в очередь не попадали значения
//if (inputString == "") return '{"severity": 0 }';

//Шаблон диапазона
var gapPattern = /\d+[-]\d+/;

//Заполняем массив символами строки
var commonArray = inputString.split(",");

//Фукнция получения выражения вида ">": { "severity": 10 }"
function MakeExpression(str,gap)
{
	let argument = str.match(/\d+/g);
	let expression = {};
	//Если имеем дело с диапазоном
	if (gap != "") expression = {[gap]: {'data:severity':parseInt(argument[0])}};
	else expression = {'data:severity':parseInt(argument[0])};
	return expression
}

//Если элемент всего один и не диапазон
if (commonArray.length == 1 && !gapPattern.test(commonArray[0])) 
{
	JSONStr = JSON.stringify(MakeExpression(commonArray[0],""));
	return JSONStr;
}

//Формирование JSON-строки
for (let i = 0; i < commonArray.length; i++)
{
	let tempObject = {};
	tempObject[`AND`] = [];
	if (gapPattern.test(commonArray[i]))
	{
		tempArray = commonArray[i].match(/\d+/g);
		tempObject[`AND`].push(MakeExpression(tempArray[0],">="));
		tempObject[`AND`].push(MakeExpression(tempArray[1],"<="));
		if (commonArray.length > 1)
		{
			if (objectInfo[`OR`] == undefined) objectInfo[`OR`] = [];	
			objectInfo[`OR`].push(tempObject);
		}
		else objectInfo = tempObject;
	}
	else
	{
		if (objectInfo[`OR`] == undefined) objectInfo[`OR`] = [];	
		objectInfo[`OR`].push(MakeExpression(commonArray[i],""));
	}
}
//Отрицание всего сущего
resultObject[`NOT`] = objectInfo;

//записываем объект в виде строки
JSONStr = JSON.stringify(resultObject);
//log(JSONStr);
return JSONStr;
]]>
					</body>
					<param access-modifier="private" name="inputString" display-name="" uuid="3f201f2a-743f-4cca-97d6-79f37f6da36a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
				<designed target="Opacity" value="1" ver="3"/>
				<do access-modifier="private" name="LineSelectionView" display-name="LineSelectionView" ver="3" type="" type-id="">
					<body kind="javascript">
						<![CDATA[//В случае FollowLatestEvent вырезаем выделение строки из декоратора, в противной случае записываем обратно
var decorator;

if (Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator != "") decorator = JSON.parse(Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator);
else return;

if (FollowLatestEvent.Value && !Main_panel.ToolBar.SnapshotON.Value)
{
	for (let i = 0; i < decorator.Decorating.length; i++)
	{
		if (decorator.Decorating[i].decoration_rule_name == 'row_selected') decorator.Decorating.splice(i,1);
	}
}
else
{
	for (let i = 0; i < decorator.Decorating.length; i++)
	{
		if (decorator.Decorating[i].decoration_rule_name == 'row_selected') return;
	}
	//Настройки декоратора для выделенной строки
	decorator.Decorating.push(JSON.parse(Main_panel.private.EventSettings.MakeObjectSelStyle('row_selected')).Decorating[0]);
}
Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator = JSON.stringify(decorator);]]>
					</body>
				</do>
				<do access-modifier="private" name="OtherEventsDecorating" display-name="OtherEventsDecorating" ver="3" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
					<body kind="javascript">
						<![CDATA[// Функция включения/выключения декорирования кнопки КВИТИРОВАТЬ для остальных сообщений важностей, а также для режима FollowLastEvent
// Также определяет стиль декорирования
try{
var severity = Main_panel.private.SeverityJSONtoString(Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.JsonFilter); //Важность в виде массива чисел
var severityJSON = Main_panel.private.EventSettings.MakeAckButtonCondition(severity); //Важность в виде JSON строки в формате декоратора
var obj = JSON.parse(inputString); // Декоратор

var ignoreOtherEvents = NotAckOtherEvents.Value; // Не квитировать события группы прочие
var dontShowButton = FollowLatestEvent.Value; // Режим принудительного слежения за последним событием

var tempObj = {};

// Обновление условий важности для прочих сообщений
if (obj.Conditions != undefined) {
	for (let i = 0; i < obj.Conditions.length; i++) {
		if (obj.Conditions[i][`condition_name`] == "severity_of_other_events") {
			obj.Conditions.splice(i,1);
			i--;
		}
	}
	tempObj[`condition_name`] = "severity_of_other_events";
	tempObj[`condition`] = JSON.parse(severityJSON);	
	obj.Conditions.push(JSON.parse(JSON.stringify(tempObj)));
}

if (obj.Decorating != undefined) {
	tempObj = {};
	for (let i = 0; i < obj.Decorating.length; i++) {
		if (obj.Decorating[i][`decoration_rule_name`] == "dec_other_events") {
			obj.Decorating.splice(i,1);
			i--;
		}
		
		if (obj.Decorating[i][`decoration_rule_name`] == "ack_button") {
		
			obj.Decorating[i][`decoration_rule`] ={'AND': [{'data:ack': false},{'data:ack_required': true}]};
			//Добавление/удаление правил для прочих сообщений
			if (ignoreOtherEvents) {
				obj.Decorating[i][`decoration_rule`][`AND`].push({"==":{"condition:severity_of_other_events":true}});
			} 
			
			// Выключение/включение кнопки
			if (dontShowButton) obj.Decorating[i][`columnstyle`] = {'ack_required':'hide_ack_button'}//#23602 нельзя оставлять пустым, но неправильным можно
			else obj.Decorating[i][`columnstyle`] = {'ack_required':'ack_button'}
		}
	}
	
	if (ignoreOtherEvents) {
		tempObj = {};
		tempObj[`decoration_rule_name`] = "dec_other_events";
		tempObj[`decoration_rule`]={'condition:severity_of_other_events': false};
		tempObj[`rowstyle`] = "row_other_events";
		obj.Decorating.push(JSON.parse(JSON.stringify(tempObj)));
	}
}

var rowOtherEvents = false
if (obj.StyleDictionary != undefined) {
	for (let i = 0; i < obj.StyleDictionary.length; i++) {
		if (obj.StyleDictionary[i][`style_name`] == "row_other_events") {
			rowOtherEvents = true;
		}
	}
	
	if (!rowOtherEvents) {
		tempObj = {};
		tempObj[`style_name`] = "row_other_events";
		tempObj[`style`] = {};
		tempObj[`style`] = {'blinker':{'blinker_period':'0'}};
		obj.StyleDictionary.push(JSON.parse(JSON.stringify(tempObj)));
	}
}

if (obj.Formatting != undefined) {

	for (let i = 0; i < obj.Formatting.length; i++) {
		tempObj = {};
		tempObj[`condition`] = {};
		tempObj[`condition`][`AND`] = [];
	
		if (obj.Formatting[i][`formatting_rule_name`] == "formatting_ack_required_column") {

			var buttonTitle = (dontShowButton)?("Не квитировано"):("Квитировать");

			obj.Formatting[i][`conditions`] = [];		
			if (ignoreOtherEvents) tempObj[`condition`][`AND`].push({'condition:severity_of_other_events':true});  
			tempObj[`condition`][`AND`].push({'data:ack':false});
			tempObj[`condition`][`AND`].push({'data:ack_required':true});
			tempObj[`text`] = `${buttonTitle}`;
			obj.Formatting[i][`conditions`].push(tempObj);
			obj.Formatting[i][`conditions`].push({'condition':{'data:ack':true},'text': 'text:ack_time'});
			obj.Formatting[i][`conditions`].push({'condition':{'data:ack_required':false},'text': ' '});
		}	

		if (obj.Formatting[i][`formatting_rule_name`] == "formatting_ack_column") {
			delete obj.Formatting[i][`format`];
			delete obj.Formatting[i][`conditions`];		
			if (ignoreOtherEvents) {
				obj.Formatting[i][`conditions`] = [];		
				
				tempObj[`condition`][`AND`].push({'condition:severity_of_other_events': false});
				tempObj[`text`] = ' ';
				obj.Formatting[i][`conditions`].push(tempObj);
				
			  tempObj = {}
				tempObj[`condition`] = {}
				tempObj[`condition`][`AND`] = [];
				
				tempObj[`condition`][`AND`].push({'condition:severity_of_other_events': true});
				tempObj[`format`] = 'ack_column';
				obj.Formatting[i][`conditions`].push(tempObj);
			} else {
				obj.Formatting[i][`format`] = 'ack_column';
			}
		}		
	}
}

//log(JSON.stringify(obj,null,2));

Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator = JSON.stringify(obj);

}catch (err) {log("Exception in OtherEventsDecorating:"); throw(err);}
]]>
					</body>
					<param access-modifier="private" name="inputString" display-name="" uuid="8de5a8a0-86d0-4d8f-9843-98902414a132" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				</do>
			</object>
			<do access-modifier="private" name="ContextMenuSize" display-name="ContextMenuSize" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция вычисления размера контекстного меню 
var menuSize = 0;
var branchSize = 0;
var lineCount = 0;
var lineSize = lineHeight;

//Проверка наличия разделителя в ветке меню
function GetLineSize()
{
	if (branchSize != 0) 
	{
		lineCount++;
		branchSize += lineSize;
		menuSize += branchSize;
		branchSize = 0;
	}
}

//Проверка разрешений на кнопки
if (UseSecurity.Value?CurrentEventsAvailable.Value && Main_panel.private.BoolToken_8.Value:CurrentEventsAvailable.Value) branchSize += buttonHeight;
if (UseSecurity.Value?EventHistoryAvailable.Value && Main_panel.private.BoolToken_8.Value:EventHistoryAvailable.Value) branchSize += buttonHeight;

GetLineSize();

if ((UseSecurity.Value?AcknowledgmentAvailable.Value && Main_panel.private.BoolToken_8.Value:AcknowledgmentAvailable.Value && Main_panel.private.UserName.Value != "") && ActiveMode.Value == 0) branchSize += buttonHeight;
if ((UseSecurity.Value?AcknowledgmentAvailable.Value && Main_panel.private.BoolToken_8.Value:AcknowledgmentAvailable.Value && Main_panel.private.UserName.Value != "") && ActiveMode.Value == 0) branchSize += buttonHeight;
if ((UseSecurity.Value?AllowAddComment.Value && AcknowledgmentAvailable.Value && Main_panel.private.BoolToken_8.Value:AllowAddComment.Value && AcknowledgmentAvailable.Value && Main_panel.private.UserName.Value != "") && ActiveMode.Value == 1) branchSize += buttonHeight;

GetLineSize();

if ((UseSecurity.Value?SnapshotAvailable.Value && Main_panel.private.BoolToken_8.Value:SnapshotAvailable.Value) && ActiveMode.Value == 0) branchSize += buttonHeight;

GetLineSize();

if ((UseSecurity.Value?SoundPlaybackManagmentAvailable.Value && Main_panel.private.BoolToken_8.Value:SoundPlaybackManagmentAvailable.Value) && ActiveMode.Value == 0) branchSize += buttonHeight;
if ((UseSecurity.Value?SoundPlaybackManagmentAvailable.Value && Main_panel.private.BoolToken_8.Value:SoundPlaybackManagmentAvailable.Value) && ActiveMode.Value == 0) branchSize += buttonHeight;
if ((UseSecurity.Value?SoundPlaybackManagmentAvailable.Value && Main_panel.private.BoolToken_8.Value:SoundPlaybackManagmentAvailable.Value) && ActiveMode.Value == 0) branchSize += buttonHeight;

GetLineSize();

if ((UseSecurity.Value?ClearingCurrentEventsAvailable.Value && Main_panel.private.BoolToken_8.Value:ClearingCurrentEventsAvailable.Value && Main_panel.private.UserName.Value != "") && ActiveMode.Value == 0) branchSize += buttonHeight;
if (UseSecurity.Value?FilterAvailable.Value && Main_panel.private.BoolToken_8.Value:FilterAvailable.Value) branchSize += buttonHeight;
if (UseSecurity.Value?EventTableSortAvailability.Value && Main_panel.private.BoolToken_8.Value:EventTableSortAvailability.Value) branchSize += buttonHeight;

GetLineSize();

if (UseSecurity.Value?PrintingAvailable.Value && Main_panel.private.BoolToken_8.Value:PrintingAvailable.Value) branchSize += buttonHeight;
if (UseSecurity.Value?ExportDataAvailability.Value && Main_panel.private.BoolToken_8.Value:ExportDataAvailability.Value) branchSize += buttonHeight;

GetLineSize();

//Кнопки  отображения панели инструментов и состояний
menuSize += buttonHeight * 2;
if (lineCount > 0) menuSize += lineHeight;

if (UseSecurity.Value?EditingSettingsAvailable.Value && Main_panel.private.BoolToken_8.Value:EditingSettingsAvailable.Value) branchSize += buttonHeight;

GetLineSize();

return menuSize;]]>
				</body>
				<param access-modifier="private" name="buttonHeight" display-name="" uuid="682ca17e-bc88-457f-b55f-d321b15bb0f8" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
				<param access-modifier="private" name="lineHeight" display-name="" uuid="93c5a960-d8e7-4551-8d7a-da0cd1cb2b18" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
			</do>
			<object access-modifier="private" name="OperTableEmpty" display-name="OperTableEmpty" uuid="e27ce299-12f9-4a54-a1eb-426945bdd9de" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<object access-modifier="private" name="HistTableEmpty" display-name="HistTableEmpty" uuid="2957d527-b010-4908-835a-2d114ba28ff9" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<object access-modifier="private" name="UserLoggedIn" display-name="UserLoggedIn" uuid="0e18e8d3-66db-44ff-9882-547d8e413e24" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<init target="UserLoggedIn" ver="3" value="false"/>
			<designed target="ZValue" value="0" ver="3"/>
			<object access-modifier="private" name="LoadingHistory" display-name="LoadingHistory" uuid="a957d3d6-585d-4d24-acd5-7930bf9c9125" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
					<body kind="om">
						<![CDATA[Main_tables_Historical.StatusBar.SetVisible();]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="AddComment" display-name="AddComment" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[//Функция добавления комментария
end:bool = false;//Конец иттератора
Src:string;//Источник
ConditionName:string;//Условие
ActiveTime:uint8;//Время срабатывания
Cookie:uint4;

// проверка разрешения
if (!Main_panel.private.GetPermission("Разрешение- Квитирование")) 
{	
	if (Main_panel.private.PermissionResult==-1)	Main_panel.private.MessageNoLogOn.Invoke();	
	if (Main_panel.private.PermissionResult==-2)	Main_panel.private.MessageNoPermission.Invoke();	
	return;
}

if (ActiveMode == 1)
{
	Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetStatus() == 0)
		{
			Src = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_5.GetIndex()),"");
			ConditionName = Variant.ToString(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_11_not_show.GetIndex()),"");
			ActiveTime = Variant.ToUint8(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_2.GetIndex()),0);
			Cookie = Variant.ToUint4(Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.GetData(Main_tables_Historical.Table_History_mode.Colum_15_not_show.GetIndex()),0);
			ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
		}
		end = !Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Historical.Table_History_mode.TablePersistentIterator_1.Close();
}
else
{
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
		{
			Src = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_5.GetIndex()),"");
			ConditionName = Variant.ToString(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_11_not_show.GetIndex()),"");
			ActiveTime = Variant.ToUint8(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_2.GetIndex()),0);
			Cookie = Variant.ToUint4(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_15_not_show.GetIndex()),0);
			ApSource.Ack(Src,ConditionName,Main_panel.private.AckComment,Main_panel.private.UserName,ActiveTime,Cookie);
		}
		end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
}]]>
				</body>
			</do>
			<do access-modifier="private" name="SetDefaultSettings" display-name="SetDefaultSettings" ver="3" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[//Устанавливаем значения по умолчанию для временных данных
//Ширина столбцов
widthColumn.Column_1 = 145;
widthColumn.Column_2 = 145;
widthColumn.Column_3 = 145;
widthColumn.Column_4 = 700;
widthColumn.Column_5 = 100;
widthColumn.Column_6 = 100;
widthColumn.Column_7 = 100;
widthColumn.Column_8 = 130;
widthColumn.Column_9 = 100;
widthColumn.Column_10 = 100;
widthColumn.Column_14 = 100;
widthColumn.Column_17 = 100;
widthColumn.Column_19 = 100;
widthColumn.Column_20 = 100;
widthColumn.Column_21 = 120;

//Очереди аактивных алармов
Range1.SoundEnable = true;
Range1.nSoundRepeats = 0;
Range1.SoundPriority = 0;

Range2.SoundEnable = true;
Range2.nSoundRepeats = 3;
Range2.SoundPriority = 0;

Range3.SoundEnable = true;
Range3.nSoundRepeats = 1;
Range3.SoundPriority = 0;

Range4.SoundEnable = true;
Range4.tempSoundEnable = true;
Range4.nSoundRepeats = 1;
Range4.SoundPriority = 0;

Main_panel.private.ExportPath = Main_panel.private.ExportPathDefault;]]>
				</body>
			</do>
			<object access-modifier="private" name="ActiveModeInit" display-name="ActiveModeInit" uuid="a374eeca-a5d9-45a4-b69f-e73dd7c711f2" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<object access-modifier="private" name="tempActiveMode" display-name="tempActiveMode" uuid="d6cf6808-eec9-48bd-bb19-fb0b8d5e2a14" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
			<designed target="Opacity" value="1" ver="3"/>
			<init target="tempActiveMode" ver="3" value="-1"/>
			<do access-modifier="private" name="CheckActiveMode" display-name="CheckActiveMode" ver="3" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[//Функция корректировки режима работы в соответствии с разрешением на просмотр событий
allowOperMode: bool = CurrentEventsAvailable; //Разрешение на опер. события
allowHistMode: bool = EventHistoryAvailable; //Разрешение на ист. события
mode: int4 = ActiveMode; //Текущий режим
prevValue: int4 = Main_panel.private.tempActiveMode; //Предыдущий режим

//Если значение не меняется, выходим
if (mode == prevValue) 
{
	return;
}

//Если это первый запуск, устанавливаем без изменений
if (prevValue == -1) 
{
	Main_panel.private.tempActiveMode = ActiveMode;
	return;
}

//Если нет разрешения на отображение событий в соотв-м режиме, устанавливаем предыдущее значение
if (mode == 0 && !allowOperMode || mode == 1 && !allowHistMode) 
{
	ActiveMode = prevValue;
	return;
}

Main_panel.private.tempActiveMode = ActiveMode;
return;]]>
				</body>
			</do>
			<do access-modifier="private" name="InitAlarmQueueTableModel" display-name="InitAlarmQueueTableModel" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[//Инициализация моделей очереди активных алармов
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.AddColumn("alarmInfo", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.AddColumn("soundFile", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.AddColumn("soundCount", "", "", "", "int2", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.AddColumn("isPlayed", "", "", "", "bool", false, true);

Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.AddColumn("alarmInfo", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.AddColumn("soundFile", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.AddColumn("soundCount", "", "", "", "int2", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.AddColumn("isPlayed", "", "", "", "bool", false, true);

Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.AddColumn("alarmInfo", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.AddColumn("soundFile", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.AddColumn("soundCount", "", "", "", "int2", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.AddColumn("isPlayed", "", "", "", "bool", false, true);

Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.AddColumn("alarmInfo", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.AddColumn("soundFile", "", "", "", "string", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.AddColumn("soundCount", "", "", "", "int2", false, true);
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.AddColumn("isPlayed", "", "", "", "bool", false, true);]]>
				</body>
			</do>
			<do access-modifier="private" name="UpdateQueueModel" display-name="UpdateQueueModel" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Обновление данных модели очереди алармов
var alarmQueue = [], queueModel = [], rangeSettings = [];
var alarmInfo;
var soundFile;
var soundCount;
var indexRow;
var indexAlarm;
var newAlarm;

alarmQueue[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1;
alarmQueue[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2;
alarmQueue[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3;
alarmQueue[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4;

queueModel[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel;
queueModel[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel;
queueModel[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel;
queueModel[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel;

rangeSettings[0] = Main_panel.private.Range1;
rangeSettings[1] = Main_panel.private.Range2;
rangeSettings[2] = Main_panel.private.Range3;
rangeSettings[3] = Main_panel.private.Range4;


for (let i = 0; i < alarmQueue.length; i++) {

	if (alarmQueue[i].Length == 0) {
		queueModel[i].Clear();
		continue;
	}
	
	//Обнуляем счётчик строк и текущий аларм в очереди алармов
	indexAlarm = 0;
	alarmQueue[i].MoveFirst();
	
	//Проходим по модели очереди каждым алармом
	while (indexAlarm < alarmQueue[i].Length){
		//log("notEmpty:" + i);
		newAlarm = true; // Флаг добавления аларма в очередь
		
		//Получаем время срабатывания и звуковые файлы очередного аларма
		alarmInfo = alarmQueue[i].CurrentAlarm();
		soundFile = JSON.parse(alarmInfo).sound;
		soundCount = rangeSettings[i].nSoundRepeats; // Счётчик проигрывания
		//log(alarmInfo);
		//Обновление данных модели очереди
		////Заполняем пустую модель
		if (queueModel[i].GetRowCount() == 0) {
			queueModel[i].AddRow();
			queueModel[i].SetCellData(0, 0, alarmInfo);
			queueModel[i].SetCellData(0, 1, soundFile);
			queueModel[i].SetCellData(0, 2, soundCount);
		} else {
		////Сравниваем и обновляем данные
			for (let j = indexAlarm; j < queueModel[i].GetRowCount(); j++) {
				if (queueModel[i].GetCellData(j, 0) == alarmInfo) {
					newAlarm = false;
					break;
				} else {
					//log("Remove(" + j + ")" + queueModel[i].GetRowCount());
					//log(queueModel[i].GetCellData(j, 0) + " : " + alarmInfo);
					queueModel[i].RemoveRow(j); // Удаление аларма из модели
					j--;//#23568 после удаления строки смещаются, и строку с этим индексом требуется проверить ещё раз, т.к. в ней будут новые данные
					newAlarm = false;
				}
			}
			//////Добавление элемента в конец модели
			if (newAlarm) {
				queueModel[i].AddRow();
				queueModel[i].SetCellData(queueModel[i].GetRowCount() - 1, 0, alarmInfo);
				queueModel[i].SetCellData(queueModel[i].GetRowCount() - 1, 1, soundFile);
				queueModel[i].SetCellData(queueModel[i].GetRowCount() - 1, 2, soundCount);
			}
		}
		alarmQueue[i].MoveNext();
		indexAlarm++;
	}
}]]>
				</body>
			</do>
			<do access-modifier="private" name="GetSoundString" display-name="GetSoundString" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[//Функция получения строки звуковых файлов из модели очереди звуков
var queueModel = [], rangeSettings = [], modelIterator = [];
var index = queueIndex; // Индекс очереди алармов
var cycleGroup; // Флаг циклического проигрывания (при этом не учитывается количество повторов)
var soundString = "\\"; // Строка звуков (\ - запрещенный символ в названии файла. Для проверки наличия файлов звуков)
var currentRow; // Текущая строка иттератора
var soundCount; // Счётчик проигрывания
var isPlayed = true; // Флаг того, что звук уже проигрывался
var allSoundPlayed = true; // Все звуки очереди проиграны

queueModel[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel;
queueModel[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel;
queueModel[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel;
queueModel[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel;

modelIterator[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.TableIterator_1;
modelIterator[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.TableIterator_1;
modelIterator[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.TableIterator_1;
modelIterator[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.TableIterator_1;

rangeSettings[0] = Range1;
rangeSettings[1] = Range2;
rangeSettings[2] = Range3;
rangeSettings[3] = Range4;

cycleGroup = (rangeSettings[index].nSoundRepeats == 0)?(true):(false);
modelIterator[index].FirstSelected();
while (!modelIterator[index].End()) {
	currentRow = modelIterator[index].CurrentRow;
	// Пропускаем проигравшие звуки
	if (queueModel[index].GetCellData(currentRow, 3)) {
		modelIterator[index].Next();
		continue;
	} 
	// Если счётчик аларма больше 0 для нециклических групп или текущая группа - циклическая, возвращаем имена звуковых файлов
	if (!cycleGroup && queueModel[index].GetCellData(currentRow, 2) > 0) {
		soundString = queueModel[index].GetCellData(currentRow, 1);
		soundCount = queueModel[index].GetCellData(currentRow, 2) - 1;
		queueModel[index].SetCellData(currentRow, 2, soundCount);
		queueModel[index].SetCellData(currentRow, 3, isPlayed);
		allSoundPlayed = false;
		return soundString;
	} else if (cycleGroup) {
		soundString = queueModel[index].GetCellData(currentRow, 1);
		queueModel[index].SetCellData(currentRow, 3, isPlayed);
		allSoundPlayed = false;
		return soundString;
	}
	modelIterator[index].Next();
}

rangeSettings[index].allSoundPlayed = allSoundPlayed;

return soundString;]]>
				</body>
				<param access-modifier="private" name="queueIndex" display-name="" uuid="9e48f3c1-9068-493f-845a-86fff870bc64" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			</do>
			<do access-modifier="private" name="ResetQueueModel" display-name="ResetQueueModel" ver="3" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="javascript">
					<![CDATA[//Функция сброса флага проигрывания звуков модели
var queueModel = [], rangeSettings = [], modelIterator = [];
var index = queueIndex; // Индекс очереди алармов
var currentRow; // Текущая строка итератора

queueModel[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel;
queueModel[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel;
queueModel[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel;
queueModel[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel;

modelIterator[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.QueueModel.TableIterator_1;
modelIterator[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.QueueModel.TableIterator_1;
modelIterator[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.QueueModel.TableIterator_1;
modelIterator[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.QueueModel.TableIterator_1;

rangeSettings[0] = Range1;
rangeSettings[1] = Range2;
rangeSettings[2] = Range3;
rangeSettings[3] = Range4;

modelIterator[index].FirstSelected();
while (!modelIterator[index].End()) {
	currentRow = modelIterator[index].CurrentRow;
	if (queueModel[index].GetCellData(currentRow, 3)) queueModel[index].SetCellData(currentRow, 3, false);
	modelIterator[index].Next();
}
rangeSettings[index].allSoundPlayed = false;
]]>
				</body>
				<param access-modifier="private" name="queueIndex" display-name="" uuid="9e48f3c1-9068-493f-845a-86fff870bc64" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="3"/>
			</do>
			<do access-modifier="private" name="DuplicateСleaning" display-name="DuplicateСleaning" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[// Удаление дублирующихся сообщений в оперативной таблице

DuplicateCheck = false;
Main_tables_Operative.Table_Operative_mode.TableModel_1.readFinished = false;

var firstInsertedRow = first;
var lastInstertedRow = last;
var insertedRows = [];

// Формируем массив подгруженных строк
for (let i = firstInsertedRow; i <= lastInstertedRow; i++) {
	insertedRows.push(Main_tables_Operative.Table_Operative_mode.TableModel_1.GetRowDataAsJson(i));
}

if (insertedRows.length == 0) return;

// Проходим по таблице, удаляя совпадающие строки
Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.FirstSelected();
while (!Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.End() && 
	Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.CurrentRow < firstInsertedRow) {	
	var currentRowIndex = Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.CurrentRow;
	var currentRow = Main_tables_Operative.Table_Operative_mode.TableModel_1.GetRowDataAsJson(currentRowIndex);

	var indexMatch = insertedRows.indexOf(currentRow);
	if (indexMatch != -1) {
		Main_tables_Operative.Table_Operative_mode.TableModel_1.RemoveRow(currentRowIndex);
		insertedRows.splice(indexMatch, 1);
		firstInsertedRow -= 1;
	} else {
		Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.Next();
	}
}]]>
				</body>
				<param access-modifier="private" name="first" display-name="" uuid="74d3af28-b366-4cc6-8a6e-09efef28fca8" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
				<param access-modifier="private" name="last" display-name="" uuid="3ffe8774-de28-4224-b1b8-ba45dc4ee279" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
			</do>
			<object access-modifier="private" name="DuplicateCheck" display-name="DuplicateCheck" uuid="bdd62799-e149-4fb9-9d4e-47fe84255fc5" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<object access-modifier="private" name="InitComplete" display-name="InitComplete" uuid="37a29976-7090-4388-b2f7-a82d29a8933b" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<do access-modifier="private" name="isInformativeEvent" display-name="isInformativeEvent" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<body kind="javascript">
					<![CDATA[// Функция возвращает true, если элемент относится к группе важности "Прочие"

if (!NotAckOtherEvents.Value) return false

var severityArray = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.severityArray.split(",").map(function(value){
    return parseInt(value, 10);
});

if (severityArray.indexOf(severity) == -1) return false

return true]]>
				</body>
				<param access-modifier="private" name="severity" display-name="" uuid="883395fe-5169-470c-852b-1d365951a69e" base-type="uint2" base-type-id="ae923ad8-8b75-4813-8121-36efe3cc8c12" ver="3"/>
			</do>
			<object access-modifier="private" name="OrdinaryMessageCorrectionTimer" display-name="OrdinaryMessageCorrectionTimer" uuid="c97e3958-3527-4796-8b35-487779320dac" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="3">
				<designed target="Period" value="1000" ver="3"/>
				<designed target="Active" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="OnTimer">
					<body kind="om">
						<![CDATA[OrdinaryMessageCorrection();
Active = false;]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="SetSorting" display-name="SetSorting" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[//Функция включения сортировки
var Column = []; // Массив столбцов
var table; // Указатель на таблицу
var inputObject 

//log(jsonData);

try {
	inputObject = JSON.parse(jsonData);
} catch (err) {
	log("SetSorting: Не удалось распарсить строку");
	return;
}

//Если таблица в оперативном режиме, то берем ее параметры, если нет - берем параметры исторической таблицы
if (ActiveMode == 0) {
	Column[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
	Column[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
	Column[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
	Column[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
	Column[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
	Column[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
	Column[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
	Column[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
	Column[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
	Column[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
	Column[10] = Main_tables_Operative.Table_Operative_mode.Colum_14;
	Column[11] = Main_tables_Operative.Table_Operative_mode.Colum_17;
	Column[12] = Main_tables_Operative.Table_Operative_mode.Colum_19;
	Column[13] = Main_tables_Operative.Table_Operative_mode.Colum_20;
	Column[14] = Main_tables_Operative.Table_Operative_mode.Colum_21;
	table = Main_tables_Operative.Table_Operative_mode;
} else {
	Column[0] = Main_tables_Historical.Table_History_mode.Colum_1;
	Column[1] = Main_tables_Historical.Table_History_mode.Colum_2;
	Column[2] = Main_tables_Historical.Table_History_mode.Colum_3;
	Column[3] = Main_tables_Historical.Table_History_mode.Colum_4;
	Column[4] = Main_tables_Historical.Table_History_mode.Colum_5;
	Column[5] = Main_tables_Historical.Table_History_mode.Colum_6;
	Column[6] = Main_tables_Historical.Table_History_mode.Colum_7;
	Column[7] = Main_tables_Historical.Table_History_mode.Colum_8;
	Column[8] = Main_tables_Historical.Table_History_mode.Colum_9;
	Column[9] = Main_tables_Historical.Table_History_mode.Colum_10;
	Column[10] = Main_tables_Historical.Table_History_mode.Colum_14;
	Column[11] = Main_tables_Historical.Table_History_mode.Colum_17;
	Column[12] = Main_tables_Historical.Table_History_mode.Colum_19;
	Column[13] = Main_tables_Historical.Table_History_mode.Colum_20;
	Column[14] = Main_tables_Historical.Table_History_mode.Colum_21;
	table = Main_tables_Historical.Table_History_mode;
}

//Сбрасываем текущую сортировку
for (let i = 0; i < Column.length; i++) {
	Column[i].SortingEnabled = false;
}
table.ApplySort();

//Применяем сортировку к активной таблице
for (let i = 0; i < inputObject.length; i++) {
	var id = inputObject[i].Id;
	var newSortPriority = inputObject[i].SortPriority;
	var newSortOrder = inputObject[i].SortOrder;
	
	for (let j = 0; j < Column.length; j++) {
		if (Column[j].Id == id) {
			Column[j].SortPriority = newSortPriority;
			Column[j].SortOrder = newSortOrder;
			Column[j].SortingEnabled = true;
			break;
		}
	}
}
table.ApplySort();
SaveSortingConfig();
CheckDefaultSorting();]]>
				</body>
				<param access-modifier="private" name="jsonData" display-name="" uuid="d5c6f4aa-e68f-463c-a71f-644ca22ad8cd" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			</do>
			<object access-modifier="private" name="defaultSorting" display-name="defaultSorting" uuid="4e3cd402-0256-4576-aaea-131dca7e9c95" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
			<do access-modifier="private" name="CheckDefaultSorting" display-name="CheckDefaultSorting" ver="3" type="" type-id="">
				<body kind="javascript">
					<![CDATA[// Функция проверки сортировки по умолчанию 
// сначала по столбцу "Время генерации" - по убыванию, затем по столбцу "Время срабатывания" - по убыванию
var Column = []; // Массив столбцов
var table; // Указатель на таблицу
var defSet = false;

//Если таблица в оперативном режиме, то берем ее параметры, если нет - берем параметры исторической таблицы
if (ActiveMode == 0) {
	Column[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
	Column[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
	Column[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
	Column[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
	Column[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
	Column[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
	Column[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
	Column[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
	Column[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
	Column[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
	//Colum_14 почему то потерялся
	Column[10] = Main_tables_Operative.Table_Operative_mode.Colum_17;
	Column[11] = Main_tables_Operative.Table_Operative_mode.Colum_19;
	Column[12] = Main_tables_Operative.Table_Operative_mode.Colum_20;
	Column[13] = Main_tables_Operative.Table_Operative_mode.Colum_21;
	table = Main_tables_Operative.Table_Operative_mode;
} else {
	Column[0] = Main_tables_Historical.Table_History_mode.Colum_1;
	Column[1] = Main_tables_Historical.Table_History_mode.Colum_2;
	Column[2] = Main_tables_Historical.Table_History_mode.Colum_3;
	Column[3] = Main_tables_Historical.Table_History_mode.Colum_4;
	Column[4] = Main_tables_Historical.Table_History_mode.Colum_5;
	Column[5] = Main_tables_Historical.Table_History_mode.Colum_6;
	Column[6] = Main_tables_Historical.Table_History_mode.Colum_7;
	Column[7] = Main_tables_Historical.Table_History_mode.Colum_8;
	Column[8] = Main_tables_Historical.Table_History_mode.Colum_9;
	Column[9] = Main_tables_Historical.Table_History_mode.Colum_10;
	//Colum_14 почему то потерялся
	Column[10] = Main_tables_Historical.Table_History_mode.Colum_17;
	Column[11] = Main_tables_Historical.Table_History_mode.Colum_19;
	Column[12] = Main_tables_Historical.Table_History_mode.Colum_20;
	Column[13] = Main_tables_Historical.Table_History_mode.Colum_21;
	table = Main_tables_Historical.Table_History_mode;
}

defSet = Column[0].SortingEnabled && Column[0].SortOrder == 1 && Column[0].SortPriority == 2 && Column[1].SortingEnabled && Column[1].SortOrder == 1 && Column[1].SortPriority == 1;

for (let i = 2; i < Column.length; i++) {
	if (Column[i].SortingEnabled) defSet = false;
}
defaultSorting.Value = defSet;]]>
				</body>
			</do>
			<do access-modifier="private" name="ShowHistoricalInterval" display-name="ShowHistoricalInterval" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[// Функция показа исторического интервала

// Начало диапазона
Main_panel.ToolBar.RecHistory.DayMonthYear_start.day = DateTime.Day(timeStart);
Main_panel.ToolBar.RecHistory.DayMonthYear_start.month = DateTime.Month(timeStart);
Main_panel.ToolBar.RecHistory.DayMonthYear_start.year = DateTime.Year(timeStart);

Main_panel.ToolBar.RecHistory.Time_start.hours = DateTime.Hour(timeStart);
Main_panel.ToolBar.RecHistory.Time_start.minutes = DateTime.Minute(timeStart);
Main_panel.ToolBar.RecHistory.Time_start.seconds = DateTime.Second(timeStart);

// Конец диапазона
Main_panel.ToolBar.RecHistory.DayMonthYear_final.day = DateTime.Day(timeEnd);
Main_panel.ToolBar.RecHistory.DayMonthYear_final.month = DateTime.Month(timeEnd);
Main_panel.ToolBar.RecHistory.DayMonthYear_final.year = DateTime.Year(timeEnd);

Main_panel.ToolBar.RecHistory.Time_final.hours = DateTime.Hour(timeEnd);
Main_panel.ToolBar.RecHistory.Time_final.minutes = DateTime.Minute(timeEnd);
Main_panel.ToolBar.RecHistory.Time_final.seconds = DateTime.Second(timeEnd);]]>
				</body>
				<param access-modifier="private" name="timeStart" display-name="" uuid="d7f14cfd-2dc4-466f-9b28-24195f823d69" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="3"/>
				<param access-modifier="private" name="timeEnd" display-name="" uuid="be6c30b3-bfcd-4aff-8614-1462dee4f535" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="3"/>
			</do>
			<do access-modifier="private" name="ChangeFormScale" display-name="ChangeFormScale" ver="4" type="float8" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409">
				<body kind="javascript">
					<![CDATA[// Изменение масштаба формы при низком разрешении монитора
// Возвращает коэффициент масштабирования Scale

var monitorNumber = 0; // номер монитора

var mX = ScreenX(MouseX,MouseY);
var mY = ScreenY(MouseX,MouseY);

// Определение номера монитора
for (let i = 0; i < MonitorList_1.Count(); i++) {
	var x0 = MonitorList_1.GetX(i);
	var y0 = MonitorList_1.GetY(i);
	if (mX > x0 && mX < x0 + MonitorList_1.GetResolutionX(i)){
		if (mY>y0 && mY<y0+MonitorList_1.GetResolutionY(i)) monitorNumber = i; // запоминаем номер монитор
	}
}

var resX = MonitorList_1.GetResolutionX(monitorNumber);
var resY = MonitorList_1.GetResolutionY(monitorNumber);
var defHeight = height;
var defWidth = width;

var diffHeight = Math.floor(resY/defHeight * 10) / 10;
var diffWidth = Math.floor(resX/defWidth * 10) / 10;
var newScale = Math.min(diffHeight, diffWidth);

if (newScale < 1.0) return newScale - 0.1;
else return 1.0;
]]>
				</body>
				<param access-modifier="private" name="width" display-name="" uuid="e1ea16e7-8674-4032-b65f-6cea5e40e332" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
				<param access-modifier="private" name="height" display-name="" uuid="a84d3863-61bd-4c2c-889b-d584a0d3d434" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			</do>
			<object access-modifier="private" name="MonitorList_1" display-name="MonitorList_1" uuid="6a513328-096f-4f53-80ae-1776dee4acbd" base-type="MonitorList" base-type-id="c74bfc5a-253e-4144-8b20-917cf4cf333b" ver="4"/>
			<do access-modifier="private" name="IsAbsolutePath" display-name="IsAbsolutePath" ver="4" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
				<param access-modifier="private" name="filename" display-name="" uuid="6219a967-d8de-4362-9955-25c78f50af7e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
				<body kind="javascript">
					<![CDATA[if (!File.Exists("/opt/"))
{
	if (/^(.+):(\\.*)$/.test(filename))
		return true;
	else
		return false;
}
else
{
	if (/^\//.test(filename))
		return true;
	else
		return false;
}]]>
				</body>
			</do>
			<do access-modifier="private" name="OrdinaryMessageCorrectionTimerStart" display-name="OrdinaryMessageCorrectionTimerStart" ver="4" type="" type-id="">
				<body kind="om">
					<![CDATA[//Подсчет и корректировка количества обычных сообщений
if (!ActiveConditionsList.Value && !Main_panel.private.OrdinaryMessageCorrectionTimer.Active)
	Main_panel.private.OrdinaryMessageCorrectionTimer.Active = true;]]>
				</body>
			</do>
		</object>
	</object>
	<object access-modifier="private" name="Main_tables_Operative" display-name="Main_tables_Operative" uuid="1e3ced06-12b4-4295-80cd-d79ec25bdb35" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="20" ver="2"/>
		<designed target="Y" value="370" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="1200" ver="2"/>
		<designed target="Height" value="200" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="1" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Table_Operative_mode" display-name="Table_Operative_mode" uuid="55d3ee48-b4c9-4763-9614-483629485715" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="2">
			<designed target="X" value="0" ver="2"/>
			<designed target="Y" value="4" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Width" value="1000" ver="2"/>
			<designed target="Height" value="10" ver="2"/>
			<designed target="RowHeight" value="25" ver="2"/>
			<designed target="SelectionBehavior" value="1" ver="2"/>
			<designed target="SelectionMode" value="3" ver="2"/>
			<designed target="RowOrder" value="1" ver="2"/>
			<object access-modifier="private" name="TableModel_1" display-name="TableModel_1" uuid="18125f03-1441-49e1-b443-4819789d70c0" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
				<designed target="Frozen" value="false" ver="3"/>
				<designed target="MaxRowCount" value="100000" ver="3"/>
				<object access-modifier="private" name="ApAlarmQuery_1" display-name="ApAlarmQuery_1" uuid="41b8f98f-914f-41aa-9779-0644120b6170" base-type="ApAlarmQuery" base-type-id="f66d4d41-8e9d-4eee-8b83-702143b5768d" ver="2">
					<designed target="Mode" value="2" ver="2"/>
					<designed target="HistoricalRangeStart" value="0" ver="2"/>
					<designed target="HistoricalRangeEnd" value="0" ver="2"/>
					<designed target="Active" value="true" ver="2"/>
					<init target="Source" ver="2" ref="ApSource"/>
					<designed target="RemoveAckedInactive" value="false" ver="2"/>
					<designed target="RefreshAtStart" value="false" ver="2"/>
					<designed target="HistoryPreloadInterval" value="0" ver="3"/>
					<designed target="Filter" value="" ver="3"/>
					<designed target="HistoricalFilter" value="" ver="3"/>
					<do-trace access-modifier="private" target="RefreshAtStart" ver="3">
						<body>
							<![CDATA[RequestEventsStart]]>
						</body>
					</do-trace>
					<do-trace access-modifier="private" target="Filter" ver="3">
						<body>
							<![CDATA[SubscriptionAdvancedFilter]]>
						</body>
					</do-trace>
					<do-trace access-modifier="private" target="RemoveAckedInactive" ver="3">
						<body>
							<![CDATA[HideAckedEvents]]>
						</body>
					</do-trace>
				</object>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="RowsInserted">
					<body kind="javascript">
						<![CDATA[if (JSON.parse(GetSelectedRows()) == "" && !Main_panel.ToolBar.SnapshotON.Value) SetSelectedRows("[0]"); //Выделение первого сообщения после очистки

// Удаление дублирующихся сообщений после подгрузки исторических данных
if (Main_panel.private.DuplicateCheck.Value && TableModel_1.readFinished) Main_panel.private.DuplicateСleaning(first, last);

//Подсчет и корректировка количества обычных сообщений
Main_panel.private.OrdinaryMessageCorrectionTimerStart();]]>
					</body>
				</do-on>
				<object access-modifier="private" name="TableIterator_1" display-name="TableIterator_1" uuid="207dcb18-4b57-42a7-a706-4b0bb982143d" base-type="TableIterator" base-type-id="b368f2dc-9de9-47fc-b7ae-1d9c28047eba" ver="3">
					<designed target="CurrentRow" value="0" ver="3"/>
				</object>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="ReadFinished">
					<body kind="javascript">
						<![CDATA[readFinished = true;]]>
					</body>
				</do-on>
				<object access-modifier="private" name="readFinished" display-name="readFinished" uuid="6fb1a806-190f-4992-831a-48ffb2c6e6a6" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="4" event="DataChanged">
					<body kind="javascript">
						<![CDATA[Main_panel.private.OrdinaryMessageCorrectionTimerStart();]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="ApAlarmQueue_1" display-name="ApAlarmQueue_1" uuid="8cc61b79-107b-44a4-8a62-27b27ce4e1f1" base-type="ApAlarmQueue" base-type-id="040615c1-78b9-4f5b-8201-607d29656aca" ver="2">
				<designed target="JsonFilter" value='{"AND":[{"&gt;=":{"severity":667}},{"&lt;=":{"severity":1000}}]}' ver="2"/>
				<object access-modifier="private" name="QueueModel" display-name="QueueModel" uuid="7d15f3b2-82a8-480b-a3bb-676bb31c7e5f" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
					<object access-modifier="private" name="TableIterator_1" display-name="TableIterator_1" uuid="8afd5d4c-dbd3-43eb-86b8-d852a8111520" base-type="TableIterator" base-type-id="b368f2dc-9de9-47fc-b7ae-1d9c28047eba" ver="3">
						<designed target="CurrentRow" value="0" ver="3"/>
					</object>
				</object>
				<init target="Query" ver="3" ref="TableModel_1.ApAlarmQuery_1"/>
				<object access-modifier="private" name="severityArray" display-name="severityArray" uuid="d83125f6-0a53-44c4-94a8-3729bc1b3bd1" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<init target="severityArray" ver="3" value="667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000"/>
			</object>
			<object access-modifier="private" name="ApAlarmQueue_2" display-name="ApAlarmQueue_2" uuid="84664089-5a77-4ac4-8f5f-2c5a728f3675" base-type="ApAlarmQueue" base-type-id="040615c1-78b9-4f5b-8201-607d29656aca" ver="2">
				<designed target="JsonFilter" value='{"AND":[{"&gt;=":{"severity":445}},{"&lt;=":{"severity":666}}]}' ver="2"/>
				<object access-modifier="private" name="QueueModel" display-name="QueueModel" uuid="4c39c7ec-ab4c-497c-b957-c0b468e7af39" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
					<object access-modifier="private" name="TableIterator_1" display-name="TableIterator_1" uuid="9711c3f3-e96d-42be-bb57-90b2f2541050" base-type="TableIterator" base-type-id="b368f2dc-9de9-47fc-b7ae-1d9c28047eba" ver="3">
						<designed target="CurrentRow" value="0" ver="3"/>
					</object>
				</object>
				<init target="Query" ver="3" ref="TableModel_1.ApAlarmQuery_1"/>
				<object access-modifier="private" name="severityArray" display-name="severityArray" uuid="7070916e-4c07-4b69-b746-b40693aabd10" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<init target="severityArray" ver="3" value="445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666"/>
			</object>
			<object access-modifier="private" name="ApAlarmQueue_3" display-name="ApAlarmQueue_3" uuid="8e8f8eb6-de87-4e92-836c-5afda4502364" base-type="ApAlarmQueue" base-type-id="040615c1-78b9-4f5b-8201-607d29656aca" ver="2">
				<designed target="JsonFilter" value='{"AND":[{"&gt;=":{"severity":223}},{"&lt;=":{"severity":444}}]}' ver="2"/>
				<object access-modifier="private" name="QueueModel" display-name="QueueModel" uuid="759e4b6b-a628-45e7-bfd6-866719757df3" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
					<object access-modifier="private" name="TableIterator_1" display-name="TableIterator_1" uuid="fe5ad63a-feb3-4f6a-9df8-5e1ce9f668e4" base-type="TableIterator" base-type-id="b368f2dc-9de9-47fc-b7ae-1d9c28047eba" ver="3">
						<designed target="CurrentRow" value="0" ver="3"/>
					</object>
				</object>
				<init target="Query" ver="3" ref="TableModel_1.ApAlarmQuery_1"/>
				<object access-modifier="private" name="severityArray" display-name="severityArray" uuid="f96b5e3c-6509-4c8f-8592-12143342079a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<init target="severityArray" ver="3" value="223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444"/>
			</object>
			<object access-modifier="private" name="ApAlarmQueue_4" display-name="ApAlarmQueue_4" uuid="89d79438-6dd9-466b-a950-84078c17d4fd" base-type="ApAlarmQueue" base-type-id="040615c1-78b9-4f5b-8201-607d29656aca" ver="2">
				<designed target="JsonFilter" value='{"AND":[{"&gt;=":{"severity":1}},{"&lt;=":{"severity":222}}]}' ver="2"/>
				<object access-modifier="private" name="QueueModel" display-name="QueueModel" uuid="61bb8e2a-818d-49b9-b95b-a7086a63b0f5" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
					<designed target="Frozen" value="false" ver="3"/>
					<designed target="MaxRowCount" value="10000" ver="3"/>
					<object access-modifier="private" name="TableIterator_1" display-name="TableIterator_1" uuid="84673a79-b0f1-4e40-9ae0-883cc71e6530" base-type="TableIterator" base-type-id="b368f2dc-9de9-47fc-b7ae-1d9c28047eba" ver="3">
						<designed target="CurrentRow" value="0" ver="3"/>
					</object>
				</object>
				<init target="Query" ver="3" ref="TableModel_1.ApAlarmQuery_1"/>
				<object access-modifier="private" name="severityArray" display-name="severityArray" uuid="ed373769-56b7-41fb-aa0d-40048dd649e4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
				<init target="severityArray" ver="3" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222"/>
			</object>
			<object access-modifier="private" name="Colum_1" display-name="Colum_1" uuid="6245f81a-3ef3-47f7-8222-01f2393e572b" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время генерации" ver="2"/>
				<designed target="Description" value="Время генерации" ver="2"/>
				<designed target="Id" value="time" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="145" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="true" ver="2"/>
				<designed target="SortOrder" value="1" ver="2"/>
				<designed target="SortPriority" value="2" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="4" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="SortMode" value="0" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_2" display-name="Colum_2" uuid="dfd88827-b861-40a0-b17f-1e40b085ad93" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время срабатывания" ver="2"/>
				<designed target="Description" value="Время срабатывания" ver="2"/>
				<designed target="Id" value="active_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="true" ver="2"/>
				<designed target="SortOrder" value="1" ver="2"/>
				<designed target="SortPriority" value="1" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_3" display-name="Colum_3" uuid="579a6f84-008c-4610-b283-5f324e70f5ee" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время деактивации" ver="2"/>
				<designed target="Description" value="Время деактивации" ver="2"/>
				<designed target="Id" value="deactive_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_4" display-name="Colum_4" uuid="cf6fcb40-21bb-4412-98e1-deb5b6c1ba23" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Сообщение" ver="2"/>
				<designed target="Description" value="Сообщение" ver="2"/>
				<designed target="Id" value="message" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="700" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_5" display-name="Colum_5" uuid="c9abda29-6974-42df-8469-30a7f5d4cd91" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Источник события" ver="2"/>
				<designed target="Description" value="Источник события" ver="2"/>
				<designed target="Id" value="source" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="4278190080" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseClick">
					<body kind="om">
						<![CDATA[//Запрос objectId
end: bool = false;
if (AllowActionInSourceColumn)
{
	TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (TablePersistentIterator_1.GetStatus() == 0)
		{
			objectId = Variant.ToUint4(TablePersistentIterator_1.GetData(Colum_18_not_show.GetIndex()),0);
		}
		end = !TablePersistentIterator_1.HasNext();
		TablePersistentIterator_1.Next();
	}
	TablePersistentIterator_1.Close();
}]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Id" ver="3">
					<body>
						<![CDATA[(ShowRelativeTag)?("area_path"):("source")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_6" display-name="Colum_6" uuid="20154bb1-346f-4ed7-9651-51ec7cfd43a3" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Важность" ver="2"/>
				<designed target="Description" value="Важность" ver="2"/>
				<designed target="Id" value="severity" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_7" display-name="Colum_7" uuid="bf146ec2-79b2-47b8-9171-c71721fc2e18" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Квитировано" ver="2"/>
				<designed target="Description" value="Квитировано" ver="2"/>
				<designed target="Id" value="ack" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_8" display-name="Colum_8" uuid="05ad5c40-7618-4792-bdad-3edde1b4ecbb" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время квитирования" ver="2"/>
				<designed target="Description" value="Время квитирования" ver="2"/>
				<designed target="Id" value="ack_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="132" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_9" display-name="Colum_9" uuid="0126fab9-684f-484c-ab61-30b288b78175" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Пользователь" ver="2"/>
				<designed target="Description" value="Пользователь" ver="2"/>
				<designed target="Id" value="actor_id" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_10" display-name="Colum_10" uuid="57b45bf9-f501-4a7c-bdac-4933fdf92a37" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Комментарий квитирования" ver="2"/>
				<designed target="Description" value="Комментарий квитирования" ver="2"/>
				<designed target="Id" value="ack_comment" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_14" display-name="Colum_14" uuid="ea894e58-541a-4009-9eb2-9ba768a8eab5" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Активность" ver="2"/>
				<designed target="Description" value="Активность" ver="2"/>
				<designed target="Id" value="active" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="300" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="3"/>
				<designed target="SortOrder" value="0" ver="3"/>
				<designed target="SortPriority" value="0" ver="3"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="SortMode" value="1" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_17" display-name="Colum_17" uuid="a4e041c6-8ea8-4fbe-a21b-f9e85bc7f0c3" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Квитировать" ver="2"/>
				<designed target="Description" value="Квитировать" ver="2"/>
				<designed target="Id" value="ack_required" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="3" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="3" event="MouseClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
if (!FollowLatestEvent) AckSelected();
]]>
					</body>
				</do-on>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="1" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_19" display-name="Colum_19" uuid="b2d36660-ee2e-4fbc-8ef4-dc78bda15a68" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Качество сигнала" ver="2"/>
				<designed target="Description" value="Качество сигнала" ver="2"/>
				<designed target="Id" value="quality" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_20" display-name="Colum_20" uuid="9bab6333-8f59-41f7-bc75-b82b2a5ab428" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Значение сигнала" ver="2"/>
				<designed target="Description" value="Значение сигнала" ver="2"/>
				<designed target="Id" value="value" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();
]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_21" display-name="Colum_21" uuid="367c82ef-ced0-43a1-ab20-79fca7087c4e" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="4">
				<designed target="Title" value="Группа важности" ver="4"/>
				<designed target="Description" value="Группа важности" ver="4"/>
				<designed target="Id" value="group" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="4"/>
				<designed target="ForegroundColor" value="0xff000000" ver="4"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="4"/>
				<designed target="TextAlignment" value="129" ver="4"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="4"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="4"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="4"/>
				<designed target="TitleTextAlignment" value="132" ver="4"/>
				<designed target="Width" value="120" ver="4"/>
				<designed target="WidthResizeMode" value="0" ver="4"/>
				<designed target="Emptiable" value="true" ver="4"/>
				<designed target="Hidden" value="true" ver="4"/>
				<designed target="NumberFormat" value="%d" ver="4"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="4"/>
				<designed target="JsonFilter" value="" ver="4"/>
				<designed target="SortingEnabled" value="false" ver="4"/>
				<designed target="SortOrder" value="0" ver="4"/>
				<designed target="SortPriority" value="0" ver="4"/>
				<designed target="SortMode" value="1" ver="4"/>
				<designed target="WordWrap" value="true" ver="4"/>
				<do-trace access-modifier="private" target="WordWrap" ver="4">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="4" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="4" event="MouseDoubleClick">
					<body kind="om">
						<![CDATA[Main_panel.private.selectedRow = row;
Main_panel.private.DoubleClick.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="4" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="4" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="Colum_11_not_show" display-name="Colum_11_not_show" uuid="c37cb5a2-4ca9-45e8-94a0-d579cd89c9b6" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Условие" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="condition_name" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="1" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_12_not_show" display-name="Colum_12_not_show" uuid="84d6fa98-2dc7-44ad-a915-aeb8390cba79" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Подусловие" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="subcondition_name" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="1" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_13_not_show" display-name="Colum_13_not_show" uuid="2cd1ea6d-e728-4096-838d-1bf568424210" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Качество" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="quality" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="1" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="3"/>
				<designed target="SortOrder" value="0" ver="3"/>
				<designed target="SortPriority" value="0" ver="3"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_15_not_show" display-name="Colum_15_not_show" uuid="f841a758-dabb-463d-a1e5-e7c43ddaacec" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Куки" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="cookie" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="1" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<do-trace access-modifier="private" target="Visible" ver="2">
				<body>
					<![CDATA[(ActiveMode==0)?true:false]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="Colum_16_not_show" display-name="Colum_16_not_show" uuid="f664f6ac-f73b-4b35-9d5b-aa74117df49d" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Звуки" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="sound" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="1" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="3"/>
				<designed target="SortOrder" value="0" ver="3"/>
				<designed target="SortPriority" value="0" ver="3"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_18_not_show" display-name="Colum_18_not_show" uuid="621f7486-9498-4553-9f51-13b9aa3eea9c" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Идентификатор объекта на сервере Alpha.Server" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="object_id" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="3" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
				<designed target="SortMode" value="0" ver="4"/>
			</object>
			<designed target="LatestRowTracking" value="true" ver="2"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="SelectionChanged">
				<body kind="javascript">
					<![CDATA[//Механизм остановки прокрутки списка (учитывается только при выключенном состоянии FollowLastEvent)
var rowIndex = JSON.parse(GetSelectedRows());
var lastRowIndex = MapRowFromModel(TableModel.GetRowCount()-1);

//Выбираем первую строку, если ничего не выбрано
if (rowIndex == "" && !Main_panel.ToolBar.SnapshotON.Value) SetSelectedRows("[0]");

//Выключаем слежение, если выбрано более одной строки или выбрана не последняя поступившая строка
if (rowIndex.length > 1 || rowIndex[0] != lastRowIndex) Main_panel.private.tempAutoScroll.Value = false;
else if (rowIndex[0] == lastRowIndex) Main_panel.private.tempAutoScroll.Value = true;

//Если таблица пустая - скрываем кнопки
Main_panel.private.OperTableEmpty.Value = GetRowCount() == 0;
]]>
				</body>
			</do-on>
			<designed target="HeaderHeight" value="23" ver="3"/>
			<designed target="HeaderVisible" value="false" ver="3"/>
			<designed target="RowHeight" value="23" ver="3"/>
			<designed target="RowOrder" value="0" ver="3"/>
			<init target="TableModel" ver="3" ref="TableModel_1"/>
			<do-trace access-modifier="private" target="HeaderVisible" ver="3">
				<body>
					<![CDATA[!HideColumnTitle]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="SelectionMode" ver="3">
				<body>
					<![CDATA[(FollowLatestEvent)?(0):(3)]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="DragNDrop_1" display-name="DragNDrop_1" uuid="8e3b6c0b-4bf8-4b3b-963b-4238c96f8c88" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="3">
				<designed target="DragEnabled" value="true" ver="3"/>
				<designed target="DropEnabled" value="true" ver="3"/>
				<designed target="Image" value="." ver="3"/>
			</object>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="4" event="MousePress">
				<body kind="javascript">
					<![CDATA[mousePress = true;
selectedRow = row;
selectedColumn = column;
SelectionMode = 3; // Режим выделения нескольких строк]]>
				</body>
			</do-on>
			<object access-modifier="private" name="Colum_source_not_show" display-name="Colum_source_not_show" uuid="e66fe4e3-2b70-4172-a946-1b3501a79abf" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Источник события" ver="2"/>
				<designed target="Description" value="Источник события" ver="2"/>
				<designed target="Id" value="source" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="4278190080" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="TablePersistentIterator_1" display-name="TablePersistentIterator_1" uuid="86e14cd9-c6e4-4318-869e-861c90b8d35c" base-type="TablePersistentIterator" base-type-id="3daa2363-e163-4d9c-ad69-cbcf416d89bf" ver="3"/>
			<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MouseMove">
				<body kind="javascript">
					<![CDATA[//Drag&Drop. Формирование JSON-строки формата {"data":[{"tag":"some.tag1"},{"tag":"some.tag2"}]}
//На данном этапе только для 1 тега
var sendObj = {};
var end;
sendObj.data = [];

if (mousePress && selectedColumn == Colum_5.GetIndex()) {
	SelectionMode = 1; // Режим выделения только одной строки
	if (Math.abs(diffX - mouseX) > 1 || Math.abs(diffY - mouseY) > 1) {
		TablePersistentIterator_1.FirstSelectedRow();
		while	(!end) {
			if (TablePersistentIterator_1.GetStatus() == 0 && TablePersistentIterator_1.GetRow() == selectedRow) {
				sendObj.data.push({"tag":TablePersistentIterator_1.GetData(Colum_5.GetIndex())});
				DragNDrop_1.SetText(JSON.stringify(sendObj));
				DragNDrop_1.DoDragDrop();
			}
			end = !TablePersistentIterator_1.HasNext();
			TablePersistentIterator_1.Next();
		}
		TablePersistentIterator_1.Close();		
		mousePress = false;
	}
} else {
	diffX = mouseX;
	diffY = mouseY;
}
]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="4" event="MouseRelease">
				<body kind="om">
					<![CDATA[mousePress = false;]]>
				</body>
			</do-on>
			<designed target="SelectionOverlayEnabled" value="false" ver="3"/>
			<do-trace access-modifier="private" target="LatestRowTracking" ver="3">
				<body>
					<![CDATA[(FollowLatestEvent || (LookLatestEvent && Main_panel.private.tempAutoScroll))?(true):(false)]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="TableDecorator_1" display-name="TableDecorator_1" uuid="6133df89-84ad-4927-935d-b81d76df7b7c" base-type="TableDecorator" base-type-id="2ff6a2d7-9573-4060-bfea-29c63d61b079" ver="3">
				<designed target="JsonDecorator" value="" ver="3"/>
			</object>
			<designed target="HorizontalScrollMode" value="1" ver="3"/>
			<designed target="VerticalScrollMode" value="0" ver="3"/>
			<designed target="HorizontalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollMode" value="0" ver="3"/>
			<designed target="HorizontalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollBarPolicy" value="0" ver="3"/>
			<do-trace access-modifier="private" target="HorizontalScrollBarPolicy" ver="3">
				<body>
					<![CDATA[here.HorizontalScrollBarPolicy]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="VerticalScrollBarPolicy" ver="3">
				<body>
					<![CDATA[here.VerticalScrollBarPolicy]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="70615837-233f-49b3-9f4d-b8130523ae3f" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
			<designed target="Weight" value="0" ver="2"/>
		</object>
		<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="767c5431-764d-428a-a5b4-177b7dfafa95" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="2">
			<designed target="Orientation" value="1" ver="2"/>
			<designed target="Gap" value="0" ver="2"/>
		</object>
		<object access-modifier="private" name="diffX" display-name="diffX" uuid="b904acd2-89e7-4492-a57b-f87815d14d52" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="diffY" display-name="diffY" uuid="207199b5-0a9a-4b10-b813-b72476b28354" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="mousePress" display-name="mousePress" uuid="532aeb57-f79e-41b0-8206-418b9ef0f997" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
		<object access-modifier="private" name="selectedRow" display-name="selectedRow" uuid="99d36603-a584-43bf-a92a-36d7174977e4" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="selectedColumn" display-name="selectedColumn" uuid="0e4d4094-bda6-439e-8116-0b9e28623aff" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
	</object>
	<object access-modifier="private" name="Main_tables_Historical" display-name="Main_tables_Historical" uuid="3fa52b88-b5d1-4d9f-86e9-9fbcd561ba4b" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="-84" ver="2"/>
		<designed target="Y" value="109.5" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="1000" ver="2"/>
		<designed target="Height" value="375" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="1" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="StatusBar" display-name="StatusBar" uuid="52ece463-c447-4331-b214-539188b2ab50" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
			<designed target="X" value="-1" ver="3"/>
			<designed target="Y" value="0" ver="3"/>
			<designed target="ZValue" value="0" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="false" ver="3"/>
			<designed target="Opacity" value="1" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<designed target="Width" value="1000" ver="3"/>
			<designed target="Height" value="21.2264" ver="3"/>
			<designed target="RoundingRadius" value="0" ver="3"/>
			<designed target="PenColor" value="4278190080" ver="3"/>
			<designed target="PenStyle" value="1" ver="3"/>
			<designed target="PenWidth" value="1" ver="3"/>
			<designed target="BrushColor" value="0xff00ff7f" ver="3"/>
			<designed target="BrushStyle" value="1" ver="3"/>
			<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="615e86a3-a9d4-4d42-ba7f-c61f6d42ab15" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
				<designed target="Weight" value="0" ver="2"/>
			</object>
			<object access-modifier="private" name="Alarms_Blanker_1" display-name="Alarms_Blanker_1" uuid="494d49ad-8c58-4fe0-b268-699242e59659" base-type="Alarms_Blanker" base-type-id="91658436-6b0b-47e1-bf20-c5092f6fa242" ver="3">
				<designed target="X" value="-0.5" ver="3"/>
				<designed target="Y" value="-0.5" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
			</object>
			<object access-modifier="private" name="Message" display-name="Message" uuid="e1d9b8ae-737d-4ea5-a30a-921a056fb60c" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="3">
				<designed target="X" value="10" ver="3"/>
				<designed target="Y" value="0" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="1000" ver="3"/>
				<designed target="Height" value="21.2264" ver="3"/>
				<designed target="Text" value="Подготовка данных..." ver="3"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="3"/>
				<designed target="FontColor" value="4278190080" ver="3"/>
				<designed target="TextAlignment" value="129" ver="3"/>
			</object>
			<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="85f6f60a-2663-4231-8e51-42614d430631" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="3">
				<designed target="Orientation" value="1" ver="3"/>
				<designed target="Gap" value="5" ver="3"/>
			</object>
			<object access-modifier="private" name="Loading" display-name="Loading" uuid="a75e2349-d6cf-4129-9b44-9317152099b8" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="3">
				<designed target="Period" value="500" ver="3"/>
				<designed target="Active" value="false" ver="3"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="OnTimer">
					<body kind="javascript">
						<![CDATA[// Формирование текста "Подготовка данных..."
var text = Message.Text;

var endStr = text.slice(text.length - 3, text.length);

if (endStr == "...") text = text.slice(0, text.length - 3);
else text += ".";

Message.Text = text;]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Active" ver="3">
					<body>
						<![CDATA[Main_panel.private.LoadingHistory]]>
					</body>
				</do-trace>
			</object>
			<do access-modifier="private" name="SetVisible" display-name="SetVisible" ver="3" type="" type-id="">
				<body kind="om">
					<![CDATA[// Задание размера и видимости статус-бара
if (!Main_panel.private.LoadingHistory || ActiveMode == 0) StatusBar.LayoutWeight_1.Weight = 0;
else StatusBar.LayoutWeight_1.Weight = Math.Ceil(20/Main_tables_Historical.Height*100);

Main_tables_Historical.Table_History_mode.LayoutWeight_1.Weight = 100 - StatusBar.LayoutWeight_1.Weight;

]]>
				</body>
			</do>
			<do-trace access-modifier="private" target="Visible" ver="3">
				<body>
					<![CDATA[Main_panel.private.LoadingHistory]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="Table_History_mode" display-name="Table_History_mode" uuid="fc389d0b-999f-4e7c-a1d9-12a9a76b919c" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="2">
			<designed target="X" value="0" ver="2"/>
			<designed target="Y" value="54" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Width" value="1000" ver="2"/>
			<designed target="Height" value="354" ver="2"/>
			<designed target="RowHeight" value="25" ver="2"/>
			<designed target="SelectionBehavior" value="1" ver="2"/>
			<designed target="SelectionMode" value="3" ver="2"/>
			<designed target="RowOrder" value="1" ver="2"/>
			<object access-modifier="private" name="TableModel_1" display-name="TableModel_1" uuid="25193ad1-a29e-421b-b65d-accb77c2dada" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
				<designed target="Frozen" value="false" ver="3"/>
				<designed target="MaxRowCount" value="100000" ver="3"/>
				<object access-modifier="private" name="ApAlarmQuery_1" display-name="ApAlarmQuery_1" uuid="da9c8266-4e27-45d1-8799-3a43cf656985" base-type="ApAlarmQuery" base-type-id="f66d4d41-8e9d-4eee-8b83-702143b5768d" ver="2">
					<designed target="Mode" value="2" ver="2"/>
					<designed target="HistoricalRangeStart" value="0" ver="2"/>
					<designed target="HistoricalRangeEnd" value="0" ver="2"/>
					<designed target="Active" value="true" ver="2"/>
					<init target="Source" ver="2" ref="ApSource"/>
					<designed target="RemoveAckedInactive" value="false" ver="2"/>
					<designed target="RefreshAtStart" value="false" ver="2"/>
					<designed target="HistoryPreloadInterval" value="0" ver="3"/>
					<designed target="Filter" value="" ver="3"/>
					<designed target="HistoricalFilter" value="" ver="3"/>
				</object>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ReadFinished">
					<body kind="om">
						<![CDATA[StatePanel.MessageCount.Text_1 = Str.ToString(GetRowCount()) + " сообщений";
SetSelectedRows("[0]");
Main_panel.private.LoadingHistory = false;]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="Colum_1" display-name="Colum_1" uuid="69776a82-1702-4f4d-ba0a-3f93fa697896" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время генерации" ver="2"/>
				<designed target="Description" value="Время генерации" ver="2"/>
				<designed target="Id" value="time" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="145" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="true" ver="2"/>
				<designed target="SortOrder" value="1" ver="2"/>
				<designed target="SortPriority" value="2" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="SortMode" value="0" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_2" display-name="Colum_2" uuid="d7d5528c-172e-4da2-baf5-f21937d71ae0" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время срабатывания" ver="2"/>
				<designed target="Description" value="Время срабатывания" ver="2"/>
				<designed target="Id" value="active_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="true" ver="2"/>
				<designed target="SortOrder" value="1" ver="2"/>
				<designed target="SortPriority" value="1" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="SortMode" value="0" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_3" display-name="Colum_3" uuid="be585898-791c-4f61-9d1b-69dba7b59ff9" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время деактивации" ver="2"/>
				<designed target="Description" value="Время деактивации" ver="2"/>
				<designed target="Id" value="deactive_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_4" display-name="Colum_4" uuid="029774f7-c8dc-455a-a9da-04df417193fe" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Сообщение" ver="2"/>
				<designed target="Description" value="Сообщение" ver="2"/>
				<designed target="Id" value="message" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="700" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_5" display-name="Colum_5" uuid="d5e2a22c-5a35-40d6-915f-2218c9d9db0b" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Источник события" ver="2"/>
				<designed target="Description" value="Источник события" ver="2"/>
				<designed target="Id" value="source" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseClick">
					<body kind="om">
						<![CDATA[//Запрос objectId
end: bool = false;
if (AllowActionInSourceColumn)
{
	TablePersistentIterator_1.FirstSelectedRow();
	while (!end)
	{
		if (TablePersistentIterator_1.GetStatus() == 0)
		{
			objectId = Variant.ToUint4(TablePersistentIterator_1.GetData(Colum_18_not_show.GetIndex()),0);
		}
		end = !TablePersistentIterator_1.HasNext();
		TablePersistentIterator_1.Next();
	}
	TablePersistentIterator_1.Close();
}]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="Id" ver="3">
					<body>
						<![CDATA[(ShowRelativeTag)?("area_path"):("source")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_6" display-name="Colum_6" uuid="f3ac64b9-9090-4a12-ace3-0dfc6a9dabb6" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Важность" ver="2"/>
				<designed target="Description" value="Важность" ver="2"/>
				<designed target="Id" value="severity" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_7" display-name="Colum_7" uuid="98d2423c-2e5f-48e2-9ce4-ba72af95a650" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Квитировано" ver="2"/>
				<designed target="Description" value="Квитировано" ver="2"/>
				<designed target="Id" value="ack" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_8" display-name="Colum_8" uuid="57963ec2-5b10-4c76-9c4e-9ae267c38028" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Время квитирования" ver="2"/>
				<designed target="Description" value="Время квитирования" ver="2"/>
				<designed target="Id" value="ack_time" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-trace access-modifier="private" target="TimeFormat" ver="3">
					<body>
						<![CDATA[(ShowMilliseconds)?("dd.MM.yyyy hh:mm:ss.zzz"):("dd.MM.yyyy hh:mm:ss")]]>
					</body>
				</do-trace>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_9" display-name="Colum_9" uuid="93d50d76-0e6c-4e7b-bb07-15a358aa6fd8" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Пользователь" ver="2"/>
				<designed target="Description" value="Пользователь" ver="2"/>
				<designed target="Id" value="actor_id" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="3"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_10" display-name="Colum_10" uuid="e1302cd3-57dd-42c7-a3fd-bb8a4f3afd00" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Комментарий квитирования" ver="2"/>
				<designed target="Description" value="Комментарий квитирования" ver="2"/>
				<designed target="Id" value="ack_comment" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_14" display-name="Colum_14" uuid="a1c5dcac-670b-456a-94e6-42a8364263fa" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Активность" ver="2"/>
				<designed target="Description" value="Активность" ver="2"/>
				<designed target="Id" value="active" ver="2"/>
				<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="SortMode" value="1" ver="4"/>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_17" display-name="Colum_17" uuid="ddeb358c-fcf5-474b-af4c-41b72055e168" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Квитировать" ver="2"/>
				<designed target="Description" value="Квитировать" ver="2"/>
				<designed target="Id" value="ack_required" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="1" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_19" display-name="Colum_19" uuid="7e2c6cc2-49bc-45ed-9f9b-0b176be8adff" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Качество сигнала" ver="2"/>
				<designed target="Description" value="Качество сигнала" ver="2"/>
				<designed target="Id" value="quality" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_20" display-name="Colum_20" uuid="1a7b8526-5ba4-48b1-ad9b-7536b83147b4" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Значение сигнала" ver="2"/>
				<designed target="Description" value="Значение сигнала" ver="2"/>
				<designed target="Id" value="value" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="0" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_21" display-name="Colum_21" uuid="b5ae6659-3ad1-4c8a-a809-ffe8a024ffb4" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Группа важности" ver="2"/>
				<designed target="Description" value="Группа важности" ver="2"/>
				<designed target="Id" value="group" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="120" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MouseRightClick">
					<body kind="om">
						<![CDATA[//Задаем координаты выпадающему списку
Main_panel.private.tempX= TypeConvert.ToInt4(ScreenX(MouseX, MouseY));
Main_panel.private.tempY= TypeConvert.ToInt4(ScreenY(MouseX, MouseY));
Main_panel.private.Action_openContextMenu.Invoke();]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="WidthChanged">
					<body kind="om">
						<![CDATA[Main_panel.private.func_SettingsToFile(1);]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="WordWrap" ver="3">
					<body>
						<![CDATA[LineTransfer]]>
					</body>
				</do-trace>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
				<designed target="SortMode" value="1" ver="4"/>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="2" event="MouseTitleClick">
					<body kind="javascript">
						<![CDATA[if (!EnableSortingOnGridHeader.Value) return;
var newSortOrder = (SortingEnabled)?(1 - SortOrder):(0);
Main_panel.private.SetSorting(JSON.stringify([{'Id':Id, 'SortOrder':newSortOrder, 'SortPriority':10}]));
]]>
					</body>
				</do-on>
				<designed target="ColumnOwnId" value="" ver="4"/>
			</object>
			<object access-modifier="private" name="Colum_11_not_show" display-name="Colum_11_not_show" uuid="d102660a-b13b-4c24-bb76-cf0e6f25fc28" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Условие" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="condition_name" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
			</object>
			<object access-modifier="private" name="Colum_12_not_show" display-name="Colum_12_not_show" uuid="aef71b83-bb11-4d62-98af-62b545de4d1a" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Подусловие" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="subcondition_name" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
			</object>
			<object access-modifier="private" name="Colum_13_not_show" display-name="Colum_13_not_show" uuid="84f76d6b-8c95-469b-9fba-6bd8499c8440" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Качаество" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="quality" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
			</object>
			<object access-modifier="private" name="Colum_15_not_show" display-name="Colum_15_not_show" uuid="b23d201c-7268-4a7f-8f0b-0092d5484756" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Куки" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="cookie" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
			</object>
			<do-trace access-modifier="private" target="Visible" ver="2">
				<body>
					<![CDATA[(ActiveMode==1)?true:false]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="Colum_16_not_show" display-name="Colum_16_not_show" uuid="4424d1a3-cd6a-4523-b438-9c747dd89b75" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Звуки" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="sound" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
			</object>
			<object access-modifier="private" name="Colum_18_not_show" display-name="Colum_18_not_show" uuid="c8085e92-c5c6-44ab-be67-ed33244e9805" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Идентификатор объекта на сервере Alpha.Server" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="object_id" ver="2"/>
				<designed target="BackgroundColor" value="0xffe2e2e2" ver="2"/>
				<designed target="ForegroundColor" value="0xff000000" ver="2"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="TitleBackgroundColor" value="4278190080" ver="2"/>
				<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
				<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
				<designed target="Width" value="20" ver="2"/>
				<designed target="WidthResizeMode" value="0" ver="2"/>
				<designed target="Hidden" value="true" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="true" ver="3"/>
				<designed target="TitleTextAlignment" value="132" ver="3"/>
			</object>
			<designed target="LatestRowTracking" value="false" ver="2"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="SelectionChanged">
				<body kind="javascript">
					<![CDATA[//Выделение строки
if (JSON.parse(GetSelectedRows()) == "") SetSelectedRows("[0]");

//Если таблица пустая - скрываем кнопки
Main_panel.private.HistTableEmpty.Value = GetRowCount() == 0;
]]>
				</body>
			</do-on>
			<designed target="HeaderHeight" value="23" ver="3"/>
			<designed target="HeaderVisible" value="false" ver="3"/>
			<designed target="RowHeight" value="23" ver="3"/>
			<designed target="RowOrder" value="0" ver="3"/>
			<init target="TableModel" ver="3" ref="TableModel_1"/>
			<do-trace access-modifier="private" target="HeaderVisible" ver="3">
				<body>
					<![CDATA[!HideColumnTitle]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="DragNDrop_1" display-name="DragNDrop_1" uuid="d9be1e49-b714-489d-8679-b5f8306095e1" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="3">
				<designed target="DragEnabled" value="true" ver="3"/>
				<designed target="DropEnabled" value="true" ver="3"/>
				<designed target="Image" value="." ver="3"/>
			</object>
			<object access-modifier="private" name="TablePersistentIterator_1" display-name="TablePersistentIterator_1" uuid="02eaf9b3-cbf5-4154-8968-19e0d7b21bc9" base-type="TablePersistentIterator" base-type-id="3daa2363-e163-4d9c-ad69-cbcf416d89bf" ver="3"/>
			<object access-modifier="private" name="TableDecorator_1" display-name="TableDecorator_1" uuid="a29d6394-e873-4d43-b4b7-1e318fcc3f46" base-type="TableDecorator" base-type-id="2ff6a2d7-9573-4060-bfea-29c63d61b079" ver="3">
				<designed target="JsonDecorator" value="" ver="3"/>
			</object>
			<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="3" event="MouseRelease">
				<body kind="om">
					<![CDATA[mousePress = false;]]>
				</body>
			</do-on>
			<designed target="SelectionOverlayEnabled" value="false" ver="3"/>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MousePress">
				<body kind="javascript">
					<![CDATA[mousePress = true;
selectedRow = row;
selectedColumn = column;
SelectionMode = 3; // Режим выделения нескольких строк]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MouseMove">
				<body kind="javascript">
					<![CDATA[//Drag&Drop. Формирование JSON-строки формата {"data":[{"tag":"some.tag1"},{"tag":"some.tag2"}]}
//На данном этапе только для 1 тега
var sendObj = {};
var end;
sendObj.data = [];

if (mousePress && selectedColumn == Colum_5.GetIndex()) {
	SelectionMode = 1; // Режим выделения только одной строки
	if (Math.abs(diffX - mouseX) > 1 || Math.abs(diffY - mouseY) > 1) {
		TablePersistentIterator_1.FirstSelectedRow();
		while	(!end) {
			if (TablePersistentIterator_1.GetStatus() == 0 && TablePersistentIterator_1.GetRow() == selectedRow) {
				sendObj.data.push({"tag":TablePersistentIterator_1.GetData(Colum_5.GetIndex())});
				DragNDrop_1.SetText(JSON.stringify(sendObj));
				DragNDrop_1.DoDragDrop();
			}
			end = !TablePersistentIterator_1.HasNext();
			TablePersistentIterator_1.Next();
		}
		TablePersistentIterator_1.Close();		
		mousePress = false;
	}
} else {
	diffX = mouseX;
	diffY = mouseY;
}
]]>
				</body>
			</do-on>
			<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="8ad50995-27dc-46fa-ab17-3dc77173d763" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="3" cardinal="1">
				<designed target="Weight" value="100" ver="3"/>
			</object>
			<designed target="HorizontalScrollMode" value="1" ver="3"/>
			<designed target="VerticalScrollMode" value="0" ver="3"/>
			<designed target="HorizontalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollMode" value="0" ver="3"/>
			<designed target="HorizontalScrollBarPolicy" value="0" ver="3"/>
			<designed target="VerticalScrollBarPolicy" value="0" ver="3"/>
			<do-trace access-modifier="private" target="HorizontalScrollBarPolicy" ver="3">
				<body>
					<![CDATA[here.HorizontalScrollBarPolicy]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="VerticalScrollBarPolicy" ver="3">
				<body>
					<![CDATA[here.VerticalScrollBarPolicy]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="2e173636-6e00-4279-be63-b9fb0ce2a921" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="2">
			<designed target="Weight" value="100" ver="2"/>
		</object>
		<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="bd9321fb-f4b0-466f-9306-f767b45a91aa" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="2">
			<designed target="Orientation" value="2" ver="2"/>
			<designed target="Gap" value="0" ver="2"/>
		</object>
		<object access-modifier="private" name="diffX" display-name="diffX" uuid="d15fceba-7578-4185-91fd-0a6231fd185a" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="diffY" display-name="diffY" uuid="143c7f45-48d7-476c-bebb-43c3b462a895" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="mousePress" display-name="mousePress" uuid="20e5fe77-7c80-40be-801b-eab66d020c59" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
		<object access-modifier="private" name="selectedRow" display-name="selectedRow" uuid="3a3da025-d075-4356-8103-9fba4b3e83bf" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<object access-modifier="private" name="selectedColumn" display-name="selectedColumn" uuid="bea6be97-d676-4da5-bb24-ec4e8b4f8cb0" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<designed target="ZValue" value="0" ver="3"/>
		<designed target="Opacity" value="1" ver="3"/>
		<object access-modifier="private" name="sizeChange" display-name="sizeChange" uuid="d4326900-d695-4139-91b6-b23ca8573140" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	</object>
	<object access-modifier="private" name="StatePanel" display-name="StatePanel" uuid="f1e1afa8-7f57-4b77-a4c8-4653f1599d23" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
		<designed target="X" value="0.0571429" ver="3"/>
		<designed target="Y" value="488.286" ver="3"/>
		<designed target="Rotation" value="0" ver="3"/>
		<designed target="Scale" value="1" ver="3"/>
		<designed target="Visible" value="true" ver="3"/>
		<designed target="Enabled" value="true" ver="3"/>
		<designed target="Tooltip" value="" ver="3"/>
		<designed target="Width" value="994.8" ver="3"/>
		<designed target="Height" value="80" ver="3"/>
		<designed target="RoundingRadius" value="0" ver="3"/>
		<designed target="PenColor" value="4278190080" ver="3"/>
		<designed target="PenStyle" value="0" ver="3"/>
		<designed target="PenWidth" value="1" ver="3"/>
		<designed target="BrushColor" value="4278190080" ver="3"/>
		<designed target="BrushStyle" value="0" ver="3"/>
		<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="e0c82c31-49bb-47ad-af62-6b635909b3e9" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="3">
			<designed target="Weight" value="30" ver="3"/>
		</object>
		<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="42af0382-5d6d-48ec-a58b-473f2d84651d" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="3">
			<designed target="Orientation" value="1" ver="3"/>
			<designed target="Gap" value="3" ver="3"/>
		</object>
		<object access-modifier="private" name="Blanker_1" display-name="Blanker_1" uuid="f874a6d0-c996-42e0-aada-9e5aeab5925b" base-type="Blanker" base-type-id="91658436-6b0b-47e1-bf20-c5092f6fa242" ver="3">
			<designed target="X" value="-0.5" ver="3"/>
			<designed target="Y" value="-0.5" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
		</object>
		<object access-modifier="private" name="ConnectionState" display-name="ConnectionState" uuid="0ca73933-78c6-44fe-a908-17f143fb258f" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-546.278" ver="3"/>
			<designed target="Y" value="95.1111" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="ConnectionServer" display-name="ConnectionServer" uuid="c37b7768-6681-47b7-91f9-bbafdb3cec39" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="546.4" ver="3"/>
				<designed target="Y" value="-62.2" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="Соединение с сервером" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="0xff000000" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="0xffff0000" ver="3"/>
				<designed target="BrushStyle" value="1" ver="3"/>
				<init target="Focus" ver="3" value="false"/>
				<designed target="ZValue" value="0" ver="3"/>
			</object>
			<object access-modifier="private" name="ClearSoundQuery" display-name="ClearSoundQuery" uuid="7af16c01-a1d1-45a8-8c72-d9983b41952a" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="3">
				<designed target="X" value="546.4" ver="3"/>
				<designed target="Y" value="-62.2" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="Соединение с сервером" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="RoundingRadius" value="0" ver="3"/>
				<designed target="PenColor" value="0xff000000" ver="3"/>
				<designed target="PenStyle" value="1" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="BrushColor" value="0xffffff00" ver="3"/>
				<designed target="BrushStyle" value="1" ver="3"/>
				<init target="Focus" ver="3" value="false"/>
				<object access-modifier="private" name="Text_Alarm" display-name="Text_Alarm" uuid="f5a2c4b1-6f21-451b-8100-6feefb28fee2" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
					<designed target="X" value="5.38106" ver="2"/>
					<designed target="Y" value="1.81973" ver="2"/>
					<designed target="Rotation" value="0" ver="2"/>
					<designed target="Scale" value="1" ver="2"/>
					<designed target="Visible" value="false" ver="2"/>
					<designed target="Enabled" value="true" ver="2"/>
					<designed target="Tooltip" value="" ver="2"/>
					<designed target="Width" value="6.16667" ver="2"/>
					<designed target="Height" value="11.9" ver="2"/>
					<designed target="Text" value="!" ver="2"/>
					<designed target="Font" value="Tahoma,10,-1,5,75,0,0,0,0,0,Полужирный" ver="2"/>
					<designed target="FontColor" value="0xff000000" ver="2"/>
					<designed target="TextAlignment" value="132" ver="2"/>
					<designed target="ZValue" value="0" ver="3"/>
				</object>
				<designed target="ZValue" value="0" ver="3"/>
			</object>
		</object>
		<object access-modifier="private" name="AutorizationState" display-name="AutorizationState" uuid="9b26ca86-c22f-424e-bcbb-51343287b92b" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-1282.1" ver="3"/>
			<designed target="Y" value="315.019" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="Image" display-name="Image" uuid="463903f9-bb1b-41f6-a05c-68d78a1b3cbc" base-type="Image" base-type-id="5a6b2782-c728-4a42-8c02-1a83ef97e138" ver="3">
				<designed target="X" value="1326.1" ver="3"/>
				<designed target="Y" value="-247.019" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="0" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="ImageFile" value="" ver="3"/>
				<designed target="Active" value="true" ver="3"/>
				<designed target="CurrentFrameNumber" value="0" ver="3"/>
				<designed target="Speed" value="1" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<do-trace access-modifier="private" target="ImageFile" ver="3">
					<body>
						<![CDATA[(Main_panel.private.UserLoggedIn)?("Alarms_Icons/alarms_user_green_16.png"):("Alarms_Icons/alarms_user_grey_16.png")]]>
					</body>
				</do-trace>
				<designed target="Opacity" value="1" ver="3"/>
			</object>
			<object access-modifier="private" name="Hide" display-name="Hide" uuid="6e171373-6c33-4c03-b267-79f71b3018ba" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="1326.1" ver="2"/>
				<designed target="Y" value="-247.019" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="16" ver="2"/>
				<designed target="Height" value="16" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="0xff00aaff" ver="2"/>
				<designed target="PenStyle" value="0" ver="2"/>
				<designed target="PenWidth" value="2" ver="2"/>
				<designed target="BrushColor" value="0xaaf4f4f4" ver="2"/>
				<designed target="BrushStyle" value="1" ver="2"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="3"/>
			</object>
			<designed target="ZValue" value="0" ver="3"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="MouseClick">
				<body kind="om">
					<![CDATA[Main_panel.private.Action_AutorizationForm.Invoke();]]>
				</body>
			</do-on>
			<object access-modifier="private" name="HideFlag" display-name="HideFlag" uuid="f9dba9a2-9444-4851-92f8-c98f8fc84644" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
					<body kind="javascript">
						<![CDATA[var newSize;

if (value) newSize = 0;
else newSize = 16;

Image.Height = newSize;
Image.Width = newSize;

Hide.Height = newSize;
Hide.Width = newSize;

StatePanel.Width = StatePanel.Width;]]>
					</body>
				</do-on>
			</object>
			<init target="HideFlag" ver="3" value="false"/>
			<do-trace access-modifier="private" target="HideFlag" ver="3">
				<body>
					<![CDATA[!UseSecurity]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Tooltip" ver="3">
				<body>
					<![CDATA[Main_panel.private.UserName]]>
				</body>
			</do-trace>
			<designed target="Opacity" value="1" ver="3"/>
		</object>
		<object access-modifier="private" name="ViewFilterState" display-name="ViewFilterState" uuid="684b7347-3a48-44c3-a11a-9a8b142c2a9f" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-1308.8" ver="3"/>
			<designed target="Y" value="280" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="Image" display-name="Image" uuid="aecdfc2b-67fb-48de-8743-a114033ed87a" base-type="Image" base-type-id="5a6b2782-c728-4a42-8c02-1a83ef97e138" ver="3">
				<designed target="X" value="1326.1" ver="3"/>
				<designed target="Y" value="-247.019" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="0" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="ImageFile" value="Alarms_Icons/alarms_table_filter_16.png" ver="3"/>
				<designed target="Active" value="true" ver="3"/>
				<designed target="CurrentFrameNumber" value="0" ver="3"/>
				<designed target="Speed" value="1" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="4"/>
			</object>
			<object access-modifier="private" name="Hide" display-name="Hide" uuid="5abc0b1a-d4f9-4b6b-9e80-6cc6f0745889" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="1326.1" ver="2"/>
				<designed target="Y" value="-247.019" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="16" ver="2"/>
				<designed target="Height" value="16" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="0xff00aaff" ver="2"/>
				<designed target="PenStyle" value="0" ver="2"/>
				<designed target="PenWidth" value="2" ver="2"/>
				<designed target="BrushColor" value="0xaaf4f4f4" ver="2"/>
				<designed target="BrushStyle" value="1" ver="2"/>
				<do-trace access-modifier="private" target="Visible" ver="4">
					<body>
						<![CDATA[(ViewFilterON || SubscriptionFilterON)?(false):(true)]]>
					</body>
				</do-trace>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="4"/>
			</object>
		</object>
		<object access-modifier="private" name="RequestFilterState" display-name="RequestFilterState" uuid="1fda6edf-df4e-4f6d-8d68-851c1b580946" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-1278.46" ver="3"/>
			<designed target="Y" value="295.22" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="Image" display-name="Image" uuid="118b19db-647d-4326-a5f8-1d3e74a81bb4" base-type="Image" base-type-id="5a6b2782-c728-4a42-8c02-1a83ef97e138" ver="3">
				<designed target="X" value="1326.1" ver="3"/>
				<designed target="Y" value="-247.019" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="0" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="ImageFile" value="Alarms_Icons/alarms_database_16.png" ver="3"/>
				<designed target="Active" value="true" ver="3"/>
				<designed target="CurrentFrameNumber" value="0" ver="3"/>
				<designed target="Speed" value="1" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<designed target="Opacity" value="1" ver="4"/>
			</object>
			<object access-modifier="private" name="Hide" display-name="Hide" uuid="46a7113b-297d-4ead-8ff3-17031e190574" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
				<designed target="X" value="1326.1" ver="2"/>
				<designed target="Y" value="-247.019" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="16" ver="2"/>
				<designed target="Height" value="16" ver="2"/>
				<designed target="RoundingRadius" value="0" ver="2"/>
				<designed target="PenColor" value="0xff00aaff" ver="2"/>
				<designed target="PenStyle" value="0" ver="2"/>
				<designed target="PenWidth" value="2" ver="2"/>
				<designed target="BrushColor" value="0xaaf4f4f4" ver="2"/>
				<designed target="BrushStyle" value="1" ver="2"/>
				<do-trace access-modifier="private" target="Visible" ver="3">
					<body>
						<![CDATA[(RequestFilterON)?(false):(true)]]>
					</body>
				</do-trace>
				<designed target="ZValue" value="0" ver="3"/>
			</object>
			<object access-modifier="private" name="HideFlag" display-name="HideFlag" uuid="866d4671-73c7-40b5-8705-76c7300be5b7" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
					<body kind="javascript">
						<![CDATA[var newSize;

if (value) newSize = 0;
else newSize = 16;

Image.Height = newSize;
Image.Width = newSize;

Hide.Height = newSize;
Hide.Width = newSize;

StatePanel.Width = StatePanel.Width;]]>
					</body>
				</do-on>
			</object>
			<do-trace access-modifier="private" target="HideFlag" ver="3">
				<body>
					<![CDATA[(ActiveMode == 1)?(false):(true)]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="SoundState" display-name="SoundState" uuid="9cc20198-25fa-4067-8576-6a4a43835e0a" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-1281.52" ver="3"/>
			<designed target="Y" value="280" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="Image" display-name="Image" uuid="e6199289-2656-4a70-8b11-9ff89bc2e866" base-type="Image" base-type-id="5a6b2782-c728-4a42-8c02-1a83ef97e138" ver="3">
				<designed target="X" value="1341.88" ver="3"/>
				<designed target="Y" value="-247.658" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="16" ver="3"/>
				<designed target="Height" value="16" ver="3"/>
				<designed target="PenColor" value="4278190080" ver="3"/>
				<designed target="PenStyle" value="0" ver="3"/>
				<designed target="PenWidth" value="1" ver="3"/>
				<designed target="ImageFile" value="" ver="3"/>
				<designed target="Active" value="true" ver="3"/>
				<designed target="CurrentFrameNumber" value="0" ver="3"/>
				<designed target="Speed" value="1" ver="3"/>
				<designed target="ZValue" value="0" ver="3"/>
				<do-trace access-modifier="private" target="ImageFile" ver="3">
					<body>
						<![CDATA[(Mute)?("Alarms_Icons/alarms_sound_disabled_16.png"):("Alarms_Icons/alarms_sound_enabled_16.png")]]>
					</body>
				</do-trace>
				<designed target="Opacity" value="1" ver="4"/>
			</object>
		</object>
		<object access-modifier="private" name="MessageCount" display-name="MessageCount" uuid="ab405f31-feff-4301-a053-6fee8a095bd8" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
			<designed target="X" value="-1238.4" ver="3"/>
			<designed target="Y" value="293.767" ver="3"/>
			<designed target="Rotation" value="0" ver="3"/>
			<designed target="Scale" value="1" ver="3"/>
			<designed target="Visible" value="true" ver="3"/>
			<designed target="Enabled" value="true" ver="3"/>
			<designed target="Tooltip" value="" ver="3"/>
			<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="a05c84a1-720d-4641-abac-1187838130a2" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="3">
				<designed target="X" value="1321.59" ver="3"/>
				<designed target="Y" value="-245.806" ver="3"/>
				<designed target="Rotation" value="0" ver="3"/>
				<designed target="Scale" value="1" ver="3"/>
				<designed target="Visible" value="true" ver="3"/>
				<designed target="Enabled" value="true" ver="3"/>
				<designed target="Tooltip" value="" ver="3"/>
				<designed target="Width" value="172" ver="3"/>
				<designed target="Height" value="17" ver="3"/>
				<designed target="Text" value="0 сообщений" ver="3"/>
				<designed target="Font" value="Tahoma,8.25,-1,5,50,0,0,0,0,0" ver="3"/>
				<designed target="FontColor" value="4278190080" ver="3"/>
				<designed target="TextAlignment" value="129" ver="3"/>
			</object>
			<object access-modifier="private" name="HideFlag" display-name="HideFlag" uuid="7976517d-6064-4a65-bd1a-6c662e0b1e42" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
					<body kind="javascript">
						<![CDATA[var newSize;

if (value) newSize = 0;
else newSize = 172;

Text_1.Height = (newSize>1)?(newSize+1):0;
Text_1.Width = (newSize>1)?(newSize+1):0;

]]>
					</body>
				</do-on>
			</object>
			<do-trace access-modifier="private" target="HideFlag" ver="3">
				<body>
					<![CDATA[(ActiveMode == 1)?(false):(true)]]>
				</body>
			</do-trace>
		</object>
		<do access-modifier="private" name="ConnectionStateChange" display-name="ConnectionStateChange" ver="3" type="" type-id="" form-by-id="true">
			<body kind="javascript">
				<![CDATA[//Устанавливаем статус соединения в панель состояния
var color;
var hint;
ConnectionState.ClearSoundQuery.Visible = false;
ConnectionState.ClearSoundQuery.Tooltip = "";

if (ApSource.ConnectionState == 2)
{
	color = 0xff70ff70;
	hint = "Соединение с сервером установлено";
	if ((Main_panel.private.ApItem.AdviseState == 4 || Main_panel.private.ApItem.AdviseState == 5) && Main_panel.private.ApItem.Path != "") //Статус подписки на тег очиски очереди звуков
	{
		ConnectionState.ClearSoundQuery.Visible = true; 
		ConnectionState.ClearSoundQuery.Tooltip = Main_panel.private.ApItem.Tag + ": " + Main_panel.private.ApItem.AdviseStateString.replace(/^.*:/i, ' Ошибка подписки на тег очистки очереди звуков:'); 
	}
}
else
{
	color = 0xffff0000;
	hint = "Соединение с сервером отсуствует";
}

ConnectionState.ConnectionServer.BrushColor = color;
ConnectionState.ConnectionServer.Tooltip = hint;
]]>
			</body>
		</do>
		<do access-modifier="private" name="ViewFilterStateChange" display-name="ViewFilterStateChange" ver="4" type="" type-id="">
			<body kind="javascript">
				<![CDATA[//Определяем состояние фильтра отображения, формируем строку общего фильтра отображения
var TableColumn=[];
var filter = false; // Флаг установленного фильтра
var commonFilter = {}; // Общий фильтр для всех столбцов
commonFilter['AND'] = []; // Все столбца объединяются по И
var jsonStr = ""; // Фильтр после парсинга
var columnId = ""; // Текущее название столбца

TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_1);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_2);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_3);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_4);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_5);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_6);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_7);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_8);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_9);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_10);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_14);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_17);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_19);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_20);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_21);

for (let i = 0; i < TableColumn.length; i++)
{	
	jsonStr =  TableColumn[i].JsonFilter;
	columnId = TableColumn[i].Id;
	if (jsonStr != "")
	{
		jsonStr  = StatePanel.ParseJSONViewFilter(jsonStr, columnId);
		// Формирование общей строки фильтра
		commonFilter['AND'].push(JSON.parse(jsonStr));
		//commonFilter += (commonFilter == "")?(jsonStr):(") AND (" + jsonStr);
		filter = true;
	}
}
// если установлен фильтр одного столбца
if (commonFilter['AND'].length == 1)
	commonFilter = commonFilter['AND'][0];

// Наличие фильтра подписки
SubscriptionFilterON = Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Filter != "";

ViewFilterStr = JSON.stringify(commonFilter);
ViewFilterON = filter;


]]>
			</body>
		</do>
		<do access-modifier="private" name="RequestFilterStateChange" display-name="RequestFilterStateChange" ver="3" type="" type-id="">
			<body kind="javascript">
				<![CDATA[//Определяем состояние фильтра запроса, выводим информацию в строку состояния.
RequestFilterON = false;
if (Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter != "") RequestFilterON = true;

]]>
			</body>
		</do>
		<do access-modifier="private" name="ParseJSONRequestFilter" display-name="ParseJSONRequestFilter" ver="3" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[//Алгоритм парсинга фильтра запроса

return Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter;

/* Классический формат
var resStr = "";
var signPattern = /([><=]+)/g;//Шаблон операнда (><=)

jsonStr = JSON.parse(jsonStr, function(key,value)
{
	//Если ключ - номер элемента массива, то возвращаем накополенную строку
	if (key >= 0) return resStr;
	//Если свойство есть массив, то образуем строку в виде суммы или произведения элементов
	if (Array.isArray(value))
	{
		resStr = "";
		for (let i = 0; i < value.length; i++)
		{
			if (key == "AND") value[i] = "(" + value[i] + ")";
			if (resStr == "") resStr = value[i];
			else resStr += " " + key + " " + value[i];
		}
		return resStr;
	}
	//Если ключ является операндом(=><), то вставляет операнд между словом и значением
	if (signPattern.test(key))
	{
		let index = resStr.search(/[0-9]/);//Ищем значение
		resStr = resStr.slice(0,index) + " " + key + " " + resStr.slice(index);
		return resStr;
	}
	//Если свойство не является объектом
	if (typeof(value) != "object") 
	{
		if (key != "severity" && key != "acked") resStr = key + " LIKE " + value; //Если свойство это не важность и не квитировано
		else if (key == "acked") resStr = key + " = " + value;//Если свойство это квитировано
		else resStr = key + " " + value;//Если свойство - просто строка
		return resStr;
	}
	if (key == "NOT")//Обратываем отрицание
	{
		resStr = key +"(" + resStr + ")";
	}
});

return jsonStr;

*/]]>
			</body>
			<param access-modifier="private" name="jsonStr" display-name="" uuid="6de862bc-ac86-47aa-b80d-ca1877551487" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		</do>
		<object access-modifier="private" name="ViewFilterON" display-name="ViewFilterON" uuid="b400aabb-aad7-4641-aa90-6b4fd033626b" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="4" event="ValueChanged">
				<body kind="om">
					<![CDATA[tooltip: string;

if (SubscriptionFilterON)
{
	tooltip = "Фильтр подписки: " + Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Filter;
}

if (ViewFilterON)
{
	if (tooltip == "")
		tooltip = "Фильтр пользователя: ";
	else tooltip +=  ", фильтр пользователя: ";
	tooltip +=  ViewFilterStr;
}

ViewFilterState.Image.Tooltip = tooltip;]]>
				</body>
			</do-on>
		</object>
		<do-trace access-modifier="private" target="Visible" ver="3">
			<body>
				<![CDATA[DisplayStatePanel]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="RequestFilterON" display-name="RequestFilterON" uuid="560b8bf0-fde2-4fd6-b989-313a059b8a51" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="4" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
	RequestFilterState.Image.Tooltip = "Фильтр пользователя: " + ParseJSONRequestFilter(Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter);
else RequestFilterState.Image.Tooltip = "";

]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="SubscriptionFilterON" display-name="SubscriptionFilterON" uuid="8a58ea63-f3c9-48e2-b7f7-02939e3f26da" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
		<do access-modifier="private" name="ParseJSONViewFilter" display-name="ParseJSONViewFilter" ver="4" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[//Алгоритм парсинга фильтра столбцов

var signPattern = /([><=]+)/g; // Шаблон операнда (><=)
var columnName = identifier; // Имя столбца

// Преобразование строки в объект
try {
	var jsonObj = JSON.parse(jsonStr); 
} catch (err) {
	return "";
}

// Рекурсивная функция прохода по свойствам объекта. 
// Если свойство объекта есть конечное значение, то считается, что свойство - идентификатор столбца.
function setProp(obj) {
	for (let prop in obj) {
		/*log("obj: " + JSON.stringify(obj));
		log("prop: " + prop);
		log("obj[prop]: " + JSON.stringify(obj[prop]));*/
		if (typeof(obj[prop]) == "object") setProp(obj[prop]);
		else if (prop == "data" || prop == "text") {
			obj[`${columnName}`] = obj[prop];
			delete obj[prop];
		}
	}
	return obj;
}

jsonStr = JSON.stringify(setProp(jsonObj));
return jsonStr;

/* Классический формат
var resStr = "";
var signPattern = /([><=]+)/g; // Шаблон операнда (><=)
var columnName = identifier; // Имя столбца

jsonStr = JSON.parse(jsonStr, function(key,value) {
	//Если ключ - номер элемента массива, то возвращаем накополенную строку
	if (key >= 0 && typeof(value) == "object") return resStr;
	//Если свойство есть массив, то образуем строку в виде суммы или произведения элементов
	if (Array.isArray(value)) {
		resStr = "";
		for (let i = 0; i < value.length; i++) {
			if (key == "AND") value[i] = "(" + value[i] + ")";
			if (resStr == "") resStr = value[i];
			else resStr += " " + key + " " + value[i];
		}
		return resStr;
	}
	//Если ключ является операндом(=><), то вставляет операнд между словом и значением
	if (signPattern.test(key)) {
		let index = resStr.search(/[0-9]/);//Ищем значение
		resStr = resStr.slice(0,index) + " " + key + " " + resStr.slice(index);
		return resStr;
	}
	//Если свойство не является объектом
	if (typeof(value) != "object") {
		if (columnName != "severity" && columnName != "acked") resStr = columnName + " LIKE " + value; //Если свойство это не важность и не квитировано
		else if (columnName == "acked") resStr = columnName + " = " + value;//Если свойство это квитировано
		else resStr = columnName + value;//Если свойство это просто строка
		return resStr;
	}
	//Обрабатываем отрицание
	if (key == "NOT") {
		resStr = key +"(" + resStr + ")";
	}
});

return jsonStr;
*/]]>
			</body>
			<param access-modifier="private" name="jsonStr" display-name="" uuid="3d018398-617c-48dd-8287-2bb17c70e40f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
			<param access-modifier="private" name="identifier" display-name="" uuid="799c4289-c3cc-4933-8bcb-06e16b6242f4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		</do>
		<object access-modifier="private" name="ViewFilterStr" display-name="ViewFilterStr" uuid="ff1234b3-4d0c-4cc7-a593-cdb34448adeb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	</object>
	<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="abb184c3-7508-4e72-82a7-7b87f9ff2d07" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="2">
		<designed target="Orientation" value="2" ver="2"/>
		<designed target="Gap" value="0" ver="2"/>
	</object>
	<object access-modifier="private" name="Sound_1" display-name="Sound_1" uuid="8b331fe5-06ea-41c0-b2f5-7432976b4c29" base-type="Sound" base-type-id="e4bc00dd-3f63-4719-874d-83420bce71b5" ver="2">
		<designed target="LoopCount" value="1" ver="2"/>
		<designed target="Volume" value="0.8" ver="2"/>
		<designed target="Path" value="" ver="2"/>
		<designed target="Active" value="false" ver="2"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="AllLoopsPlayed">
			<body kind="om">
				<![CDATA[//if (!Mute) SkipCurrentSound();
SkipCurrentSound();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Timer_Sounds_Queue" display-name="Timer_Sounds_Queue" uuid="4477c52d-e474-4d46-aad6-0ec0e9ed7f8b" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="2">
		<designed target="Period" value="1000" ver="2"/>
		<designed target="Active" value="true" ver="2"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="OnTimer">
			<body kind="om">
				<![CDATA[Main_panel.private.Initializer();
if (!Sound_1.Active ) SkipCurrentSound();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="System_Start" display-name="System_Start" uuid="cd136ffd-157d-4fb0-82df-a83516c89e15" base-type="Initializer" base-type-id="6db89679-9299-4993-ad1a-0d086cd1c7d2" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Initialized">
			<body kind="om">
				<![CDATA[Main_panel.private.Initializer();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ApSource" display-name="ApSource" uuid="c35bff50-5526-470e-9991-290c195327e5" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" ver="2">
		<designed target="Active" value="true" ver="2"/>
		<init target="ParentSource" ver="3" ref="init_ApSource"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="OnConnectionStateChanged">
			<body kind="om">
				<![CDATA[StatePanel.ConnectionStateChange();//Проверяем состояние соединения

//Запуск оперативного режима
if (connectionState == 2 && Main_panel.private.InitComplete) Main_panel.private.func_Operative_mode(); ]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="File" display-name="File" uuid="4075513f-a6d1-4d84-aa31-b1542ec816e5" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="2"/>
	<object access-modifier="private" name="Network_1" display-name="Network_1" uuid="8c4569f7-a646-4d03-9d75-f26c01bb950b" base-type="Network" base-type-id="aa841b9c-0610-4150-8495-3bfad7484a73" ver="3"/>
	<object access-modifier="private" name="DebugTool_1" display-name="DebugTool_1" uuid="8d1f6e6d-0691-4fd2-8cd4-bd86d32b7a08" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="2"/>
	<object access-modifier="private" name="AcknowledgmentDoubleClick" display-name="Квитировать события повторным кликом по выделенной строке" uuid="2eae8ae4-70e1-4ecd-ad66-0256c0670895" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
	<object access-modifier="private" name="AllowAckSequence" display-name="Квитировать последовательность событий" uuid="57db8f18-5f0f-496c-a305-aee08bf19011" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="RequestAcknowledgmentComment" display-name="Запрашивать комментарий при квитировании" uuid="07f21067-1b6e-42eb-a103-c1bc96bdf292" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
	<object access-modifier="private" name="AllowAddComment" display-name="Разрешить добавлять комментарий" uuid="0c2d2d1f-924e-4e11-922b-a16844611e17" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="WriteComputerNameToComment" display-name="Дописывать название АРМ в комментарий квитирования" uuid="590e27e4-997f-47aa-adad-b613ba08e769" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (value) Main_panel.private.ComputerName = Network_1.ComputerName;
else Main_panel.private.ComputerName = "";]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="AcknowledgmentAvailable" display-name="Доступность кнопок квитирования" uuid="78b36445-92bd-4c73-a40a-17e46e005ece" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="ClearingCurrentEventsAvailable" display-name="Доступность кнопок функции Очистить список" uuid="6149c0af-b1af-4153-b047-ae2718aacc2c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="EditingSettingsAvailable" display-name="Доступность редактирования настроек" uuid="90773b69-8ac3-48fd-a469-f6f5c38a7b2f" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="ExportDataAvailability" display-name="Доступность сохранения данных в табличный файл" uuid="3b9329bb-e24e-4396-b98f-5ccfd6488d0e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="FilterAvailable" display-name="Доступность фильтрации" uuid="693496c8-d38f-4efe-a661-579d8ae8d8f2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="SoundPlaybackManagmentAvailable" display-name="Доступность кнопок управления проигрыванием звуков" uuid="6d6dc076-0245-4cfa-a432-a72454b6b16c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="SnapshotAvailable" display-name="Доступность кнопок функции Снимок" uuid="be020470-d6a9-428f-a8de-def00617d107" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="CurrentEventsAvailable" display-name="Доступность просмотра оперативных событий" uuid="1eb7b08f-a593-458f-b8a0-f4798e8ab8ab" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="EventHistoryAvailable" display-name="Доступность просмотра истории событий" uuid="befd4230-0478-4a86-ba13-cc922a18033f" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="PrintingAvailable" display-name="Доступность управления печатью" uuid="68d681e0-f9eb-4fbf-afac-f1cea3e3cf04" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="EventTableSortAvailability" display-name="Видимость команд сортировки" uuid="abb4516b-e334-4503-af2f-d0faee98b823" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="AllowActionInSourceColumn" display-name="Разрешить действия в столбце источник события" uuid="f5f921cb-ae01-4cb1-81a6-c32e7ef6bced" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ValueChanged">
			<body kind="om">
				<![CDATA[if(!AllowActionInSourceColumn)
{
	objectId=0;
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="objectId" display-name="objectID" uuid="d125c745-28f7-45f2-8332-e0509f9e11f5" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="2"/>
	<object access-modifier="private" name="UseSecurity" display-name="Использовать сервер безопасности для определения прав" uuid="47038155-957e-4eed-b9db-2b3ca634a21b" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="RequestEventsStart" display-name="Запрашивать активные события при запуске" uuid="886faca8-162a-4a6f-82aa-22c0fa304ac2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="FollowLatestEvent" display-name="Принудительное слежение за последним событием" uuid="d0e52f51-6de3-40c4-ac4e-0fa2df43302c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="javascript">
				<![CDATA[Main_panel.private.EventSettings.LineSelectionView(); //Определение стиля выделения строки
Main_panel.private.EventSettings.OtherEventsDecorating(Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator);
]]>
			</body>
		</do-on>
	</object>
	<do access-modifier="private" name="LogOn" display-name="LogOn" ver="2" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[// Процедура регистрации пользователя при отказе от использования Security
Main_panel.private.Initializer();
	if (Str.Length(Main_panel.private.UserName)==0)		// перед логином нового пользователя прежний пользователь должен разлогиниться
	{	
		Main_panel.private.UserName = userName;
		return true;
	}
return false;]]>
		</body>
		<param access-modifier="private" name="userName" display-name="" uuid="87e0e189-b711-4884-b599-875010ea5318" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
	</do>
	<do access-modifier="private" name="LogOff" display-name="LogOff" ver="2" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[Main_panel.private.Initializer();
if (Str.Length(Main_panel.private.UserName)!=0)
{
	Main_panel.private.UserName = "";
	return true;
}
else 
{
	return false;
}]]>
		</body>
	</do>
	<do access-modifier="private" name="AckSelected" display-name="AckSelected" ver="3" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255" form-by-id="true">
		<body kind="om">
			<![CDATA[Main_panel.private.Initializer();
Acked:bool = true;//Статус квитирования
AckSost:variant;//Статус квитирования в variant
bAckNeed:bool= false; // Потребность квитирования выделенных строк
end:bool = false;//Конец иттератора
severity:uint2; // Значение важности

Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstSelectedRow();
while (!end && !bAckNeed)
{
	if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
	{
 		AckSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
		severity = Variant.ToUint2(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
		
		if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
		bAckNeed = !Acked && !Main_panel.private.isInformativeEvent(severity);	
	}
	end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
}
Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();

if (!bAckNeed) return 0;  // Если неквитированных сообщений не найдено выходим с кодом ноль
// проверка разрешения
if (ActiveMode != 0) return -1; // Функция работает только в оперативном режиме 
if (!Main_panel.private.GetPermission("Разрешение- Квитирование")) 
{	
	if (Main_panel.private.PermissionResult==-1)	Main_panel.private.MessageNoLogOn.Invoke();	
	if (Main_panel.private.PermissionResult==-2)	Main_panel.private.MessageNoPermission.Invoke();	
	return -2;
}

if (AllowAckSequence) Main_panel.private.nAckMode = 3; // Устанавливаем режим квитирования последовательности
else Main_panel.private.nAckMode = 1;  // Устанавливаем режим квитирования выбранных сообщений
Main_panel.private.AckComment= Main_panel.private.ComputerName;//Комментарий квитирования по умолчанию
if (RequestAcknowledgmentComment)
{
	Main_panel.private.Open_CommentAck.initMode = 0;//Режим квитирования
	Main_panel.private.Open_CommentAck.Invoke();//Если требуется ввод комментария квитирования, то открываем окно ввода
}
else Main_panel.private.AckContinue.Invoke();
return -3;]]>
		</body>
	</do>
	<do access-modifier="private" name="AckAll" display-name="AckAll" ver="2" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255" form-by-id="true">
		<body kind="om">
			<![CDATA[//Функция квитирования всех сообщений
Main_panel.private.Initializer();
Acked:bool = true;//Статус квитирования
AckSost:variant;//Статус квитирования в variant
bAckNeed:bool = false; // Потребность квитирования выделенных строк
end:bool = false;//Окончание итератора
severity:uint2;// Важность

if (ActiveMode == 0)
{
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.FirstRow();
	while (!end && !bAckNeed)
	{
		if (Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetStatus() == 0)
		{
	 		AckSost = Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()); //Состояние "Квитировано" в случае, если квитирование не требуется равно EMPTY, если квитировано = true, если неквитировано = false;
			
			severity = Variant.ToUint2(Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.GetData(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()), 0); // Проверка на вхождение в группу важности "Прочие"
		
			if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
			bAckNeed = !Acked && !Main_panel.private.isInformativeEvent(severity);	
		}
		end = !Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.HasNext();
		Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Next();
	}
	Main_tables_Operative.Table_Operative_mode.TablePersistentIterator_1.Close();
}

if (!bAckNeed) return 0;  // Если неквитированных сообщений не найдено выходим с кодом ноль
// проверка разрешения
if (ActiveMode != 0) return -1; // Функция работает только в оперативном режиме 
if (!Main_panel.private.GetPermission("Разрешение- Квитирование")) 
{	
	if (Main_panel.private.PermissionResult==-1)	Main_panel.private.MessageNoLogOn.Invoke();	
	if (Main_panel.private.PermissionResult==-2)	Main_panel.private.MessageNoPermission.Invoke();	
	return -2;
}

Main_panel.private.nAckMode = 2;  // Устанавливаем режим квитирования всех сообщений
Main_panel.private.AckComment= Main_panel.private.ComputerName;//Комментарий квитирования по умолчанию
if (RequestAcknowledgmentComment)
{
	Main_panel.private.Open_CommentAck.initMode = 0;//Режим квитирования
	Main_panel.private.Open_CommentAck.Invoke();//Если требуется ввод комментария квитирования, то открываем окно ввода
}
else Main_panel.private.AckContinue.Invoke();
return -4;


]]>
		</body>
	</do>
	<do access-modifier="private" name="ClearOperativeEventList" display-name="ClearOperativeEventList" ver="3" type="" type-id="">
		<body kind="om">
			<![CDATA[Main_panel.private.Initializer();
if (!Main_panel.private.GetPermission("Разрешение- Очистка списка сообщений")) {	// проверка разрешения
	if (Main_panel.private.PermissionResult==-1)	Main_panel.private.MessageNoLogOn.Invoke();	
	if (Main_panel.private.PermissionResult==-2)	Main_panel.private.MessageNoPermission.Invoke();	
	return ;
}

Main_tables_Operative.Table_Operative_mode.TableModel.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.Clear();
Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.Clear();]]>
		</body>
	</do>
	<do access-modifier="private" name="ClearAcknowledgedEvents" display-name="ClearAcknowledgedEvents" ver="2" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da" form-by-id="true">
		<body kind="om">
			<![CDATA[Main_panel.private.Initializer();
if (!Main_panel.private.GetPermission("Разрешение- Очистка списка сообщений")) {	// проверка разрешения
	if (Main_panel.private.PermissionResult==-1)	Main_panel.private.MessageNoLogOn.Invoke();	
	if (Main_panel.private.PermissionResult==-2)	Main_panel.private.MessageNoPermission.Invoke();	
	return ;
}

currentRow:int4;
Acked:bool;
Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.FirstSelected();
while (!Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.End())
{
	currentRow= Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.CurrentRow;
	AckSost: var = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(Main_tables_Operative.Table_Operative_mode.MapRowToModel(currentRow),Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_7.GetIndex()));
	if (!Variant.IsEmpty(AckSost)) Acked = Variant.ToBool(AckSost,false); //Если поле "Квитировано" не пустое (требуется квитирование) то смотрим на статус квитирования
	if (Acked) Main_tables_Operative.Table_Operative_mode.TableModel.RemoveRow(Main_tables_Operative.Table_Operative_mode.MapRowToModel(currentRow));// при удалении строки, переход к следующей происходит автоматически
	else Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.Next(); 
}



]]>
		</body>
	</do>
	<object access-modifier="private" name="LookLatestEvent" display-name="Слежение за последним поступившим событием" uuid="6e8118f5-77d8-4e2b-848f-d19ae7cc44f7" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[Main_panel.private.tempAutoScroll = value; //Временная переменная]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Mute" display-name="Беззвучный режим включен" uuid="7ba040d0-ac5c-4bec-8016-2b34f1148e67" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ValueChanged">
			<body kind="om">
				<![CDATA[//Включаем-выключаем громкость воспроизведения
if (Value){
	Sound_1.Volume = 0;
	//Sound_1.Active = false;
	//Timer_Sounds_Queue.Active = false;
}
else
{
	Sound_1.Volume = 0.8;
	//Sound_1.Active = false;
	//Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.Clear();
	//Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.Clear();
	//Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.Clear();
	//Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.Clear();
	//Timer_Sounds_Queue.Active = true;
}
Main_panel.ToolBar.btnSndMute.Permission = Main_panel.ToolBar.btnSndMute.Permission; //Проверка разрешения кнопки на отображение]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="FileSystemAccess" display-name="Доступность файловой системы" uuid="c33dba5d-effd-4624-92c9-c416f223c74a" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<object access-modifier="private" name="ActiveConditionsList" display-name="Список активных условий" uuid="869ea3ea-cd27-43d7-8010-b5d9b8dc413d" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[Main_panel.private.func_Operative_mode();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ConfigurationFolder" display-name="Путь к папке с конфигурацией" uuid="3ad24066-7557-4a62-bd75-c82bdcd544bb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	<do access-modifier="private" name="SkipCurrentSound" display-name="SkipCurrentSound" ver="2" type="" type-id="">
		<body kind="javascript">
			<![CDATA[//Функция формирует очередь звуков событий и воспроизводит их
Main_panel.private.Initializer();
Main_panel.private.UpdateQueueModel(); // Обновление модели очереди активных алармов

var alarmQueue = []; // Массив очередей активных алармов
var queueSettings = []; // Массив параметров активных алармов
var soundPriority; // Приоритет воспроизведения звука
var soundEnabled; // Разрешение проигрывания звука
var soundRepeats; // Количество повторов звука
var currentRow; // Текущая строка
var fileName; // Имя звукового файла
var soundFolder; // Путь до папки звуков (относительный или абсолютный)
var soundFolderAbs; // Абсолютный путь до папки звуков

var soundQueue = ""; // Очередь звуковых файлов
var allCycleGroupsArePlayed = true; // Все циклические группы проиграли
var allFiniteGroupsArePlayed = true; // Все нециклические группы проиграли
var notCycleGroups = true; // Отсутствуют циклические группы
var notFiniteGroups = true; // Отсутствуют нециклические группы
var cycleQueueChange = false; // Отсутствуют циклические группы
var mode = -1; // Режим воспроизведения

alarmQueue[0] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1;
alarmQueue[1] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2;
alarmQueue[2] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3;
alarmQueue[3] = Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4;

queueSettings[0] = Main_panel.private.Range1;
queueSettings[1] = Main_panel.private.Range2;
queueSettings[2] = Main_panel.private.Range3;
queueSettings[3] = Main_panel.private.Range4;

Main_panel.private.Range1.SoundPriority;
Main_panel.private.Range1.nSoundRepeats;
Main_panel.private.Range1.SoundEnable;

Sound_1.Active = false; // Сбрасываем воспроизведение звука

//Проверяем, является ли указанный путь абсолютным
if (Main_panel.private.IsAbsolutePath(ConfigurationFolder))
{
	soundFolder = File.CombinePath(ConfigurationFolder, "Sounds");
	soundFolderAbs = soundFolder;
}
else if (ConfigurationFolder == "")
{
	soundFolder = File.CombinePath("AlarmSettings", "Sounds");
	soundFolderAbs = File.CombinePath(File.CombinePath(File.ProjectFolder, "resources"), soundFolder);
}
else
{
	soundFolder = File.CombinePath(File.CombinePath("AlarmSettings", ConfigurationFolder), "Sounds");
	soundFolderAbs = File.CombinePath(File.CombinePath(File.ProjectFolder, "resources"), soundFolder);
}

////////////////////////////////////////////////////////////////////
// Воспроизведение следующего звука в очереди
if (Main_panel.private.SoundQueue2!="") { 
	let sounds = Main_panel.private.SoundQueue2.split(","); //Преобразуем очередь звуков в элементы массива
	//log("Main_panel.private.SoundQueue2: " + sounds)
	fileName = sounds[0]+".wav";
	var soundPath = File.CombinePath(soundFolder, fileName);
	var soundPathAbs = File.CombinePath(soundFolderAbs, fileName);
	if (!File.Exists(soundPathAbs))
	{
		soundPath = File.CombinePath(soundFolder, "default.wav");
		soundPathAbs = File.CombinePath(soundFolderAbs, "default.wav");
	}
	if (File.Exists(soundPathAbs)){
		Sound_1.Path = soundPath;
		Sound_1.Active = true;
	}
	sounds.shift();//Удаляем первый элемент
	Main_panel.private.SoundQueue2 = sounds.toString();//Обновляем очередь воспроизведения
	return;
}
////////////////////////////////////////////////////////////////////
//Функция парсинга и воспроизведения строки очереди звуков
function SetSound(soundQueueString){
		var sSounds, tempArray;
	//	log(soundQueueString);
		sSounds = soundQueueString.split(";");//Отделяем звук объекта от звука сообщения
		//Проверяем, есть ли несколько звуков у сообщения
		if (/,/g.test(sSounds[1])) { 
			tempArray = sSounds[1].split(","); //Разделяем набор звуков поэлементно, формируем массив
			sSounds.pop();//Удаляем набор звуков из результирующего массива
			//Добавляем в массив по отдельности каждый указанный звук
			for (let i = 0; i < tempArray.length; i++) {
				if (tempArray[i] != "") sSounds.push(tempArray[i]);
			}
		}
		if (sSounds[0] == "" && sSounds.length > 0) sSounds.shift(); //Если нет звука объекта, удаляем первый элемент
		//Идёт проверка на запись расширения в названии звукового файла - удаляем
		for (let i = 0; i < sSounds.length; i++) {
			if (/(.wav)/g.test(sSounds[i])) sSounds[i] = sSounds[i].replace(/(.wav)/g,"");
			sSounds[i] = sSounds[i].trim();//Удаляем лишние пробелы в конце и в начале
			//log("sSounds["+i+"]: " + sSounds[i]);
		
			fileName = sSounds[0]+".wav";
			var soundPath = File.CombinePath(soundFolder, fileName);
			var soundPathAbs = File.CombinePath(soundFolderAbs, fileName);
			if (!File.Exists(soundPathAbs))
			{
				soundPath = File.CombinePath(soundFolder, "default.wav");
				soundPathAbs = File.CombinePath(soundFolderAbs, "default.wav");
			}
			if (File.Exists(soundPathAbs))
			{
				Sound_1.Path = soundPath; Sound_1.Active = true;
				//log(Sound_1.Path);
				// Если событие содержит несколько звуков, формируем очередь				
				if (sSounds.length > 1) {
					sSounds.shift();//Удаляем проигранный элемент
					Main_panel.private.SoundQueue2 = sSounds.toString(); //Формируем очередь в виде строки
				}
				break;
			}
			sSounds.shift();
			i--;
		}
}
//////////////////////////////////////////////////////////

//Заполнения флагов
for (let i = 0; i < queueSettings.length; i++) {
	// Игнорирование приоритета проигрывания при циклическом воспроизведении
	if (queueSettings[i].SoundEnable && queueSettings[i].nSoundRepeats == 0) queueSettings[i].SoundPriority = 0;
	
	// Запоминание рамера циклических очередей
	if (queueSettings[i].nSoundRepeats == 0 && queueSettings[i].QueueLength != alarmQueue[i].Length) cycleQueueChange = true;
	
	queueSettings[i].QueueLength = alarmQueue[i].Length;
	
	// Сброс счётчиков пустых нециклических очередей
	if (queueSettings[i].nSoundRepeats != 0 && alarmQueue[i].Length == 0) queueSettings[i].PriorityCount = queueSettings[i].SoundPriority;
	
	// Флаг отсутствия циклических сообщений
	if (queueSettings[i].SoundEnable && queueSettings[i].nSoundRepeats == 0 && alarmQueue[i].Length != 0) notCycleGroups = false; 
	// Флаг отсутствия нециклических сообщений
	if (queueSettings[i].SoundEnable && queueSettings[i].nSoundRepeats != 0 && 
		(queueSettings[i].SoundPriority != 0 && queueSettings[i].PriorityCount <= 0 || notCycleGroups) && alarmQueue[i].Length != 0) notFiniteGroups = false; 
	//	Все циклические сообщения отыграли 1 раз
	if (queueSettings[i].SoundEnable && queueSettings[i].nSoundRepeats == 0 && 
		alarmQueue[i].Length != 0 && !queueSettings[i].allSoundPlayed) allCycleGroupsArePlayed = false; 
	//	Все нециклические сообщения отыграли 1 раз
	if (queueSettings[i].SoundEnable && queueSettings[i].nSoundRepeats != 0 && 
		(queueSettings[i].SoundPriority != 0 && queueSettings[i].PriorityCount <= 0 || notCycleGroups) && alarmQueue[i].Length != 0 && !queueSettings[i].allSoundPlayed) allFiniteGroupsArePlayed = false; 
}

/*log("\nНет цикл.групп: " + notCycleGroups);
log("Все цикл.групп проиграли: " + allCycleGroupsArePlayed);
log("Нет нецикл.групп: " + notFiniteGroups);
log("Все нецикл.группы проиграли: " + allFiniteGroupsArePlayed);
log("Изменение циклической очереди: " + cycleQueueChange);*/

if (!notFiniteGroups && !allFiniteGroupsArePlayed) mode = 1; // Режим проигрывания нециклической группы
else if (!notFiniteGroups && allFiniteGroupsArePlayed) mode = 2; // Режим сброса счётчиков нециклической группы
else if (!notCycleGroups && !allCycleGroupsArePlayed) mode = 0; // Режим проигрывания циклической группы
else if (!notCycleGroups && allCycleGroupsArePlayed) mode = 3; // Режим сброса счётчиков циклической группы
if (cycleQueueChange) mode = 4; // Режим сброса счётчиков циклической группы

 
switch (mode) {
	case 0:
		//log("// Режим проигрывания циклической группы");
		for (let i = 0; i < alarmQueue.length; i++) {
			//if (queueSettings[i].SoundCount >= nSoundRepeats
			// Пропускаем нециклические группы или уже сыгранные
			if (queueSettings[i].nSoundRepeats != 0 || queueSettings[i].allSoundPlayed || alarmQueue[i].Length == 0) continue;
			// Воспроизводим непустую циклическую группу
			soundQueue = Main_panel.private.GetSoundString(i);
			// Если звук не назначен и группа НЕ "Прочие", назначаем файл по умолчанию
			if (soundQueue == "" && i != 3) soundQueue = "default.wav";
			if (soundQueue != "\\" && soundQueue != "") {
				SetSound(soundQueue); 
				break;
			}	
		}
		break;
	case 1:
		// Воспроизведение нециклических групп
		//log("// Режим проигрывания нециклической группы");
		//soundQueue = PlayFiniteGroup();
		for (let i = 0; i < alarmQueue.length; i++) {
			if (queueSettings[i].nSoundRepeats != 0 && queueSettings[i].SoundEnable && alarmQueue[i].Length != 0 && !queueSettings[i].allSoundPlayed && (queueSettings[i].PriorityCount <= 0 && queueSettings[i].SoundPriority != 0 || notCycleGroups)) {
				soundQueue = Main_panel.private.GetSoundString(i);
				// Если звук не назначен и группа НЕ "Прочие", назначаем файл по умолчанию
				//log("#"+i+": " + soundQueue);
				if (soundQueue == "" && i != 3) soundQueue = "default.wav";
				if (soundQueue != "\\" && soundQueue != "") {
					SetSound(soundQueue); 
					break;
				}	
			}
		}
		break;
	case 2:
		//log("// Режим сброса счётчиков нециклической группы");
		for (let i = 0; i < queueSettings.length; i++) {
			if (queueSettings[i].nSoundRepeats != 0 && queueSettings[i].allSoundPlayed) {
				Main_panel.private.ResetQueueModel(i); // Флаг проигрывания циклической 
				queueSettings[i].PriorityCount = queueSettings[i].SoundPriority;
			}
		}
		break;
	case 3:
		//log("// Режим сброса счётчиков циклической группы");
		for (let i = 0; i < queueSettings.length; i++) {
			if (queueSettings[i].nSoundRepeats == 0) Main_panel.private.ResetQueueModel(i);
			else if (alarmQueue[i].Length != 0) queueSettings[i].PriorityCount--; // Счётчик очередности проигрывания нециклических звуков 
			//(если <=0, значит группа нециклических звуков должна проигрываться)
		}
		break;
	case 4:
		//log("//Режим изменения циклической очереди");
		for (let i = 0; i < queueSettings.length; i++) {
			if (queueSettings[i].nSoundRepeats != 0) {
				Main_panel.private.ResetQueueModel(i);
				queueSettings[i].allSoundPlayed = false; // Флаг проигрывания циклической 
				queueSettings[i].PriorityCount = queueSettings[i].SoundPriority;
				
			} else queueSettings[i].allSoundPlayed = false;
		}
		break;
	default:
		//log("default");
		break;
}]]>
		</body>
	</do>
	<do access-modifier="private" name="ClearSoundQueue" display-name="ClearSoundQueue" ver="2" type="" type-id="">
		<body kind="om">
			<![CDATA[Main_panel.private.Initializer();
if (Main_panel.private.ApItem.AdviseState == 2)
{
	Main_panel.private.ApItem.TrySetValue(true);//Записываем и сбрасываем тег очистки очереди
	Main_panel.private.ApItem.TrySetValue(false);
}
else Main_panel.private.ClearSoundQueueLocal();

]]>
		</body>
	</do>
	<do access-modifier="private" name="SetAdvancedRequestFilterAsJson" display-name="SetAdvancedRequestFilterAsJson" ver="2" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="StringJSON" display-name="" uuid="6250d0c9-c77a-46bf-a2ce-53e36bfab5d4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
		<body kind="javascript">
			<![CDATA[//Функция устанавливает расширенный фильтр запроса по заданным условиям фильтрации. В случае неверного задания JSON-строки возвращает false
Main_panel.private.Initializer();
var error = false;
try 
{	
	Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter = StringJSON;
	Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.Reload();
} 
catch(err) 
{
	error = true;
	Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter = "";
}
StatePanel.RequestFilterStateChange();//Обновляем статус фильтра в строке
return !error;
]]>
		</body>
	</do>
	<do access-modifier="private" name="SetHistoricalInterval" display-name="SetHistoricalInterval" ver="2" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="t1" display-name="" uuid="4aee0b78-ec8a-4ecb-9d2d-ef98a54d0671" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="2"/>
		<param access-modifier="private" name="t2" display-name="" uuid="df9c6271-5e3f-4796-b875-be7331b9d414" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="2"/>
		<body kind="om">
			<![CDATA[//Проверяем корректность ввода дат запроса
Main_panel.private.Initializer();
if (t1 == 0 || t2 == 0 || t2 <= t1) return false;

Main_tables_Historical.Table_History_mode.TableModel_1.Clear();
Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.Mode=3;
Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalRangeStart = DateTime.ToUtc(t1);
Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.HistoricalRangeEnd = DateTime.ToUtc(t2);
Main_tables_Historical.Table_History_mode.TableModel_1.ApAlarmQuery_1.Reload(); 
Main_tables_Historical.Table_History_mode.TableModel_1.BeginReadAsync();
Main_panel.private.LoadingHistory = true;

Main_panel.private.ShowHistoricalInterval(t1, t2);
return true;]]>
		</body>
	</do>
	<do access-modifier="private" name="SetAdvancedFilterAsJson" display-name="SetAdvancedFilterAsJson" ver="4" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="javascript">
			<![CDATA[//Функция устанавливает расширенный фильтр отображения по заданным условиям фильтрации. В случае неверного задания JSON-строки возвращает false
Main_panel.private.Initializer();
var TableColumn=[];
var errors = 0;
var success = 0;
var number;

TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_1, Main_tables_Historical.Table_History_mode.Colum_1);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_2, Main_tables_Historical.Table_History_mode.Colum_2);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_3, Main_tables_Historical.Table_History_mode.Colum_3);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_4, Main_tables_Historical.Table_History_mode.Colum_4);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_5, Main_tables_Historical.Table_History_mode.Colum_5);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_6, Main_tables_Historical.Table_History_mode.Colum_6);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_7, Main_tables_Historical.Table_History_mode.Colum_7);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_8, Main_tables_Historical.Table_History_mode.Colum_8);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_9, Main_tables_Historical.Table_History_mode.Colum_9);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_10, Main_tables_Historical.Table_History_mode.Colum_10);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_14, Main_tables_Historical.Table_History_mode.Colum_14);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_17, Main_tables_Historical.Table_History_mode.Colum_17);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_19, Main_tables_Historical.Table_History_mode.Colum_19);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_20, Main_tables_Historical.Table_History_mode.Colum_20);
TableColumn.push(Main_tables_Operative.Table_Operative_mode.Colum_21, Main_tables_Historical.Table_History_mode.Colum_21);

//Записываем в соответствующий JSON-фильтр в входную строку, если возникает ошибка - возвращаем false, иначе - true
for (let i = 0; i < TableColumn.length; i++)
{
	if (TableColumn[i].Id == ColumnID)
	try
	{
		TableColumn[i].JsonFilter = FilterExpr;
		//Main_panel.private.ViewFilter.SetFilterView(ColumnID, ""); // Сброс сохраненного значения формы фильтра отображения
		success++;
	}
	catch(err)
	{
		errors++;
	}
}

//Выделение строки
if (JSON.parse(Main_tables_Operative.Table_Operative_mode.GetSelectedRows()) == "") Main_tables_Operative.Table_Operative_mode.SetSelectedRows("[0]");
if (JSON.parse(Main_tables_Historical.Table_History_mode.GetSelectedRows()) == "") Main_tables_Historical.Table_History_mode.SetSelectedRows("[0]");
StatePanel.ViewFilterStateChange();//Меняем состояние фильтра в строке
return errors==0 && success>0;
]]>
		</body>
		<param access-modifier="private" name="ColumnID" display-name="" uuid="ce24a175-287c-4523-8f83-afce106b505c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		<param access-modifier="private" name="FilterExpr" display-name="" uuid="907aba9e-51ea-4719-b083-d85b79f3ba84" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	</do>
	<do access-modifier="private" name="RequestRecentEvents" display-name="RequestRecentEvents" ver="3" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="javascript">
			<![CDATA[// Подгрузка исторических события в таблицу оперативного режима
Main_panel.private.Initializer();
var inputCondition = requestAdvancedFilterAsJson;

var AND = [];
var jsonString = "";

if (onlyNotAcked) {
	AND.push({"NOT":{"AND":[{"acked":true},{"ack_required":true}]}});
}

// Если задан JSON-фильтр, то формируем массив вместе с условием квитирования
if (inputCondition.length > 2) AND.push(JSON.parse(inputCondition));

if (AND.length == 0) jsonString = "";
if (AND.length == 1) jsonString = JSON.stringify(AND[0]);
if (AND.length > 1) jsonString = JSON.stringify({AND});

//log(jsonString);
Main_panel.private.DuplicateCheck.Value = true; // Флаг проверки на дублирование сообщений
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.HistoricalFilter = jsonString;
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.HistoryPreloadInterval = intervalDuration * 3600; // Устанавливаем интервал в секундах
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.RefreshAtStart = false; // Отключение загрузки активных событий
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Reload();
Main_tables_Operative.Table_Operative_mode.TableModel_1.BeginReadAsync();
Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.RefreshAtStart = RequestEventsStart.Value; // Возвращение состояния загрузки активных событий

]]>
		</body>
		<param access-modifier="private" name="intervalDuration" display-name="" uuid="328e2977-8e6b-41a9-92af-749a50e274d4" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<param access-modifier="private" name="onlyNotAcked" display-name="" uuid="97998d45-24d1-4a37-96e6-8a954d6cb24d" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
		<param access-modifier="private" name="requestAdvancedFilterAsJson" display-name="" uuid="ebcb9a78-385d-4fe9-9fb1-f11bcc831967" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	</do>
	<param access-modifier="private" name="init_ApSource" display-name="Ссылка на источник AP" uuid="55afd295-c048-4522-88c5-184b60aa1dc8" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" base-const="true" base-ref="true" ver="3"/>
	<param access-modifier="private" name="ClearSoundQueryTag " display-name="Тег сигнала очистки очереди звуков" uuid="5d9a4c75-1da5-4436-847b-8f49991d0a59" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	<init target="ClearSoundQueryTag " ver="3" value=""/>
	<object access-modifier="private" name="DisplayToolbar" display-name="Показывать панель инструментов" uuid="f6a2fd3e-4edf-4383-ad1a-e87f429188d3" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (!Main_panel.private.bInit) return;
SetSize(X,Y,here.Width,here.Height);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DisplayStatePanel" display-name="Показывать строку состояния" uuid="13cd9119-9249-4e9a-aa19-b85f8f100baa" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (!Main_panel.private.bInit) return;
SetSize(X,Y,here.Width,here.Height);]]>
			</body>
		</do-on>
	</object>
	<do access-modifier="private" name="LoadConfiguration" display-name="LoadConfiguration" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" form-by-id="true">
		<param access-modifier="private" name="bstrConfigName" display-name="" uuid="524ccacc-7451-4fac-ba72-a8421d8c3bb7" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		<body kind="javascript">
			<![CDATA[//Функция загрузки конфигурации
ConfigurationFolder = bstrConfigName;
Main_panel.private.Initializer();
var FolderPath;
var errorFlag = false;

//Проверяем, является ли указанный путь абсолютным
if (Main_panel.private.IsAbsolutePath(bstrConfigName)) FolderPath = bstrConfigName;
if (bstrConfigName  == "") FolderPath = File.CombinePath(File.ProjectFolder, Main_panel.private.ConfigPathDefault);
else FolderPath = File.CombinePath(File.CombinePath(File.ProjectFolder, Main_panel.private.ConfigPathDefault), bstrConfigName);

var ConfigTable="tableview.json";//вид таблицы
var ConfigToolbox="toolbox.json";//видимость элементов панели инструментов
var ConfigSeverity="severitygroups.json";//распределение групп важностей и проигрывания звуков
var ConfigSorting="sorting.json";//сортировка
var ConfigPatterns="commenttemplates.json";//шаблоны комментариев
var ConfigExport="export.json";//параметры экспорта
var ConfigEvents="eventstyles.json";//параметры событий

var ConfigJSONArray = [,,,];//Массив конфигураций в JSON-формате
var ConfigPathArray = [];//Массив путей файлов
var ColumnOper = [], ColumnHist = [];//Массивы стоблцов таблиц
var Order = [];//Массив порядка столбцов
var key;//Имя объекта-столбца

ConfigPathArray.push(File.CombinePath( FolderPath, ConfigTable));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigToolbox));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigSeverity));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigSorting));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigPatterns));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigExport));
ConfigPathArray.push(File.CombinePath( FolderPath, ConfigEvents));

var TableProperties;//Загружаемые параметры таблицы
var ToolBoxSet;//Загружаемые параметры таблицы
var SeveritySet;//Загружаемые параметры важностей
var SortingSet;//Загружаемые параметры сортировки
var Comments;//Загружаемые шаблоны комментариев
var Export;//Загружаемые параметры экспорта
var Events;//Загружаемые параметры событий

ColumnOper[0] = Main_tables_Operative.Table_Operative_mode.Colum_1;
ColumnOper[1] = Main_tables_Operative.Table_Operative_mode.Colum_2;
ColumnOper[2] = Main_tables_Operative.Table_Operative_mode.Colum_3;
ColumnOper[3] = Main_tables_Operative.Table_Operative_mode.Colum_4;
ColumnOper[4] = Main_tables_Operative.Table_Operative_mode.Colum_5;
ColumnOper[5] = Main_tables_Operative.Table_Operative_mode.Colum_6;
ColumnOper[6] = Main_tables_Operative.Table_Operative_mode.Colum_7;
ColumnOper[7] = Main_tables_Operative.Table_Operative_mode.Colum_8;
ColumnOper[8] = Main_tables_Operative.Table_Operative_mode.Colum_9;
ColumnOper[9] = Main_tables_Operative.Table_Operative_mode.Colum_10;
ColumnOper[10] = Main_tables_Operative.Table_Operative_mode.Colum_14;
ColumnOper[11] = Main_tables_Operative.Table_Operative_mode.Colum_17;
ColumnOper[12] = Main_tables_Operative.Table_Operative_mode.Colum_19;
ColumnOper[13] = Main_tables_Operative.Table_Operative_mode.Colum_20;
ColumnOper[14] = Main_tables_Operative.Table_Operative_mode.Colum_21;

ColumnHist[0] = Main_tables_Historical.Table_History_mode.Colum_1;
ColumnHist[1] = Main_tables_Historical.Table_History_mode.Colum_2;
ColumnHist[2] = Main_tables_Historical.Table_History_mode.Colum_3;
ColumnHist[3] = Main_tables_Historical.Table_History_mode.Colum_4;
ColumnHist[4] = Main_tables_Historical.Table_History_mode.Colum_5;
ColumnHist[5] = Main_tables_Historical.Table_History_mode.Colum_6;
ColumnHist[6] = Main_tables_Historical.Table_History_mode.Colum_7;
ColumnHist[7] = Main_tables_Historical.Table_History_mode.Colum_8;
ColumnHist[8] = Main_tables_Historical.Table_History_mode.Colum_9;
ColumnHist[9] = Main_tables_Historical.Table_History_mode.Colum_10;
ColumnHist[10] = Main_tables_Historical.Table_History_mode.Colum_14;
ColumnHist[11] = Main_tables_Historical.Table_History_mode.Colum_17;
ColumnHist[12] = Main_tables_Historical.Table_History_mode.Colum_19;
ColumnHist[13] = Main_tables_Historical.Table_History_mode.Colum_20;
ColumnHist[14] = Main_tables_Historical.Table_History_mode.Colum_21;


// Чтение из файла
//if (!File.Exists(FolderPath)) return false;//проверка на существование каталога
for (let i = 0; i < ConfigPathArray.length; i++)
{
	try
	{
		ConfigJSONArray[i] = File.ReadTextFile(ConfigPathArray[i]);
		switch (i)
		{
			//Чтение конфигурации таблицы
			case 0:
				TableProperties = JSON.parse(ConfigJSONArray[i]);
				for (let i = 0; i < ColumnOper.length; i++)
				{
					key = Object.keys(TableProperties.Columns[i]);
					ColumnOper[i].Title = TableProperties.Columns[i][`${key}`].Title;
					ColumnHist[i].Title = TableProperties.Columns[i][`${key}`].Title;
					ColumnOper[i].Width = TableProperties.Columns[i][`${key}`].Width;
					ColumnHist[i].Width = TableProperties.Columns[i][`${key}`].Width;
					ColumnOper[i].Hidden = TableProperties.Columns[i][`${key}`].Hidden;
					ColumnHist[i].Hidden = TableProperties.Columns[i][`${key}`].Hidden;
					ColumnOper[i].WidthResizeMode = TableProperties.Columns[i][`${key}`].WidthResizeMode;
					ColumnHist[i].WidthResizeMode = TableProperties.Columns[i][`${key}`].WidthResizeMode;
					ColumnOper[i].Font = TableProperties.Columns[i][`${key}`].Font;
					ColumnHist[i].Font = TableProperties.Columns[i][`${key}`].Font;
					ColumnOper[i].TitleFont = TableProperties.Columns[i][`${key}`].TitleFont;
					ColumnHist[i].TitleFont = TableProperties.Columns[i][`${key}`].TitleFont;
					Main_panel.private.widthColumn[`${key}`] = TableProperties.Columns[i][`${key}`].Width;//Запись ширины столбцов
					if (TableProperties.Columns[i][`${key}`].Index != null) Order.push(TableProperties.Columns[i][`${key}`].Index);
				}
				//Применение порядка столбцов
				if (Order.length == 15) Main_panel.private.CurrentColumnOrder = JSON.stringify(Order);
				Main_panel.private.ChangeColumnOrder(Main_panel.private.CurrentColumnOrder);
				//Проверка на корректность высоты строки
				if (TableProperties.RowHeight > 4 && TableProperties.RowHeight <= 200)
				{
					Main_tables_Operative.Table_Operative_mode.RowHeight = TableProperties.RowHeight;
					Main_tables_Historical.Table_History_mode.RowHeight = TableProperties.RowHeight;
				}
				//Проверка на корректность высоты заголовка
				if (TableProperties.TitleHeight > 4 && TableProperties.TitleHeight <= 200)
				{
					Main_tables_Operative.Table_Operative_mode.HeaderHeight = TableProperties.TitleHeight;
					Main_tables_Historical.Table_History_mode.HeaderHeight = TableProperties.TitleHeight;
				}
				break;
			//Чтение конфигурации панели инструментов
			case 1:
				ToolBoxSet = JSON.parse(ConfigJSONArray[i]);
				Main_panel.ToolBar.btnOperMode.HideFlag.Value = ToolBoxSet.btnOperMode.Hidden;
				Main_panel.ToolBar.btnHistMode.HideFlag.Value = ToolBoxSet.btnHistMode.Hidden;
				Main_panel.ToolBar.btnSettings.HideFlag.Value = ToolBoxSet.btnSettings.Hidden;
				Main_panel.ToolBar.btnExport.HideFlag.Value = ToolBoxSet.btnExport.Hidden;
				Main_panel.ToolBar.btnPrint.HideFlag.Value = ToolBoxSet.btnPrint.Hidden;
				Main_panel.ToolBar.btnFiltr.HideFlag.Value = ToolBoxSet.btnFiltr.Hidden;
				Main_panel.ToolBar.btnFiltrList.HideFlag.Value = ToolBoxSet.btnFiltr.Hidden;
				Main_panel.ToolBar.RecHistory.HideFlag.Value = ToolBoxSet.RecHistory.Hidden;
				Main_panel.ToolBar.btnAckSel.HideFlag.Value = ToolBoxSet.btnAckSel.Hidden;
				Main_panel.ToolBar.btnAckAll.HideFlag.Value = ToolBoxSet.btnAckAll.Hidden;
				Main_panel.ToolBar.btnClearAll.HideFlag.Value = ToolBoxSet.btnClearAll.Hidden;
				Main_panel.ToolBar.btnSnapshot.HideFlag.Value = ToolBoxSet.btnSnapshot.Hidden;
				Main_panel.ToolBar.btnSndClear.HideFlag.Value = ToolBoxSet.btnSndClear.Hidden;
				Main_panel.ToolBar.btnSndNext.HideFlag.Value = ToolBoxSet.btnSndNext.Hidden;
				Main_panel.ToolBar.btnSndMute.HideFlag.Value = ToolBoxSet.btnSndMute.Hidden;
				Main_panel.ToolBar.btnSort.HideFlag.Value = ToolBoxSet.btnSort.Hidden;
				Main_panel.ToolBar.btnLogin.HideFlag.Value = ToolBoxSet.btnLogin.Hidden;
				break;
			//Чтение конфигурации важностей
			case 2:
				SeveritySet = JSON.parse(ConfigJSONArray[i]);
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.JsonFilter = SeveritySet.ApAlarmQueue_1.Severity;
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.JsonFilter = SeveritySet.ApAlarmQueue_2.Severity;
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.JsonFilter = SeveritySet.ApAlarmQueue_3.Severity;
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.JsonFilter = SeveritySet.ApAlarmQueue_4.Severity;
				
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.severityArray = Main_panel.private.GapToArray(Main_panel.private.SeverityJSONtoString(SeveritySet.ApAlarmQueue_1.Severity));
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.severityArray = Main_panel.private.GapToArray(Main_panel.private.SeverityJSONtoString(SeveritySet.ApAlarmQueue_2.Severity));
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.severityArray = Main_panel.private.GapToArray(Main_panel.private.SeverityJSONtoString(SeveritySet.ApAlarmQueue_3.Severity));
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.severityArray = Main_panel.private.GapToArray(Main_panel.private.SeverityJSONtoString(SeveritySet.ApAlarmQueue_4.Severity));
				
				//Обновляем очереди активных алармов
				Main_tables_Operative.Table_Operative_mode.TableModel_1.ApAlarmQuery_1.Reload();
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.Reload();
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_2.Reload();
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_3.Reload();
				Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_4.Reload();

				Main_panel.private.Range1.SoundEnable = SeveritySet.ApAlarmQueue_1.SoundEnabled;
				Main_panel.private.Range1.nSoundRepeats = SeveritySet.ApAlarmQueue_1.SoundRepeats;
				Main_panel.private.Range1.SoundPriority = SeveritySet.ApAlarmQueue_1.SoundPriority;
				Main_panel.private.Range2.SoundEnable = SeveritySet.ApAlarmQueue_2.SoundEnabled;
				Main_panel.private.Range2.nSoundRepeats = SeveritySet.ApAlarmQueue_2.SoundRepeats;
				Main_panel.private.Range2.SoundPriority = SeveritySet.ApAlarmQueue_2.SoundPriority;
				Main_panel.private.Range3.SoundEnable = SeveritySet.ApAlarmQueue_3.SoundEnabled;
				Main_panel.private.Range3.nSoundRepeats = SeveritySet.ApAlarmQueue_3.SoundRepeats;
				Main_panel.private.Range3.SoundPriority = SeveritySet.ApAlarmQueue_3.SoundPriority;
				Main_panel.private.Range4.tempSoundEnable = SeveritySet.ApAlarmQueue_4.SoundEnabled;
				Main_panel.private.Range4.nSoundRepeats = SeveritySet.ApAlarmQueue_4.SoundRepeats;
				Main_panel.private.Range4.SoundPriority = SeveritySet.ApAlarmQueue_4.SoundPriority;
				NotAckOtherEvents.Value = NotAckOtherEvents.Value;
				break;
			//Чтение конфигурации сортировки
			case 3:
				SortingSet = JSON.parse(ConfigJSONArray[i]);
				//Сбрасываем текущую сортировку
				for (let i = 0; i < ColumnOper.length; i++)
				{
					ColumnOper[i].SortingEnabled = false;
					ColumnHist[i].SortingEnabled = false;
				}
				Main_tables_Operative.Table_Operative_mode.ApplySort();
				Main_tables_Historical.Table_History_mode.ApplySort();
				//Применение загруженной конфигурации
				for (let i = 0; i < ColumnOper.length; i++)
				{
					key = Object.keys(SortingSet.Columns[i]);
					ColumnOper[i].SortingEnabled = SortingSet.Columns[i][`${key}`].SortingEnabled;
					ColumnHist[i].SortingEnabled = SortingSet.Columns[i][`${key}`].SortingEnabled;
					ColumnOper[i].SortPriority = SortingSet.Columns[i][`${key}`].SortPriority;
					ColumnHist[i].SortPriority = SortingSet.Columns[i][`${key}`].SortPriority;
					ColumnOper[i].SortOrder = SortingSet.Columns[i][`${key}`].SortOrder;
					ColumnHist[i].SortOrder = SortingSet.Columns[i][`${key}`].SortOrder;
				}
				Main_tables_Operative.Table_Operative_mode.ApplySort();
				Main_tables_Historical.Table_History_mode.ApplySort();
				Main_panel.private.CheckDefaultSorting();
				break;
			//Чтение конфигурации шаблонов
			case 4:
				Comments = JSON.parse(ConfigJSONArray[i]);
				Main_panel.private.CommentPattern.PatternsTable.Reset();
				Main_panel.private.CommentPattern.PatternsTable.AddColumn("Patterns","","","","string",false,true);
				for (let i = 0; i < Comments.CommentTemplates.length; i++)
				{
					Main_panel.private.CommentPattern.PatternsTable.AddRow();
					Main_panel.private.CommentPattern.PatternsTable.SetCellData(i,0,Comments.CommentTemplates[i]);
				}
			//Чтение конфигурации шаблонов
			case 5:
				Export = JSON.parse(ConfigJSONArray[i]);
				Main_panel.private.ExportPath = Export.Path;
				Main_panel.private.ViewColumnSettings.Value = Export.ViewColumnSettings;
				break;
			//Чтение конфигурации событий
			case 6:
				Events = JSON.parse(ConfigJSONArray[i]);
				Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator = Events.OperTableDecorator;
				Main_tables_Historical.Table_History_mode.TableDecorator_1.JsonDecorator = Events.HistTableDecorator;
				
				Main_panel.private.EventSettings.OtherEventsDecorating(Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator);
				Main_panel.private.EventSettings.LineSelectionView();
				
				Main_panel.private.EventSettings.DefColBackground = Events.DefColBackground;
				Main_panel.private.EventSettings.DefColText = Events.DefColText;
				Main_panel.private.EventSettings.AckColBackground = Events.AckColBackground;
				Main_panel.private.EventSettings.AckColText = Events.AckColText;
				Main_panel.private.EventSettings.SelectEventsCol = Events.SelectEventsCol;
				Main_panel.private.EventSettings.AckStyleMode = Events.AckStyleMode;
				if (Events.Table.length == 0)
				{
					Main_panel.private.EventSettings.AddDefSet();
					continue;
				}
				Main_panel.private.EventSettings.DecoratorSettings.Clear();
				for (let i = 0; i < Events.Table.length; i++)
				{
					Main_panel.private.EventSettings.DecoratorSettings.AddRow();
					for (let j = 0; j < Events.Table[i].length; j++)
					{
						Main_panel.private.EventSettings.DecoratorSettings.SetCellData(i,j,Events.Table[i][j]);
					}
				}
				break;
		}
	}
	catch(error)
	{
		log("Exception in 'LoadConfiguration': "+error);
		errorFlag = true;
		if (Main_panel.private.EventSettings.DecoratorSettings.GetRowCount() == 0) Main_panel.private.EventSettings.AddDefSet();
		continue;
	}
}
return !errorFlag;
]]>
		</body>
	</do>
	<object access-modifier="private" name="DisplayToolbarAtStartup" display-name="Отображать панель инструментов при запуске" uuid="90718164-01cc-4071-99ab-c54406b0a0fb" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (!Main_panel.private.bInit && !value) Main_panel.LayoutWeight_1 = 0;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DisplayStatePanelAtStartup" display-name="Отображать строку состояния при запуске" uuid="e12d71b4-b40e-4d97-b78e-bf82caa9c213" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<do access-modifier="private" name="SetSize" display-name="SetSize" ver="3" type="" type-id="" form-by-id="true">
		<param access-modifier="private" name="coordX" display-name="" uuid="f811a132-5084-4629-b611-5af06cb40695" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<param access-modifier="private" name="coordY" display-name="" uuid="9f6c31d4-e0df-46a6-9efb-83c77a15bd3c" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<param access-modifier="private" name="width" display-name="" uuid="e9f3f9ed-e248-49ed-ae1b-d97242b0c3ec" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<param access-modifier="private" name="height" display-name="" uuid="9de4eb4e-6433-433f-9a92-e37662f4090d" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<body kind="om">
			<![CDATA[//Функция изменения размера типа и объектов с обновлением разметки 
Main_panel.private.Initializer();
Height = height;
Width = width;
X = coordX;
Y = coordY;

Main_panel.LayoutWeight_1.Weight = Math.Ceil(30/height*100);//Вычисляем вес разметки панели инструментов так, чтобы высота была ~30
StatePanel.LayoutWeight_1.Weight = Math.Ceil(25/height*100);//Вычисляем вес разметки строки состояния так, чтобы высота была ~25

//Определяем, есть ли разрешение на отображение панелей
if (!DisplayToolbar.Value) Main_panel.LayoutWeight_1.Weight = 0;
if (!DisplayStatePanel.Value) StatePanel.LayoutWeight_1.Weight = 0;
Main_panel.Visible = DisplayToolbar.Value;
StatePanel.Visible = DisplayStatePanel.Value;

//Определяем вес активной таблицы
if (ActiveMode == 0) 
{
	Main_tables_Operative.LayoutWeight_1.Weight = 100 - Main_panel.LayoutWeight_1.Weight - StatePanel.LayoutWeight_1.Weight;
	Main_tables_Historical.LayoutWeight_1.Weight = 0;
}
else
{
	Main_tables_Historical.LayoutWeight_1.Weight = 100 - Main_panel.LayoutWeight_1.Weight - StatePanel.LayoutWeight_1.Weight;
	Main_tables_Operative.LayoutWeight_1.Weight = 0;
	Main_tables_Historical.StatusBar.SetVisible();
}



]]>
		</body>
	</do>
	<object access-modifier="private" name="HideColumnTitle" display-name="Скрыть заголовки столбцов" uuid="faf31b16-8145-4ccf-95c5-dde50f180a4c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="LineTransfer" display-name="Перенос строк" uuid="47a17ebe-fc27-497e-804a-6ba458040437" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="AlwaysOnTopForm" display-name="Поверх всех окон" uuid="c3b6675a-cb2a-4075-a8ff-e5ef19abf862" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="HideAckedEvents" display-name="Не отображать неактивные квитированные события" uuid="baa5d648-783b-4506-a953-ad1efa180445" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="NotAckOtherEvents" display-name="Не требовать квитирования группы Прочие" uuid="26ae491e-f220-4db4-84aa-34af9844d81c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator != "")
{
	Main_panel.private.EventSettings.OtherEventsDecorating(Main_tables_Operative.Table_Operative_mode.TableDecorator_1.JsonDecorator);
}

if (!value) Main_panel.private.Range4.SoundEnable = Main_panel.private.Range4.tempSoundEnable;
else Main_panel.private.Range4.SoundEnable = false;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="SubscriptionAdvancedFilter" display-name="Фильтр подписки" uuid="7576fb62-1a32-4f91-9c6f-eff1953b2709" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="om">
				<![CDATA[Main_panel.private.func_Operative_mode();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowRelativeTag" display-name="Отображать относительный тег источника сообщения" uuid="60745d2b-7d79-41a3-b672-8de89ce9b8a4" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="EnableSortingOnGridHeader" display-name="Доступность сортировки по заголовкам столбцов таблицы" uuid="61395604-3551-4f0b-acd1-b7243a2d63c2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="GUIModificationAvailable" display-name="Видимость команд скрытия/отображения областей окна в контекстном меню" uuid="a3f9e3ba-92d4-405b-9871-d6707c31709e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="ShowMilliseconds" display-name="Отображать миллисекунды" uuid="dbcf4584-7a1c-418c-8078-7ef9b845e51a" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="IsFullAccessAllowed" display-name="Разрешить полный доступ" uuid="1965564e-e7bd-43e1-975e-5767cd476403" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<object access-modifier="private" name="ActiveMode" display-name="Активный режим работы (оперативный или исторический)" uuid="f22ad0e6-96f0-4a46-b71d-dfe71975bacd" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ValueChanged">
			<body kind="om">
				<![CDATA[Main_panel.private.Initializer();
Main_panel.private.CheckActiveMode(); // Проверка разрешения выбранного режима

timeLocal: uint8;
timeStart: uint8;

//Оперативный режим
if (value==0) Main_panel.private.OperTableEmpty = Main_tables_Operative.Table_Operative_mode.GetRowCount() == 0;
//Исторический режим
else 
{
	// Если не происходит загрузка исторических данных
	if (!Main_panel.private.LoadingHistory) 
	{
		
		timeLocal = DateTime.ToLocal(DateTime.UtcNow()); // Местное время
		timeStart = DateTime.AddHours(timeLocal, - DefaultHistoricalInterval); // Время для начала диапазона
		Main_panel.private.ShowHistoricalInterval(timeStart, timeLocal);
	}
	
	Main_panel.ToolBar.RecHistory.Set_Size(1); //Для корректировки разметки
	Main_panel.private.HistTableEmpty = Main_tables_Historical.Table_History_mode.GetRowCount() == 0;
}

Main_panel.private.SetTableParameters(); //Импорт параметров между таблицами
SetSize(X,Y,here.Width,here.Height);//Обновляем веса разметки для смены таблиц
Main_panel.private.ActiveModeInit = true;]]>
			</body>
		</do-on>
	</object>
	<init target="AcknowledgmentDoubleClick" ver="3" value="true"/>
	<init target="AllowAckSequence" ver="3" value="false"/>
	<init target="RequestAcknowledgmentComment" ver="3" value="true"/>
	<init target="AllowAddComment" ver="3" value="true"/>
	<init target="WriteComputerNameToComment" ver="3" value="true"/>
	<init target="AcknowledgmentAvailable" ver="3" value="true"/>
	<init target="ClearingCurrentEventsAvailable" ver="3" value="true"/>
	<init target="EditingSettingsAvailable" ver="3" value="true"/>
	<init target="ExportDataAvailability" ver="3" value="true"/>
	<init target="FilterAvailable" ver="3" value="true"/>
	<init target="SoundPlaybackManagmentAvailable" ver="3" value="true"/>
	<init target="SnapshotAvailable" ver="3" value="true"/>
	<init target="EventHistoryAvailable" ver="3" value="true"/>
	<init target="CurrentEventsAvailable" ver="3" value="true"/>
	<init target="PrintingAvailable" ver="3" value="true"/>
	<init target="EventTableSortAvailability" ver="3" value="true"/>
	<init target="AllowActionInSourceColumn" ver="3" value="true"/>
	<init target="UseSecurity" ver="3" value="false"/>
	<init target="RequestEventsStart" ver="3" value="true"/>
	<init target="FollowLatestEvent" ver="3" value="false"/>
	<init target="Mute" ver="3" value="false"/>
	<init target="FileSystemAccess" ver="3" value="true"/>
	<init target="ActiveConditionsList" ver="3" value="false"/>
	<init target="ConfigurationFolder" ver="3" value=""/>
	<init target="DisplayToolbar" ver="3" value="true"/>
	<init target="DisplayStatePanel" ver="3" value="true"/>
	<init target="DisplayToolbarAtStartup" ver="3" value="true"/>
	<init target="DisplayStatePanelAtStartup" ver="3" value="true"/>
	<init target="HideColumnTitle" ver="3" value="false"/>
	<init target="ActiveMode" ver="3" value="0"/>
	<init target="init_ApSource" ver="3">
		<object access-modifier="private" uuid="2a2346c1-e4a3-4fed-b771-68311def0fbd" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" ver="3">
			<designed target="Active" value="false" ver="3"/>
		</object>
	</init>
	<do access-modifier="private" name="SetAdvancedFilter" display-name="SetAdvancedFilter" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="javascript">
			<![CDATA[//Функция устанавливает фильтр отображения по заданным условиям фильтрации. 
Main_panel.private.Initializer();
//В случае неверного задания JSON-строки возвращает false
if (FilterExpr == "") return SetAdvancedFilterAsJson(ColumnID,"");

if (ColumnID == "message" || ColumnID == "source" || ColumnID == "actor_id" || ColumnID == "ack_comment") 
{
	//Если стоят двойные ковычки - ищется точное совпадение, если нет, то в строку добавляются **
	if (!/[""].+[""]/g.test(FilterExpr)) FilterExpr = FilterExpr.replace(/[А-Яа-яA-Za-z]+/,"*$&*");
	else FilterExpr = FilterExpr.replace(/["]["]/g,"");
	return SetAdvancedFilterAsJson(ColumnID,"{\"\":\"" + FilterExpr + "\"}");
	//return SetAdvancedFilterAsJson(ColumnID,"{\"value\":\"" + FilterExpr + "\"}");
}

if (ColumnID == "severity") 
{
	var signPattern = /[><=]+/g; //Шаблон знака
	var numberPattern = /\d+/g; //Шаблон знака
	return SetAdvancedFilterAsJson(ColumnID,"{\"" + FilterExpr.match(signPattern) + "\":{\"\":" + FilterExpr.match(numberPattern) + "}}");
	//return SetAdvancedFilterAsJson(ColumnID,"{\"" + FilterExpr.match(signPattern) + "\":" + FilterExpr.match(numberPattern) + "}");
}

]]>
		</body>
		<param access-modifier="private" name="ColumnID" display-name="" uuid="ce24a175-287c-4523-8f83-afce106b505c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		<param access-modifier="private" name="FilterExpr" display-name="" uuid="907aba9e-51ea-4719-b083-d85b79f3ba84" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	</do>
	<init target="AlwaysOnTopForm" ver="3" value="true"/>
	<init target="LookLatestEvent" ver="3" value="true"/>
	<object access-modifier="private" name="MaxVisibleOrdinaryEvents" display-name="Максимальное количество обычных событий" uuid="644e1c29-d417-4e7e-80e4-a59af163c492" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="javascript">
				<![CDATA[var sevArray = [];
var rowToRemove = [];
var currentRow;
var severityVal;
var match;
sevArray = Main_panel.private.GapToArray(Main_panel.private.SeverityJSONtoString(Main_tables_Operative.Table_Operative_mode.ApAlarmQueue_1.JsonFilter)).split(",");

Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.FirstSelected();
if (Main_tables_Operative.Table_Operative_mode.TableModel.GetRowCount() > value)
{
	while (!Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.End())
	{
		match = false;
		currentRow = Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.CurrentRow;
		severityVal = Main_tables_Operative.Table_Operative_mode.TableModel.GetCellData(currentRow, Main_tables_Operative.Table_Operative_mode.MapColumnToModel(Main_tables_Operative.Table_Operative_mode.Colum_6.GetIndex()))
		for (let i = 0; i < sevArray.length; i++)
		{
			if (severityVal == sevArray[i])
			{
				match = true;
				break;
			}
		}
		if (!match) rowToRemove.push(currentRow); //Если строка не относится к особо важным, то формируем массив
		Main_tables_Operative.Table_Operative_mode.TableModel_1.TableIterator_1.Next();
	}
}]]>
			</body>
		</do-on>
	</object>
	<init target="MaxVisibleOrdinaryEvents" ver="3" value="500"/>
	<designed target="ZValue" value="0" ver="3"/>
	<init target="LineTransfer" ver="3" value="false"/>
	<init target="HideAckedEvents" ver="3" value="false"/>
	<init target="NotAckOtherEvents" ver="3" value="false"/>
	<init target="SubscriptionAdvancedFilter" ver="3" value=""/>
	<designed target="Opacity" value="1" ver="3"/>
	<init target="ShowRelativeTag" ver="3" value="false"/>
	<do access-modifier="private" name="CancelHistoryQuery" display-name="CancelHistoryQuery" ver="3" type="" type-id="">
		<body kind="om">
			<![CDATA[Main_tables_Historical.Table_History_mode.TableModel_1.CancelReadAsync();]]>
		</body>
	</do>
	<do access-modifier="private" name="DisplayCurrentEventsSnapshot" display-name="DisplayCurrentEventsSnapshot" ver="3" type="" type-id="">
		<body kind="om">
			<![CDATA[Main_tables_Operative.Table_Operative_mode.TableModel_1.Frozen = true;
Main_panel.ToolBar.SnapshotON = Main_tables_Operative.Table_Operative_mode.TableModel_1.Frozen;]]>
		</body>
	</do>
	<do access-modifier="private" name="DisplayCurrentEvents" display-name="DisplayCurrentEvents" ver="3" type="" type-id="">
		<body kind="om">
			<![CDATA[Main_tables_Operative.Table_Operative_mode.TableModel_1.Frozen = false;
Main_panel.ToolBar.SnapshotON = Main_tables_Operative.Table_Operative_mode.TableModel_1.Frozen;]]>
		</body>
	</do>
	<init target="EnableSortingOnGridHeader" ver="3" value="true"/>
	<init target="GUIModificationAvailable" ver="3" value="true"/>
	<init target="ShowMilliseconds" ver="3" value="true"/>
	<init target="IsFullAccessAllowed" ver="3" value="true"/>
	<object access-modifier="private" name="DefaultHistoricalInterval" display-name="Интервал запроса истории по умолчанию, час" uuid="b7ea75ef-5d2e-4e7b-a27a-0ad2bb4ddca7" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="3"/>
	<init target="DefaultHistoricalInterval" ver="3" value="24"/>
	<param access-modifier="private" name="SecurityApplication" display-name="Имя приложения с правами безопасности" uuid="2bdd1f41-75b3-42fd-9c01-f2332c28e4a5" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	<init target="SecurityApplication" ver="4" value="Alpha.Alarms"/>
	<object access-modifier="private" name="HorizontalScrollBarPolicy" display-name="Режим отображения полосы горизонтальной прокрутки" uuid="b969e892-d231-4319-a5b3-a0867d0e4b9c" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="3"/>
	<object access-modifier="private" name="VerticalScrollBarPolicy" display-name="Режим отображения полосы вертикальной прокрутки" uuid="ef32a49b-1e2e-417e-bde2-5f7ae494d415" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="3"/>
	<init target="HorizontalScrollBarPolicy" ver="3" value="0"/>
	<init target="VerticalScrollBarPolicy" ver="3" value="0"/>
	<object access-modifier="private" name="ExportFileNameFormat" display-name="Формат имени файла экспорта" uuid="8c655d24-0c3e-4352-bc7d-7d4f0b7e6d1c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
</type>

